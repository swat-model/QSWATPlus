/* Generated by Cython 0.29.13 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "name": "QSWATPlus.dataInC",
        "sources": [
            "dataInC.pyx"
        ]
    },
    "module_name": "QSWATPlus.dataInC"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_13"
#define CYTHON_HEX_VERSION 0x001D0DF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #elif defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__QSWATPlus__dataInC
#define __PYX_HAVE_API__QSWATPlus__dataInC
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "dataInC.pyx",
  "stringsource",
};

/*--- Type declarations ---*/
struct __pyx_obj_9QSWATPlus_7dataInC_CellData;
struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody;
struct __pyx_obj_9QSWATPlus_7dataInC_LSUData;
struct __pyx_obj_9QSWATPlus_7dataInC_BasinData;
struct __pyx_obj_9QSWATPlus_7dataInC_ReachData;
struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData;
struct __pyx_obj_9QSWATPlus_7dataInC_LakeData;

/* "QSWATPlus/dataInC.pyx":99
 * # multiple separate reservoirs, but currently not implemented
 * # INLET means a reservoir was located at the outlet end of a channel by the user, and cannot be merged downstream
 * cdef enum ChannelRole:             # <<<<<<<<<<<<<<
 *     _INNER = 0
 *     _OUTLET = 1
 */
enum __pyx_t_9QSWATPlus_7dataInC_ChannelRole {
  __pyx_e_9QSWATPlus_7dataInC__INNER = 0,
  __pyx_e_9QSWATPlus_7dataInC__OUTLET = 1,
  __pyx_e_9QSWATPlus_7dataInC__INLET = 2
};

/* "QSWATPlus/dataInC.pyx":104
 *     _INLET = 2
 * 
 * cdef enum WaterRole:             # <<<<<<<<<<<<<<
 *     _UNKNOWN = 0
 *     _RESERVOIR = 1
 */
enum __pyx_t_9QSWATPlus_7dataInC_WaterRole {
  __pyx_e_9QSWATPlus_7dataInC__UNKNOWN = 0,
  __pyx_e_9QSWATPlus_7dataInC__RESERVOIR = 1,
  __pyx_e_9QSWATPlus_7dataInC__POND = 2
};

/* "QSWATPlus/dataInC.pyx":34
 * import math
 * 
 * cdef class CellData:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
struct __pyx_obj_9QSWATPlus_7dataInC_CellData {
  PyObject_HEAD
  struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData *__pyx_vtab;
  int cellCount;
  double area;
  double totalElevation;
  double totalSlope;
  double totalLatitude;
  double totalLongitude;
  int crop;
  int actHRUNum;
};


/* "QSWATPlus/dataInC.pyx":109
 *     _POND = 2
 * 
 * cdef class WaterBody:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody {
  PyObject_HEAD
  struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *__pyx_vtab;
  int cellCount;
  double area;
  double originalArea;
  double totalElevation;
  double totalLatitude;
  double totalLongitude;
  int id;
  int channelRole;
  int waterRole;
};


/* "QSWATPlus/dataInC.pyx":229
 *         return result
 * 
 * cdef class LSUData:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
struct __pyx_obj_9QSWATPlus_7dataInC_LSUData {
  PyObject_HEAD
  struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *__pyx_vtab;
  int cellCount;
  double area;
  double outletElevation;
  double sourceElevation;
  double channelLength;
  int channelOrder;
  double farElevation;
  double farDistance;
  double farPointX;
  double farPointY;
  double midPointX;
  double midPointY;
  double totalElevation;
  double totalSlope;
  double totalLatitude;
  double totalLongitude;
  double cropSoilSlopeArea;
  PyObject *hruMap;
  PyObject *cropSoilSlopeNumbers;
  PyObject *cropAreas;
  PyObject *originalCropAreas;
  PyObject *soilAreas;
  PyObject *originalSoilAreas;
  PyObject *slopeAreas;
  PyObject *originalSlopeAreas;
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *waterBody;
  int lastHru;
};


/* "QSWATPlus/dataInC.pyx":733
 *                 map1[key] += val
 * 
 * cdef class BasinData:             # <<<<<<<<<<<<<<
 *     """Data held about subbasin."""
 * 
 */
struct __pyx_obj_9QSWATPlus_7dataInC_BasinData {
  PyObject_HEAD
  struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *__pyx_vtab;
  PyObject *lsus;
  PyObject *mergedLsus;
  double farDistance;
  double minElevation;
  double maxElevation;
  int waterLanduse;
  int waterId;
};


/* "QSWATPlus/dataInC.pyx":1098
 *         return maxKey, maxVal
 * 
 * cdef class ReachData:             # <<<<<<<<<<<<<<
 *     """Location and elevation of points at ends of reach,
 *     draining from upper to lower.
 */
struct __pyx_obj_9QSWATPlus_7dataInC_ReachData {
  PyObject_HEAD
  double upperX;
  double upperY;
  double upperZ;
  double lowerX;
  double lowerY;
  double lowerZ;
};


/* "QSWATPlus/dataInC.pyx":1126
 *         self.lowerZ = z2
 * 
 * cdef class MergedChannelData:             # <<<<<<<<<<<<<<
 *     """Drainage area in square metres, length in metres, and slope in m/m for a collection of merged channels.
 *     """
 */
struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData {
  PyObject_HEAD
  struct __pyx_vtabstruct_9QSWATPlus_7dataInC_MergedChannelData *__pyx_vtab;
  double areaC;
  int order;
  double length;
  double slope;
  double minEl;
  double maxEl;
};


/* "QSWATPlus/dataInC.pyx":1164
 *         self.maxEl = max(self.maxEl, maxEl)
 * 
 * cdef class LakeData:             # <<<<<<<<<<<<<<
 *     """Data about lake defined by shapefile."""
 * 
 */
struct __pyx_obj_9QSWATPlus_7dataInC_LakeData {
  PyObject_HEAD
  PyObject *inChLinks;
  PyObject *lakeChLinks;
  int outChLink;
  PyObject *outPoint;
  PyObject *otherOutChLinks;
  double area;
  double elevation;
  PyObject *centroid;
  int waterRole;
};



/* "QSWATPlus/dataInC.pyx":34
 * import math
 * 
 * cdef class CellData:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */

struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData {
  void (*addCell)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, double, double, double, double, double);
  void (*addCells)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, int __pyx_skip_dispatch);
  void (*multiply)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, double, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData *__pyx_vtabptr_9QSWATPlus_7dataInC_CellData;


/* "QSWATPlus/dataInC.pyx":109
 *     _POND = 2
 * 
 * cdef class WaterBody:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */

struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody {
  void (*addCell)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, double, double, double, double);
  void (*addWater)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int, int __pyx_skip_dispatch);
  void (*multiply)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, double, int __pyx_skip_dispatch);
  void (*setInlet)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  void (*setOutlet)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  void (*setReservoir)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  void (*setPond)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  int (*isInlet)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  int (*isOutlet)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  int (*isUnknown)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  int (*isReservoir)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  int (*isPond)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *(*copy)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *__pyx_vtabptr_9QSWATPlus_7dataInC_WaterBody;


/* "QSWATPlus/dataInC.pyx":229
 *         return result
 * 
 * cdef class LSUData:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */

struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData {
  PyObject *(*cropSoilAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch);
  double (*cropSoilArea)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int __pyx_skip_dispatch);
  double (*cropArea)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int);
  PyObject *(*cropSoilSlopeAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int __pyx_skip_dispatch);
  PyObject *(*getDominantHRU)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  void (*redistribute)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, double, int __pyx_skip_dispatch);
  void (*redistributeNodataAndWater)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, PyObject *, int, int __pyx_skip_dispatch);
  void (*removeHRU)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int, int, int __pyx_skip_dispatch);
  void (*removeWaterHRUs)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch);
  void (*setCropAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch);
  void (*setSoilAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch);
  void (*setSlopeAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch);
  int (*nextHruNumber)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch);
  int (*getHruNumber)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int);
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *(*copy)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch);
  PyObject *(*copyHRUMap)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *);
  PyObject *(*copyCropSoilSlopeNumbers)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *);
  PyObject *(*copyAreaMap)(PyObject *);
  void (*merge)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch);
  PyObject *(*makeReservoir)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, double, int __pyx_skip_dispatch);
  void (*mergeMaps)(PyObject *, PyObject *);
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *__pyx_vtabptr_9QSWATPlus_7dataInC_LSUData;


/* "QSWATPlus/dataInC.pyx":733
 *                 map1[key] += val
 * 
 * cdef class BasinData:             # <<<<<<<<<<<<<<
 *     """Data held about subbasin."""
 * 
 */

struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData {
  PyObject *(*getLsus)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
  void (*addCell)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int, int, int, int, double, double, double, double, double, double, double, PyObject *, int __pyx_skip_dispatch);
  void (*merge)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int, int __pyx_skip_dispatch);
  void (*setAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, PyObject *, int, int __pyx_skip_dispatch);
  PyObject *(*cropAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch);
  PyObject *(*soilAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch);
  PyObject *(*slopeAreas)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch);
  int (*subbasinCellCount)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
  double (*subbasinArea)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
  double (*totalElevation)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
  double (*totalSlope)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
  void (*copyLsus)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *__pyx_vtabptr_9QSWATPlus_7dataInC_BasinData;


/* "QSWATPlus/dataInC.pyx":1126
 *         self.lowerZ = z2
 * 
 * cdef class MergedChannelData:             # <<<<<<<<<<<<<<
 *     """Drainage area in square metres, length in metres, and slope in m/m for a collection of merged channels.
 *     """
 */

struct __pyx_vtabstruct_9QSWATPlus_7dataInC_MergedChannelData {
  void (*add)(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *, double, int, double, double, double, double, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_MergedChannelData *__pyx_vtabptr_9QSWATPlus_7dataInC_MergedChannelData;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* DelItemInt.proto */
#define __Pyx_DelItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_DelItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_DelItem_Generic(o, to_py_func(i))))
static int __Pyx_DelItem_Generic(PyObject *o, PyObject *j);
static CYTHON_INLINE int __Pyx_DelItemInt_Fast(PyObject *o, Py_ssize_t i,
                                               int is_list, int wraparound);

/* py_dict_items.proto */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Items(PyObject* d);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod0.proto */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    (likely((cfunc)->func) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (PY_VERSION_HEX >= 0x030600B1 && likely((cfunc)->flag == METH_FASTCALL) ?\
            (PY_VERSION_HEX >= 0x030700A0 ?\
                (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0) :\
                (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL)) :\
          (PY_VERSION_HEX >= 0x030700A0 && (cfunc)->flag == (METH_FASTCALL | METH_KEYWORDS) ?\
            (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL) :\
            (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
               ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) :\
               __Pyx__CallUnboundCMethod0(cfunc, self)))))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

/* py_dict_clear.proto */
#define __Pyx_PyDict_Clear(d) (PyDict_Clear(d), 0)

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* dict_setdefault.proto */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value, int is_safe_type);

/* PyDictContains.proto */
static CYTHON_INLINE int __Pyx_PyDict_ContainsTF(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CStringEquals.proto */
static CYTHON_INLINE int __Pyx_StrEq(const char *, const char *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static void __pyx_f_9QSWATPlus_7dataInC_8CellData_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slope, double __pyx_v_x, double __pyx_v_y); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_8CellData_addCells(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cd, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_8CellData_multiply(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_x, double __pyx_v_y); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_addWater(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_wb, int __pyx_v_keepOriginal, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_multiply(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isUnknown(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_f_9QSWATPlus_7dataInC_9WaterBody_copy(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_getDominantHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_allowWater, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_redistribute(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_redistributeNodataAndWater(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_chLink, int __pyx_v_lscape, PyObject *__pyx_v_chLinksByLakes, CYTHON_UNUSED int __pyx_v_waterLanduse, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_removeHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_hru, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_removeWaterHRUs(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_waterLanduse, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setCropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_7LSUData_nextHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_7LSUData_getHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope); /* proto*/
static struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copy(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyHRUMap(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyCropSoilSlopeNumbers(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(PyObject *__pyx_v_amap); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_merge(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_makeReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_threshold, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(PyObject *__pyx_v_map1, PyObject *__pyx_v_map2); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_getLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slopeValue, double __pyx_v_distSt, double __pyx_v_distCh, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v__gv, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_merge(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_target, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_setAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_cropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_soilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_slopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinCellCount(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinArea(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_totalElevation(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_totalSlope(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_copyLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static void __pyx_f_9QSWATPlus_7dataInC_17MergedChannelData_add(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'QSWATPlus.dataInC' */
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_CellData = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_WaterBody = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_LSUData = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_BasinData = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_ReachData = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_MergedChannelData = 0;
static PyTypeObject *__pyx_ptype_9QSWATPlus_7dataInC_LakeData = 0;
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_CellData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_WaterBody__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LSUData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_BasinData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_ReachData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_MergedChannelData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *, PyObject *); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LakeData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "QSWATPlus.dataInC"
extern int __pyx_module_is_main_QSWATPlus__dataInC;
int __pyx_module_is_main_QSWATPlus__dataInC = 0;

/* Implementation of 'QSWATPlus.dataInC' */
static PyObject *__pyx_builtin_staticmethod;
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k__2[] = "*";
static const char __pyx_k_gv[] = "_gv";
static const char __pyx_k_wb[] = "wb";
static const char __pyx_k_x1[] = "x1";
static const char __pyx_k_x2[] = "x2";
static const char __pyx_k_y1[] = "y1";
static const char __pyx_k_y2[] = "y2";
static const char __pyx_k_z1[] = "z1";
static const char __pyx_k_z2[] = "z2";
static const char __pyx_k_add[] = "add";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_hru[] = "hru";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_area[] = "area";
static const char __pyx_k_copy[] = "copy";
static const char __pyx_k_crop[] = "crop";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_soil[] = "soil";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_topo[] = "topo";
static const char __pyx_k_areaC[] = "areaC";
static const char __pyx_k_count[] = "count";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_maxEl[] = "maxEl";
static const char __pyx_k_merge[] = "merge";
static const char __pyx_k_minEl[] = "minEl";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_slope[] = "slope";
static const char __pyx_k_table[] = "table";
static const char __pyx_k_areaCh[] = "areaCh";
static const char __pyx_k_chLink[] = "chLink";
static const char __pyx_k_distCh[] = "distCh";
static const char __pyx_k_distSt[] = "distSt";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_isPond[] = "isPond";
static const char __pyx_k_length[] = "length";
static const char __pyx_k_lscape[] = "lscape";
static const char __pyx_k_maxKey[] = "maxKey";
static const char __pyx_k_maxVal[] = "maxVal";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_target[] = "target";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_LSUData[] = "LSUData";
static const char __pyx_k_addCell[] = "addCell";
static const char __pyx_k_channel[] = "channel";
static const char __pyx_k_getLsus[] = "getLsus";
static const char __pyx_k_isInlet[] = "isInlet";
static const char __pyx_k_isclose[] = "isclose";
static const char __pyx_k_lastHru[] = "lastHru";
static const char __pyx_k_lsuData[] = "lsuData";
static const char __pyx_k_rel_tol[] = "rel_tol";
static const char __pyx_k_setPond[] = "setPond";
static const char __pyx_k_waterId[] = "waterId";
static const char __pyx_k_CellData[] = "CellData";
static const char __pyx_k_LakeData[] = "LakeData";
static const char __pyx_k_addCells[] = "addCells";
static const char __pyx_k_addWater[] = "addWater";
static const char __pyx_k_centroid[] = "centroid";
static const char __pyx_k_copyLsus[] = "copyLsus";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_isOutlet[] = "isOutlet";
static const char __pyx_k_multiply[] = "multiply";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_qgis_gui[] = "qgis.gui";
static const char __pyx_k_setAreas[] = "setAreas";
static const char __pyx_k_setInlet[] = "setInlet";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_strahler[] = "strahler";
static const char __pyx_k_BasinData[] = "BasinData";
static const char __pyx_k_ReachData[] = "ReachData";
static const char __pyx_k_WaterBody[] = "WaterBody";
static const char __pyx_k_cropAreas[] = "cropAreas";
static const char __pyx_k_elevation[] = "elevation";
static const char __pyx_k_isUnknown[] = "isUnknown";
static const char __pyx_k_landscape[] = "landscape";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_qgis_core[] = "qgis.core";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_removeHRU[] = "removeHRU";
static const char __pyx_k_resultHru[] = "resultHru";
static const char __pyx_k_setOutlet[] = "setOutlet";
static const char __pyx_k_soilAreas[] = "soilAreas";
static const char __pyx_k_waterRole[] = "waterRole";
static const char __pyx_k_allowWater[] = "allowWater";
static const char __pyx_k_cropNoData[] = "cropNoData";
static const char __pyx_k_isOriginal[] = "isOriginal";
static const char __pyx_k_itervalues[] = "itervalues";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_setdefault[] = "setdefault";
static const char __pyx_k_slopeAreas[] = "slopeAreas";
static const char __pyx_k_slopeValue[] = "slopeValue";
static const char __pyx_k_soilNoData[] = "soilNoData";
static const char __pyx_k_totalSlope[] = "totalSlope";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_PyQt5_QtGui[] = "PyQt5.QtGui";
static const char __pyx_k_channelArea[] = "channelArea";
static const char __pyx_k_channelData[] = "channelData";
static const char __pyx_k_dataInC_pyx[] = "dataInC.pyx";
static const char __pyx_k_dominantKey[] = "dominantKey";
static const char __pyx_k_farDistance[] = "farDistance";
static const char __pyx_k_isReservoir[] = "isReservoir";
static const char __pyx_k_slopeNoData[] = "slopeNoData";
static const char __pyx_k_PyQt5_QtCore[] = "PyQt5.QtCore";
static const char __pyx_k_channelsData[] = "channelsData";
static const char __pyx_k_cropSoilArea[] = "cropSoilArea";
static const char __pyx_k_distChNoData[] = "distChNoData";
static const char __pyx_k_distStNoData[] = "distStNoData";
static const char __pyx_k_getHruNumber[] = "getHruNumber";
static const char __pyx_k_keepOriginal[] = "keepOriginal";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_redistribute[] = "redistribute";
static const char __pyx_k_setCropAreas[] = "setCropAreas";
static const char __pyx_k_setReservoir[] = "setReservoir";
static const char __pyx_k_setSoilAreas[] = "setSoilAreas";
static const char __pyx_k_slopeNumbers[] = "slopeNumbers";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_subbasinArea[] = "subbasinArea";
static const char __pyx_k_waterLanduse[] = "waterLanduse";
static const char __pyx_k_cropSoilAreas[] = "cropSoilAreas";
static const char __pyx_k_existingWshed[] = "existingWshed";
static const char __pyx_k_makeReservoir[] = "makeReservoir";
static const char __pyx_k_nextHruNumber[] = "nextHruNumber";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_setSlopeAreas[] = "setSlopeAreas";
static const char __pyx_k_chLinksByLakes[] = "chLinksByLakes";
static const char __pyx_k_channelLengths[] = "channelLengths";
static const char __pyx_k_getDominantHRU[] = "getDominantHRU";
static const char __pyx_k_totalElevation[] = "totalElevation";
static const char __pyx_k_elevationNoData[] = "elevationNoData";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_removeWaterHRUs[] = "removeWaterHRUs";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_soilSlopeNumbers[] = "soilSlopeNumbers";
static const char __pyx_k_MergedChannelData[] = "MergedChannelData";
static const char __pyx_k_QSWATPlus_dataInC[] = "QSWATPlus.dataInC";
static const char __pyx_k_subbasinCellCount[] = "subbasinCellCount";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_cropSoilSlopeAreas[] = "cropSoilSlopeAreas";
static const char __pyx_k_cropSoilSlopeNumbers[] = "cropSoilSlopeNumbers";
static const char __pyx_k_pyx_unpickle_LSUData[] = "__pyx_unpickle_LSUData";
static const char __pyx_k_pyx_unpickle_CellData[] = "__pyx_unpickle_CellData";
static const char __pyx_k_pyx_unpickle_LakeData[] = "__pyx_unpickle_LakeData";
static const char __pyx_k_pyx_unpickle_BasinData[] = "__pyx_unpickle_BasinData";
static const char __pyx_k_pyx_unpickle_ReachData[] = "__pyx_unpickle_ReachData";
static const char __pyx_k_pyx_unpickle_WaterBody[] = "__pyx_unpickle_WaterBody";
static const char __pyx_k_redistributeNodataAndWater[] = "redistributeNodataAndWater";
static const char __pyx_k_landscapeCropSoilSlopeNumbers[] = "landscapeCropSoilSlopeNumbers";
static const char __pyx_k_QSWATPlus_A_QGIS_plugin_Create[] = "\n/***************************************************************************\n QSWATPlus\n                                 A QGIS plugin\n Create SWATPlus inputs\n                              -------------------\n        begin                : 2014-07-18\n        copyright            : (C) 2014 by Chris George\n        email                : cgeorge@mcmaster.ca\n ***************************************************************************/\n\n/***************************************************************************\n *                                                                         *\n *   This program is free software you can redistribute it and/or modify  *\n *   it under the terms of the GNU General Public License as published by  *\n *   the Free Software Foundation either version 2 of the License, or     *\n *   (at your option) any later version.                                   *\n *                                                                         *\n ***************************************************************************/\n \n Cython version of parts of hrus\n";
static const char __pyx_k_pyx_unpickle_MergedChannelData[] = "__pyx_unpickle_MergedChannelData";
static const char __pyx_k_Incompatible_checksums_s_vs_0x11[] = "Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x4e[] = "Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x5b[] = "Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x62[] = "Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x66[] = "Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x7e[] = "Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))";
static const char __pyx_k_Incompatible_checksums_s_vs_0x91[] = "Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))";
static const char __pyx_k_channelLandscapeCropSoilSlopeNum[] = "channelLandscapeCropSoilSlopeNumbers";
static PyObject *__pyx_n_s_BasinData;
static PyObject *__pyx_n_s_CellData;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x11;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x4e;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x5b;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x62;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x66;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x7e;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x91;
static PyObject *__pyx_n_s_LSUData;
static PyObject *__pyx_n_s_LakeData;
static PyObject *__pyx_n_s_MergedChannelData;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_n_s_PyQt5_QtCore;
static PyObject *__pyx_n_s_PyQt5_QtGui;
static PyObject *__pyx_n_s_QSWATPlus_dataInC;
static PyObject *__pyx_n_s_ReachData;
static PyObject *__pyx_n_s_WaterBody;
static PyObject *__pyx_n_s__2;
static PyObject *__pyx_n_s_add;
static PyObject *__pyx_n_s_addCell;
static PyObject *__pyx_n_s_addCells;
static PyObject *__pyx_n_s_addWater;
static PyObject *__pyx_n_s_allowWater;
static PyObject *__pyx_n_s_area;
static PyObject *__pyx_n_s_areaC;
static PyObject *__pyx_n_s_areaCh;
static PyObject *__pyx_n_s_centroid;
static PyObject *__pyx_n_s_chLink;
static PyObject *__pyx_n_s_chLinksByLakes;
static PyObject *__pyx_n_s_channel;
static PyObject *__pyx_n_s_channelArea;
static PyObject *__pyx_n_s_channelData;
static PyObject *__pyx_n_s_channelLandscapeCropSoilSlopeNum;
static PyObject *__pyx_n_s_channelLengths;
static PyObject *__pyx_n_s_channelsData;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_copyLsus;
static PyObject *__pyx_n_s_count;
static PyObject *__pyx_n_s_crop;
static PyObject *__pyx_n_s_cropAreas;
static PyObject *__pyx_n_s_cropNoData;
static PyObject *__pyx_n_s_cropSoilArea;
static PyObject *__pyx_n_s_cropSoilAreas;
static PyObject *__pyx_n_s_cropSoilSlopeAreas;
static PyObject *__pyx_n_s_cropSoilSlopeNumbers;
static PyObject *__pyx_kp_s_dataInC_pyx;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_distCh;
static PyObject *__pyx_n_s_distChNoData;
static PyObject *__pyx_n_s_distSt;
static PyObject *__pyx_n_s_distStNoData;
static PyObject *__pyx_n_s_dominantKey;
static PyObject *__pyx_n_s_elevation;
static PyObject *__pyx_n_s_elevationNoData;
static PyObject *__pyx_n_s_existingWshed;
static PyObject *__pyx_n_s_farDistance;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_getDominantHRU;
static PyObject *__pyx_n_s_getHruNumber;
static PyObject *__pyx_n_s_getLsus;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_gv;
static PyObject *__pyx_n_s_hru;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_isInlet;
static PyObject *__pyx_n_s_isOriginal;
static PyObject *__pyx_n_s_isOutlet;
static PyObject *__pyx_n_s_isPond;
static PyObject *__pyx_n_s_isReservoir;
static PyObject *__pyx_n_s_isUnknown;
static PyObject *__pyx_n_s_isclose;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_itervalues;
static PyObject *__pyx_n_s_keepOriginal;
static PyObject *__pyx_n_s_key;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_landscape;
static PyObject *__pyx_n_s_landscapeCropSoilSlopeNumbers;
static PyObject *__pyx_n_s_lastHru;
static PyObject *__pyx_n_s_length;
static PyObject *__pyx_n_s_lscape;
static PyObject *__pyx_n_s_lsuData;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_makeReservoir;
static PyObject *__pyx_n_s_math;
static PyObject *__pyx_n_s_maxEl;
static PyObject *__pyx_n_s_maxKey;
static PyObject *__pyx_n_s_maxVal;
static PyObject *__pyx_n_s_merge;
static PyObject *__pyx_n_s_minEl;
static PyObject *__pyx_n_s_multiply;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_nextHruNumber;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_BasinData;
static PyObject *__pyx_n_s_pyx_unpickle_CellData;
static PyObject *__pyx_n_s_pyx_unpickle_LSUData;
static PyObject *__pyx_n_s_pyx_unpickle_LakeData;
static PyObject *__pyx_n_s_pyx_unpickle_MergedChannelData;
static PyObject *__pyx_n_s_pyx_unpickle_ReachData;
static PyObject *__pyx_n_s_pyx_unpickle_WaterBody;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_qgis_core;
static PyObject *__pyx_n_s_qgis_gui;
static PyObject *__pyx_n_s_redistribute;
static PyObject *__pyx_n_s_redistributeNodataAndWater;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_rel_tol;
static PyObject *__pyx_n_s_removeHRU;
static PyObject *__pyx_n_s_removeWaterHRUs;
static PyObject *__pyx_n_s_resultHru;
static PyObject *__pyx_n_s_setAreas;
static PyObject *__pyx_n_s_setCropAreas;
static PyObject *__pyx_n_s_setInlet;
static PyObject *__pyx_n_s_setOutlet;
static PyObject *__pyx_n_s_setPond;
static PyObject *__pyx_n_s_setReservoir;
static PyObject *__pyx_n_s_setSlopeAreas;
static PyObject *__pyx_n_s_setSoilAreas;
static PyObject *__pyx_n_s_setdefault;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_slope;
static PyObject *__pyx_n_s_slopeAreas;
static PyObject *__pyx_n_s_slopeNoData;
static PyObject *__pyx_n_s_slopeNumbers;
static PyObject *__pyx_n_s_slopeValue;
static PyObject *__pyx_n_s_soil;
static PyObject *__pyx_n_s_soilAreas;
static PyObject *__pyx_n_s_soilNoData;
static PyObject *__pyx_n_s_soilSlopeNumbers;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_strahler;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_subbasinArea;
static PyObject *__pyx_n_s_subbasinCellCount;
static PyObject *__pyx_n_s_table;
static PyObject *__pyx_n_s_target;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_topo;
static PyObject *__pyx_n_s_totalElevation;
static PyObject *__pyx_n_s_totalSlope;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_waterId;
static PyObject *__pyx_n_s_waterLanduse;
static PyObject *__pyx_n_s_waterRole;
static PyObject *__pyx_n_s_wb;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_x1;
static PyObject *__pyx_n_s_x2;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_y1;
static PyObject *__pyx_n_s_y2;
static PyObject *__pyx_n_s_z1;
static PyObject *__pyx_n_s_z2;
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, int __pyx_v_count, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slope, double __pyx_v_x, double __pyx_v_y, int __pyx_v_crop); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_2addCells(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cd); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4multiply(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_factor); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_6__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_8__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody___init__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_v_count, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_x, double __pyx_v_y); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2addWater(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_wb, int __pyx_v_keepOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4multiply(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_factor); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_6setInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_8setOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_10setReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12setPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14isInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_16isOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_18isUnknown(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_20isReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_22isPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_24copy(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_26__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_28__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_2cropSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_4cropSoilArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_6cropSoilSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_8getDominantHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_allowWater); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10redistribute(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_factor); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12redistributeNodataAndWater(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_chLink, int __pyx_v_lscape, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14removeHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_hru, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_16removeWaterHRUs(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_waterLanduse); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_18setCropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_20setSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_22setSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_24nextHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_26copy(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_28merge(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_30makeReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_threshold); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_32__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_34__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_farDistance, PyObject *__pyx_v_waterId); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_2getLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_4addCell(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slopeValue, double __pyx_v_distSt, double __pyx_v_distCh, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v__gv); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_6getHruNumber(PyObject *__pyx_v_channelLandscapeCropSoilSlopeNumbers, int __pyx_v_lastHru, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_8merge(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_target); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_10setAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12cropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_14soilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_16slopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_18subbasinCellCount(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_20subbasinArea(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_22totalElevation(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_24totalSlope(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_26copyLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_28channelArea(PyObject *__pyx_v_channelData); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_30dominantKey(PyObject *__pyx_v_table); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_32__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_34__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, double __pyx_v_x1, double __pyx_v_y1, double __pyx_v_z1, double __pyx_v_x2, double __pyx_v_y2, double __pyx_v_z2); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_2__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_4__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_2add(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_4__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_area, PyObject *__pyx_v_centroid, PyObject *__pyx_v_waterRole); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_2__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_4__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC___pyx_unpickle_CellData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_2__pyx_unpickle_WaterBody(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_4__pyx_unpickle_LSUData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_6__pyx_unpickle_BasinData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8__pyx_unpickle_ReachData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_10__pyx_unpickle_MergedChannelData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9QSWATPlus_7dataInC_12__pyx_unpickle_LakeData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_CellData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_WaterBody(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_LSUData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_BasinData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_ReachData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_MergedChannelData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_LakeData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, &__pyx_n_s_get, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_items = {0, &__pyx_n_s_items, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_setdefault = {0, &__pyx_n_s_setdefault, 0, 0, 0};
static PyObject *__pyx_float_1eneg_06;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_18776598;
static PyObject *__pyx_int_81859870;
static PyObject *__pyx_int_95816225;
static PyObject *__pyx_int_103203160;
static PyObject *__pyx_int_107154008;
static PyObject *__pyx_int_133009318;
static PyObject *__pyx_int_153071342;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__6;
static PyObject *__pyx_codeobj__8;
static PyObject *__pyx_codeobj__10;
static PyObject *__pyx_codeobj__12;
static PyObject *__pyx_codeobj__14;
static PyObject *__pyx_codeobj__16;
static PyObject *__pyx_codeobj__18;
static PyObject *__pyx_codeobj__20;
static PyObject *__pyx_codeobj__22;
/* Late includes */

/* "QSWATPlus/dataInC.pyx":47
 * 
 *     """Data collected about cells in watershed grid that make an HRU."""
 *     def __init__(self, int count, double area, double elevation, double slope, double x, double y, int crop):             # <<<<<<<<<<<<<<
 *         """Constructor."""
 *         ## Cell count
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_8CellData___init__[] = "Constructor.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_8CellData___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_count;
  double __pyx_v_area;
  double __pyx_v_elevation;
  double __pyx_v_slope;
  double __pyx_v_x;
  double __pyx_v_y;
  int __pyx_v_crop;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_count,&__pyx_n_s_area,&__pyx_n_s_elevation,&__pyx_n_s_slope,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_crop,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_count)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_area)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 1); __PYX_ERR(0, 47, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_elevation)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 2); __PYX_ERR(0, 47, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 3); __PYX_ERR(0, 47, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 4); __PYX_ERR(0, 47, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 5); __PYX_ERR(0, 47, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, 6); __PYX_ERR(0, 47, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 47, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_count = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_count == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_area = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_area == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_elevation = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_elevation == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_slope = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_slope == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
    __pyx_v_crop = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 47, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), __pyx_v_count, __pyx_v_area, __pyx_v_elevation, __pyx_v_slope, __pyx_v_x, __pyx_v_y, __pyx_v_crop);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, int __pyx_v_count, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slope, double __pyx_v_x, double __pyx_v_y, int __pyx_v_crop) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":50
 *         """Constructor."""
 *         ## Cell count
 *         self.cellCount = count             # <<<<<<<<<<<<<<
 *         ## Total area in square metres
 *         self.area = area
 */
  __pyx_v_self->cellCount = __pyx_v_count;

  /* "QSWATPlus/dataInC.pyx":52
 *         self.cellCount = count
 *         ## Total area in square metres
 *         self.area = area             # <<<<<<<<<<<<<<
 *         ## Total elevation (for calculating mean elevation)
 *         self.totalElevation = elevation
 */
  __pyx_v_self->area = __pyx_v_area;

  /* "QSWATPlus/dataInC.pyx":54
 *         self.area = area
 *         ## Total elevation (for calculating mean elevation)
 *         self.totalElevation = elevation             # <<<<<<<<<<<<<<
 *         ## Total slope (for calculating mean slope)
 *         self.totalSlope = slope
 */
  __pyx_v_self->totalElevation = __pyx_v_elevation;

  /* "QSWATPlus/dataInC.pyx":56
 *         self.totalElevation = elevation
 *         ## Total slope (for calculating mean slope)
 *         self.totalSlope = slope             # <<<<<<<<<<<<<<
 *         ## total latitude (in projected units) for calculating centroid
 *         self.totalLatitude = y
 */
  __pyx_v_self->totalSlope = __pyx_v_slope;

  /* "QSWATPlus/dataInC.pyx":58
 *         self.totalSlope = slope
 *         ## total latitude (in projected units) for calculating centroid
 *         self.totalLatitude = y             # <<<<<<<<<<<<<<
 *         ## total longitude (in projected units) for calculating centroid
 *         self.totalLongitude = x
 */
  __pyx_v_self->totalLatitude = __pyx_v_y;

  /* "QSWATPlus/dataInC.pyx":60
 *         self.totalLatitude = y
 *         ## total longitude (in projected units) for calculating centroid
 *         self.totalLongitude = x             # <<<<<<<<<<<<<<
 *         ## Original crop number (for use with split landuses)
 *         self.crop = crop
 */
  __pyx_v_self->totalLongitude = __pyx_v_x;

  /* "QSWATPlus/dataInC.pyx":62
 *         self.totalLongitude = x
 *         ## Original crop number (for use with split landuses)
 *         self.crop = crop             # <<<<<<<<<<<<<<
 *         ## Actual HRU number (set when making HRUs, within printBasins)
 *         self.actHRUNum = 0
 */
  __pyx_v_self->crop = __pyx_v_crop;

  /* "QSWATPlus/dataInC.pyx":64
 *         self.crop = crop
 *         ## Actual HRU number (set when making HRUs, within printBasins)
 *         self.actHRUNum = 0             # <<<<<<<<<<<<<<
 * 
 *     cdef void addCell(self, double area, double elevation, double slope, double x, double y):
 */
  __pyx_v_self->actHRUNum = 0;

  /* "QSWATPlus/dataInC.pyx":47
 * 
 *     """Data collected about cells in watershed grid that make an HRU."""
 *     def __init__(self, int count, double area, double elevation, double slope, double x, double y, int crop):             # <<<<<<<<<<<<<<
 *         """Constructor."""
 *         ## Cell count
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":66
 *         self.actHRUNum = 0
 * 
 *     cdef void addCell(self, double area, double elevation, double slope, double x, double y):             # <<<<<<<<<<<<<<
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 */

static void __pyx_f_9QSWATPlus_7dataInC_8CellData_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slope, double __pyx_v_x, double __pyx_v_y) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addCell", 0);

  /* "QSWATPlus/dataInC.pyx":68
 *     cdef void addCell(self, double area, double elevation, double slope, double x, double y):
 *         """Add data for 1 cell."""
 *         self.cellCount += 1             # <<<<<<<<<<<<<<
 *         self.area += area
 *         self.totalElevation += elevation
 */
  __pyx_v_self->cellCount = (__pyx_v_self->cellCount + 1);

  /* "QSWATPlus/dataInC.pyx":69
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 *         self.area += area             # <<<<<<<<<<<<<<
 *         self.totalElevation += elevation
 *         self.totalSlope += slope
 */
  __pyx_v_self->area = (__pyx_v_self->area + __pyx_v_area);

  /* "QSWATPlus/dataInC.pyx":70
 *         self.cellCount += 1
 *         self.area += area
 *         self.totalElevation += elevation             # <<<<<<<<<<<<<<
 *         self.totalSlope += slope
 *         self.totalLatitude += y
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation + __pyx_v_elevation);

  /* "QSWATPlus/dataInC.pyx":71
 *         self.area += area
 *         self.totalElevation += elevation
 *         self.totalSlope += slope             # <<<<<<<<<<<<<<
 *         self.totalLatitude += y
 *         self.totalLongitude += x
 */
  __pyx_v_self->totalSlope = (__pyx_v_self->totalSlope + __pyx_v_slope);

  /* "QSWATPlus/dataInC.pyx":72
 *         self.totalElevation += elevation
 *         self.totalSlope += slope
 *         self.totalLatitude += y             # <<<<<<<<<<<<<<
 *         self.totalLongitude += x
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude + __pyx_v_y);

  /* "QSWATPlus/dataInC.pyx":73
 *         self.totalSlope += slope
 *         self.totalLatitude += y
 *         self.totalLongitude += x             # <<<<<<<<<<<<<<
 * 
 *     cpdef void addCells(self, CellData cd):
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude + __pyx_v_x);

  /* "QSWATPlus/dataInC.pyx":66
 *         self.actHRUNum = 0
 * 
 *     cdef void addCell(self, double area, double elevation, double slope, double x, double y):             # <<<<<<<<<<<<<<
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "QSWATPlus/dataInC.pyx":75
 *         self.totalLongitude += x
 * 
 *     cpdef void addCells(self, CellData cd):             # <<<<<<<<<<<<<<
 *         """Add a cell data to this one."""
 *         self.cellCount += cd.cellCount
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_3addCells(PyObject *__pyx_v_self, PyObject *__pyx_v_cd); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_8CellData_addCells(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cd, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("addCells", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addCells); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_8CellData_3addCells)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_cd)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_cd));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":77
 *     cpdef void addCells(self, CellData cd):
 *         """Add a cell data to this one."""
 *         self.cellCount += cd.cellCount             # <<<<<<<<<<<<<<
 *         self.area += cd.area
 *         self.totalElevation += cd.totalElevation
 */
  __pyx_v_self->cellCount = (__pyx_v_self->cellCount + __pyx_v_cd->cellCount);

  /* "QSWATPlus/dataInC.pyx":78
 *         """Add a cell data to this one."""
 *         self.cellCount += cd.cellCount
 *         self.area += cd.area             # <<<<<<<<<<<<<<
 *         self.totalElevation += cd.totalElevation
 *         self.totalSlope += cd.totalSlope
 */
  __pyx_v_self->area = (__pyx_v_self->area + __pyx_v_cd->area);

  /* "QSWATPlus/dataInC.pyx":79
 *         self.cellCount += cd.cellCount
 *         self.area += cd.area
 *         self.totalElevation += cd.totalElevation             # <<<<<<<<<<<<<<
 *         self.totalSlope += cd.totalSlope
 *         self.totalLatitude += cd.totalLatitude
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation + __pyx_v_cd->totalElevation);

  /* "QSWATPlus/dataInC.pyx":80
 *         self.area += cd.area
 *         self.totalElevation += cd.totalElevation
 *         self.totalSlope += cd.totalSlope             # <<<<<<<<<<<<<<
 *         self.totalLatitude += cd.totalLatitude
 *         self.totalLongitude += cd.totalLongitude
 */
  __pyx_v_self->totalSlope = (__pyx_v_self->totalSlope + __pyx_v_cd->totalSlope);

  /* "QSWATPlus/dataInC.pyx":81
 *         self.totalElevation += cd.totalElevation
 *         self.totalSlope += cd.totalSlope
 *         self.totalLatitude += cd.totalLatitude             # <<<<<<<<<<<<<<
 *         self.totalLongitude += cd.totalLongitude
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude + __pyx_v_cd->totalLatitude);

  /* "QSWATPlus/dataInC.pyx":82
 *         self.totalSlope += cd.totalSlope
 *         self.totalLatitude += cd.totalLatitude
 *         self.totalLongitude += cd.totalLongitude             # <<<<<<<<<<<<<<
 * 
 *     cpdef void multiply(self, double factor):
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude + __pyx_v_cd->totalLongitude);

  /* "QSWATPlus/dataInC.pyx":75
 *         self.totalLongitude += x
 * 
 *     cpdef void addCells(self, CellData cd):             # <<<<<<<<<<<<<<
 *         """Add a cell data to this one."""
 *         self.cellCount += cd.cellCount
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.CellData.addCells", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_3addCells(PyObject *__pyx_v_self, PyObject *__pyx_v_cd); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_8CellData_2addCells[] = "Add a cell data to this one.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_3addCells(PyObject *__pyx_v_self, PyObject *__pyx_v_cd) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addCells (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_cd), __pyx_ptype_9QSWATPlus_7dataInC_CellData, 1, "cd", 0))) __PYX_ERR(0, 75, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_2addCells(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_cd));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_2addCells(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cd) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("addCells", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_8CellData_addCells(__pyx_v_self, __pyx_v_cd, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.addCells", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":84
 *         self.totalLongitude += cd.totalLongitude
 * 
 *     cpdef void multiply(self, double factor):             # <<<<<<<<<<<<<<
 *         """Multiply cell values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_8CellData_multiply(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("multiply", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_multiply); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_8CellData_5multiply)) {
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 84, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":86
 *     cpdef void multiply(self, double factor):
 *         """Multiply cell values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)             # <<<<<<<<<<<<<<
 *         self.area *= factor
 *         self.totalSlope *= factor
 */
  __pyx_v_self->cellCount = ((int)((__pyx_v_self->cellCount * __pyx_v_factor) + 0.5));

  /* "QSWATPlus/dataInC.pyx":87
 *         """Multiply cell values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 *         self.area *= factor             # <<<<<<<<<<<<<<
 *         self.totalSlope *= factor
 *         self.totalElevation *= factor
 */
  __pyx_v_self->area = (__pyx_v_self->area * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":88
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 *         self.area *= factor
 *         self.totalSlope *= factor             # <<<<<<<<<<<<<<
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor
 */
  __pyx_v_self->totalSlope = (__pyx_v_self->totalSlope * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":89
 *         self.area *= factor
 *         self.totalSlope *= factor
 *         self.totalElevation *= factor             # <<<<<<<<<<<<<<
 *         self.totalLatitude *= factor
 *         self.totalLongitude *= factor
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":90
 *         self.totalSlope *= factor
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor             # <<<<<<<<<<<<<<
 *         self.totalLongitude *= factor
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":91
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor
 *         self.totalLongitude *= factor             # <<<<<<<<<<<<<<
 * 
 * # Roles a channel can play for a reservoir:
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":84
 *         self.totalLongitude += cd.totalLongitude
 * 
 *     cpdef void multiply(self, double factor):             # <<<<<<<<<<<<<<
 *         """Multiply cell values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.CellData.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_8CellData_4multiply[] = "Multiply cell values by factor.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor) {
  double __pyx_v_factor;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply (wrapper)", 0);
  assert(__pyx_arg_factor); {
    __pyx_v_factor = __pyx_PyFloat_AsDouble(__pyx_arg_factor); if (unlikely((__pyx_v_factor == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 84, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_4multiply(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((double)__pyx_v_factor));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4multiply(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, double __pyx_v_factor) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("multiply", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_8CellData_multiply(__pyx_v_self, __pyx_v_factor, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":37
 * 
 *     cdef:
 *         public int cellCount             # <<<<<<<<<<<<<<
 *         public double area
 *         public double totalElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.cellCount.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 37, __pyx_L1_error)
  __pyx_v_self->cellCount = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.cellCount.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":38
 *     cdef:
 *         public int cellCount
 *         public double area             # <<<<<<<<<<<<<<
 *         public double totalElevation
 *         public double totalSlope
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_4area___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_4area_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 38, __pyx_L1_error)
  __pyx_v_self->area = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.area.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":39
 *         public int cellCount
 *         public double area
 *         public double totalElevation             # <<<<<<<<<<<<<<
 *         public double totalSlope
 *         public double totalLatitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 39, __pyx_L1_error)
  __pyx_v_self->totalElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":40
 *         public double area
 *         public double totalElevation
 *         public double totalSlope             # <<<<<<<<<<<<<<
 *         public double totalLatitude
 *         public double totalLongitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalSlope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalSlope.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_10totalSlope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_v_self->totalSlope = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalSlope.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":41
 *         public double totalElevation
 *         public double totalSlope
 *         public double totalLatitude             # <<<<<<<<<<<<<<
 *         public double totalLongitude
 *         public int crop
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalLatitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L1_error)
  __pyx_v_self->totalLatitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalLatitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":42
 *         public double totalSlope
 *         public double totalLatitude
 *         public double totalLongitude             # <<<<<<<<<<<<<<
 *         public int crop
 *         public int actHRUNum
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalLongitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_v_self->totalLongitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.totalLongitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":43
 *         public double totalLatitude
 *         public double totalLongitude
 *         public int crop             # <<<<<<<<<<<<<<
 *         public int actHRUNum
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.crop.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_4crop_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 43, __pyx_L1_error)
  __pyx_v_self->crop = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.crop.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":44
 *         public double totalLongitude
 *         public int crop
 *         public int actHRUNum             # <<<<<<<<<<<<<<
 * 
 *     """Data collected about cells in watershed grid that make an HRU."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum___get__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->actHRUNum); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.actHRUNum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8CellData_9actHRUNum_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 44, __pyx_L1_error)
  __pyx_v_self->actHRUNum = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.actHRUNum.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_6__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_6__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.actHRUNum, self.area, self.cellCount, self.crop, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->actHRUNum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->crop); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_self->totalSlope); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyTuple_New(8); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_9, 4, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 5, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_9, 6, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_9, 7, __pyx_t_8);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_9);
  __pyx_t_9 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.actHRUNum, self.area, self.cellCount, self.crop, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_9 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_v__dict = __pyx_t_9;
  __pyx_t_9 = 0;

  /* "(tree fragment)":7
 *     state = (self.actHRUNum, self.area, self.cellCount, self.crop, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_10 = (__pyx_v__dict != Py_None);
  __pyx_t_11 = (__pyx_t_10 != 0);
  if (__pyx_t_11) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v__dict);
    __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_8));
    __pyx_t_8 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.actHRUNum, self.area, self.cellCount, self.crop, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, None), state
 *     else:
 */
  __pyx_t_11 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_11) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_pyx_unpickle_CellData); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_9, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_18776598);
    __Pyx_GIVEREF(__pyx_int_18776598);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_int_18776598);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_9, 2, Py_None);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_9);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_v_state);
    __pyx_t_8 = 0;
    __pyx_t_9 = 0;
    __pyx_r = __pyx_t_7;
    __pyx_t_7 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, None), state
 *     else:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CellData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_pyx_unpickle_CellData); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_9, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_18776598);
    __Pyx_GIVEREF(__pyx_int_18776598);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_int_18776598);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_v_state);
    __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_9);
    __pyx_t_7 = 0;
    __pyx_t_9 = 0;
    __pyx_r = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CellData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8CellData_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8CellData_8__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8CellData_8__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_CellData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_CellData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_CellData, (type(self), 0x11e8216, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_CellData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.CellData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":123
 * 
 *     """Data about areas with landuse WATR."""
 *     def __init__(self, int count, double area, double elevation, double x, double y):             # <<<<<<<<<<<<<<
 *         """Constructor."""
 *         ## Cell count
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody___init__[] = "Constructor.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_9WaterBody___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_count;
  double __pyx_v_area;
  double __pyx_v_elevation;
  double __pyx_v_x;
  double __pyx_v_y;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_count,&__pyx_n_s_area,&__pyx_n_s_elevation,&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_count)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_area)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 1); __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_elevation)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 2); __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 3); __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 4); __PYX_ERR(0, 123, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 123, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_count = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_count == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
    __pyx_v_area = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_area == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
    __pyx_v_elevation = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_elevation == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 123, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), __pyx_v_count, __pyx_v_area, __pyx_v_elevation, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody___init__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_v_count, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_x, double __pyx_v_y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":126
 *         """Constructor."""
 *         ## Cell count
 *         self.cellCount = count             # <<<<<<<<<<<<<<
 *         ## Total area in square metres
 *         self.area = area
 */
  __pyx_v_self->cellCount = __pyx_v_count;

  /* "QSWATPlus/dataInC.pyx":128
 *         self.cellCount = count
 *         ## Total area in square metres
 *         self.area = area             # <<<<<<<<<<<<<<
 *         ## Original area before any merging
 *         self.originalArea = area
 */
  __pyx_v_self->area = __pyx_v_area;

  /* "QSWATPlus/dataInC.pyx":130
 *         self.area = area
 *         ## Original area before any merging
 *         self.originalArea = area             # <<<<<<<<<<<<<<
 *         ## Total elevation (for calculating mean elevation)
 *         self.totalElevation = elevation
 */
  __pyx_v_self->originalArea = __pyx_v_area;

  /* "QSWATPlus/dataInC.pyx":132
 *         self.originalArea = area
 *         ## Total elevation (for calculating mean elevation)
 *         self.totalElevation = elevation             # <<<<<<<<<<<<<<
 *         ## total latitude (in projected units) for calculating centroid
 *         self.totalLatitude = y
 */
  __pyx_v_self->totalElevation = __pyx_v_elevation;

  /* "QSWATPlus/dataInC.pyx":134
 *         self.totalElevation = elevation
 *         ## total latitude (in projected units) for calculating centroid
 *         self.totalLatitude = y             # <<<<<<<<<<<<<<
 *         ## total longitude (in projected units) for calculating centroid
 *         self.totalLongitude = x
 */
  __pyx_v_self->totalLatitude = __pyx_v_y;

  /* "QSWATPlus/dataInC.pyx":136
 *         self.totalLatitude = y
 *         ## total longitude (in projected units) for calculating centroid
 *         self.totalLongitude = x             # <<<<<<<<<<<<<<
 *         ## id set later
 *         self.id = 0
 */
  __pyx_v_self->totalLongitude = __pyx_v_x;

  /* "QSWATPlus/dataInC.pyx":138
 *         self.totalLongitude = x
 *         ## id set later
 *         self.id = 0             # <<<<<<<<<<<<<<
 *         ## role of channel: _INNER is default
 *         self.channelRole = _INNER
 */
  __pyx_v_self->id = 0;

  /* "QSWATPlus/dataInC.pyx":140
 *         self.id = 0
 *         ## role of channel: _INNER is default
 *         self.channelRole = _INNER             # <<<<<<<<<<<<<<
 *         ## water role
 *         self.waterRole = _UNKNOWN
 */
  __pyx_v_self->channelRole = __pyx_e_9QSWATPlus_7dataInC__INNER;

  /* "QSWATPlus/dataInC.pyx":142
 *         self.channelRole = _INNER
 *         ## water role
 *         self.waterRole = _UNKNOWN             # <<<<<<<<<<<<<<
 * 
 *     cdef void addCell(self, double area, double elevation, double x, double y):
 */
  __pyx_v_self->waterRole = __pyx_e_9QSWATPlus_7dataInC__UNKNOWN;

  /* "QSWATPlus/dataInC.pyx":123
 * 
 *     """Data about areas with landuse WATR."""
 *     def __init__(self, int count, double area, double elevation, double x, double y):             # <<<<<<<<<<<<<<
 *         """Constructor."""
 *         ## Cell count
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":144
 *         self.waterRole = _UNKNOWN
 * 
 *     cdef void addCell(self, double area, double elevation, double x, double y):             # <<<<<<<<<<<<<<
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 */

static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_x, double __pyx_v_y) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addCell", 0);

  /* "QSWATPlus/dataInC.pyx":146
 *     cdef void addCell(self, double area, double elevation, double x, double y):
 *         """Add data for 1 cell."""
 *         self.cellCount += 1             # <<<<<<<<<<<<<<
 *         self.area += area
 *         self.originalArea += area
 */
  __pyx_v_self->cellCount = (__pyx_v_self->cellCount + 1);

  /* "QSWATPlus/dataInC.pyx":147
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 *         self.area += area             # <<<<<<<<<<<<<<
 *         self.originalArea += area
 *         self.totalElevation += elevation
 */
  __pyx_v_self->area = (__pyx_v_self->area + __pyx_v_area);

  /* "QSWATPlus/dataInC.pyx":148
 *         self.cellCount += 1
 *         self.area += area
 *         self.originalArea += area             # <<<<<<<<<<<<<<
 *         self.totalElevation += elevation
 *         self.totalLatitude += y
 */
  __pyx_v_self->originalArea = (__pyx_v_self->originalArea + __pyx_v_area);

  /* "QSWATPlus/dataInC.pyx":149
 *         self.area += area
 *         self.originalArea += area
 *         self.totalElevation += elevation             # <<<<<<<<<<<<<<
 *         self.totalLatitude += y
 *         self.totalLongitude += x
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation + __pyx_v_elevation);

  /* "QSWATPlus/dataInC.pyx":150
 *         self.originalArea += area
 *         self.totalElevation += elevation
 *         self.totalLatitude += y             # <<<<<<<<<<<<<<
 *         self.totalLongitude += x
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude + __pyx_v_y);

  /* "QSWATPlus/dataInC.pyx":151
 *         self.totalElevation += elevation
 *         self.totalLatitude += y
 *         self.totalLongitude += x             # <<<<<<<<<<<<<<
 * 
 * #     cpdef void addCells(self, CellData cd):
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude + __pyx_v_x);

  /* "QSWATPlus/dataInC.pyx":144
 *         self.waterRole = _UNKNOWN
 * 
 *     cdef void addCell(self, double area, double elevation, double x, double y):             # <<<<<<<<<<<<<<
 *         """Add data for 1 cell."""
 *         self.cellCount += 1
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "QSWATPlus/dataInC.pyx":162
 * #         self.totalLongitude += cd.totalLongitude
 * 
 *     cpdef void addWater(self, WaterBody wb, bint keepOriginal):             # <<<<<<<<<<<<<<
 *         """Add water body to this one, keeping original area, if keepOriginal is true."""
 *         self.cellCount += wb.cellCount
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_3addWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_addWater(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_wb, int __pyx_v_keepOriginal, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("addWater", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addWater); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_3addWater)) {
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_keepOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_wb), __pyx_t_3};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 162, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_wb), __pyx_t_3};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 162, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 162, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_5) {
            __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_wb));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_wb));
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, ((PyObject *)__pyx_v_wb));
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 162, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":164
 *     cpdef void addWater(self, WaterBody wb, bint keepOriginal):
 *         """Add water body to this one, keeping original area, if keepOriginal is true."""
 *         self.cellCount += wb.cellCount             # <<<<<<<<<<<<<<
 *         self.area += wb.area
 *         if not keepOriginal:
 */
  __pyx_v_self->cellCount = (__pyx_v_self->cellCount + __pyx_v_wb->cellCount);

  /* "QSWATPlus/dataInC.pyx":165
 *         """Add water body to this one, keeping original area, if keepOriginal is true."""
 *         self.cellCount += wb.cellCount
 *         self.area += wb.area             # <<<<<<<<<<<<<<
 *         if not keepOriginal:
 *             self.originalArea += wb.originalArea
 */
  __pyx_v_self->area = (__pyx_v_self->area + __pyx_v_wb->area);

  /* "QSWATPlus/dataInC.pyx":166
 *         self.cellCount += wb.cellCount
 *         self.area += wb.area
 *         if not keepOriginal:             # <<<<<<<<<<<<<<
 *             self.originalArea += wb.originalArea
 *         self.totalElevation += wb.totalElevation
 */
  __pyx_t_8 = ((!(__pyx_v_keepOriginal != 0)) != 0);
  if (__pyx_t_8) {

    /* "QSWATPlus/dataInC.pyx":167
 *         self.area += wb.area
 *         if not keepOriginal:
 *             self.originalArea += wb.originalArea             # <<<<<<<<<<<<<<
 *         self.totalElevation += wb.totalElevation
 *         self.totalLatitude += wb.totalLatitude
 */
    __pyx_v_self->originalArea = (__pyx_v_self->originalArea + __pyx_v_wb->originalArea);

    /* "QSWATPlus/dataInC.pyx":166
 *         self.cellCount += wb.cellCount
 *         self.area += wb.area
 *         if not keepOriginal:             # <<<<<<<<<<<<<<
 *             self.originalArea += wb.originalArea
 *         self.totalElevation += wb.totalElevation
 */
  }

  /* "QSWATPlus/dataInC.pyx":168
 *         if not keepOriginal:
 *             self.originalArea += wb.originalArea
 *         self.totalElevation += wb.totalElevation             # <<<<<<<<<<<<<<
 *         self.totalLatitude += wb.totalLatitude
 *         self.totalLongitude += wb.totalLongitude
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation + __pyx_v_wb->totalElevation);

  /* "QSWATPlus/dataInC.pyx":169
 *             self.originalArea += wb.originalArea
 *         self.totalElevation += wb.totalElevation
 *         self.totalLatitude += wb.totalLatitude             # <<<<<<<<<<<<<<
 *         self.totalLongitude += wb.totalLongitude
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude + __pyx_v_wb->totalLatitude);

  /* "QSWATPlus/dataInC.pyx":170
 *         self.totalElevation += wb.totalElevation
 *         self.totalLatitude += wb.totalLatitude
 *         self.totalLongitude += wb.totalLongitude             # <<<<<<<<<<<<<<
 * 
 *     cpdef void multiply(self, double factor):
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude + __pyx_v_wb->totalLongitude);

  /* "QSWATPlus/dataInC.pyx":162
 * #         self.totalLongitude += cd.totalLongitude
 * 
 *     cpdef void addWater(self, WaterBody wb, bint keepOriginal):             # <<<<<<<<<<<<<<
 *         """Add water body to this one, keeping original area, if keepOriginal is true."""
 *         self.cellCount += wb.cellCount
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.addWater", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_3addWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_2addWater[] = "Add water body to this one, keeping original area, if keepOriginal is true.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_3addWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_wb = 0;
  int __pyx_v_keepOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addWater (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wb,&__pyx_n_s_keepOriginal,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wb)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_keepOriginal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addWater", 1, 2, 2, 1); __PYX_ERR(0, 162, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addWater") < 0)) __PYX_ERR(0, 162, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_wb = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)values[0]);
    __pyx_v_keepOriginal = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_keepOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 162, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addWater", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 162, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.addWater", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wb), __pyx_ptype_9QSWATPlus_7dataInC_WaterBody, 1, "wb", 0))) __PYX_ERR(0, 162, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2addWater(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), __pyx_v_wb, __pyx_v_keepOriginal);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2addWater(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_wb, int __pyx_v_keepOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("addWater", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_addWater(__pyx_v_self, __pyx_v_wb, __pyx_v_keepOriginal, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.addWater", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":172
 *         self.totalLongitude += wb.totalLongitude
 * 
 *     cpdef void multiply(self, double factor):             # <<<<<<<<<<<<<<
 *         """Multiply water body values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_multiply(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("multiply", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_multiply); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_5multiply)) {
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 172, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 172, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":174
 *     cpdef void multiply(self, double factor):
 *         """Multiply water body values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)             # <<<<<<<<<<<<<<
 *         self.area *= factor
 *         self.originalArea *= factor
 */
  __pyx_v_self->cellCount = ((int)((__pyx_v_self->cellCount * __pyx_v_factor) + 0.5));

  /* "QSWATPlus/dataInC.pyx":175
 *         """Multiply water body values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 *         self.area *= factor             # <<<<<<<<<<<<<<
 *         self.originalArea *= factor
 *         self.totalElevation *= factor
 */
  __pyx_v_self->area = (__pyx_v_self->area * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":176
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 *         self.area *= factor
 *         self.originalArea *= factor             # <<<<<<<<<<<<<<
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor
 */
  __pyx_v_self->originalArea = (__pyx_v_self->originalArea * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":177
 *         self.area *= factor
 *         self.originalArea *= factor
 *         self.totalElevation *= factor             # <<<<<<<<<<<<<<
 *         self.totalLatitude *= factor
 *         self.totalLongitude *= factor
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":178
 *         self.originalArea *= factor
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor             # <<<<<<<<<<<<<<
 *         self.totalLongitude *= factor
 * 
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":179
 *         self.totalElevation *= factor
 *         self.totalLatitude *= factor
 *         self.totalLongitude *= factor             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setInlet(self):
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude * __pyx_v_factor);

  /* "QSWATPlus/dataInC.pyx":172
 *         self.totalLongitude += wb.totalLongitude
 * 
 *     cpdef void multiply(self, double factor):             # <<<<<<<<<<<<<<
 *         """Multiply water body values by factor."""
 *         self.cellCount = int(self.cellCount * factor + 0.5)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_4multiply[] = "Multiply water body values by factor.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_5multiply(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor) {
  double __pyx_v_factor;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("multiply (wrapper)", 0);
  assert(__pyx_arg_factor); {
    __pyx_v_factor = __pyx_PyFloat_AsDouble(__pyx_arg_factor); if (unlikely((__pyx_v_factor == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 172, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4multiply(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((double)__pyx_v_factor));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4multiply(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, double __pyx_v_factor) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("multiply", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_multiply(__pyx_v_self, __pyx_v_factor, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":181
 *         self.totalLongitude *= factor
 * 
 *     cpdef void setInlet(self):             # <<<<<<<<<<<<<<
 *         """Set  to inlet.  provents merging downstream"""
 *         self.channelRole = _INLET
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_7setInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("setInlet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setInlet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 181, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_7setInlet)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 181, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":183
 *     cpdef void setInlet(self):
 *         """Set  to inlet.  provents merging downstream"""
 *         self.channelRole = _INLET             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setOutlet(self):
 */
  __pyx_v_self->channelRole = __pyx_e_9QSWATPlus_7dataInC__INLET;

  /* "QSWATPlus/dataInC.pyx":181
 *         self.totalLongitude *= factor
 * 
 *     cpdef void setInlet(self):             # <<<<<<<<<<<<<<
 *         """Set  to inlet.  provents merging downstream"""
 *         self.channelRole = _INLET
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.setInlet", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_7setInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_6setInlet[] = "Set  to inlet.  provents merging downstream";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_7setInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInlet (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_6setInlet(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_6setInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setInlet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setInlet(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.setInlet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":185
 *         self.channelRole = _INLET
 * 
 *     cpdef void setOutlet(self):             # <<<<<<<<<<<<<<
 *         """Set  to outlet."""
 *         self.channelRole = _OUTLET
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9setOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("setOutlet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setOutlet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 185, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9setOutlet)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 185, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":187
 *     cpdef void setOutlet(self):
 *         """Set  to outlet."""
 *         self.channelRole = _OUTLET             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setReservoir(self):
 */
  __pyx_v_self->channelRole = __pyx_e_9QSWATPlus_7dataInC__OUTLET;

  /* "QSWATPlus/dataInC.pyx":185
 *         self.channelRole = _INLET
 * 
 *     cpdef void setOutlet(self):             # <<<<<<<<<<<<<<
 *         """Set  to outlet."""
 *         self.channelRole = _OUTLET
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.setOutlet", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9setOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_8setOutlet[] = "Set  to outlet.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9setOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOutlet (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_8setOutlet(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_8setOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setOutlet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setOutlet(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.setOutlet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":189
 *         self.channelRole = _OUTLET
 * 
 *     cpdef void setReservoir(self):             # <<<<<<<<<<<<<<
 *         """Set to reservoir."""
 *         self.waterRole = _RESERVOIR
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11setReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("setReservoir", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setReservoir); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11setReservoir)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":191
 *     cpdef void setReservoir(self):
 *         """Set to reservoir."""
 *         self.waterRole = _RESERVOIR             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setPond(self):
 */
  __pyx_v_self->waterRole = __pyx_e_9QSWATPlus_7dataInC__RESERVOIR;

  /* "QSWATPlus/dataInC.pyx":189
 *         self.channelRole = _OUTLET
 * 
 *     cpdef void setReservoir(self):             # <<<<<<<<<<<<<<
 *         """Set to reservoir."""
 *         self.waterRole = _RESERVOIR
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.setReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11setReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_10setReservoir[] = "Set to reservoir.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11setReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setReservoir (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_10setReservoir(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_10setReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setReservoir", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setReservoir(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.setReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":193
 *         self.waterRole = _RESERVOIR
 * 
 *     cpdef void setPond(self):             # <<<<<<<<<<<<<<
 *         """Set to pond."""
 *         self.waterRole = _POND
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13setPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9WaterBody_setPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("setPond", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setPond); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13setPond)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":195
 *     cpdef void setPond(self):
 *         """Set to pond."""
 *         self.waterRole = _POND             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint isInlet(self):
 */
  __pyx_v_self->waterRole = __pyx_e_9QSWATPlus_7dataInC__POND;

  /* "QSWATPlus/dataInC.pyx":193
 *         self.waterRole = _RESERVOIR
 * 
 *     cpdef void setPond(self):             # <<<<<<<<<<<<<<
 *         """Set to pond."""
 *         self.waterRole = _POND
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.setPond", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13setPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_12setPond[] = "Set to pond.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13setPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setPond (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12setPond(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12setPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setPond", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setPond(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.setPond", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":197
 *         self.waterRole = _POND
 * 
 *     cpdef bint isInlet(self):             # <<<<<<<<<<<<<<
 *         """Return true if  is inlet."""
 *         return self.channelRole == _INLET
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_15isInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("isInlet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isInlet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 197, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_15isInlet)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 197, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":199
 *     cpdef bint isInlet(self):
 *         """Return true if  is inlet."""
 *         return self.channelRole == _INLET             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint isOutlet(self):
 */
  __pyx_r = (__pyx_v_self->channelRole == __pyx_e_9QSWATPlus_7dataInC__INLET);
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":197
 *         self.waterRole = _POND
 * 
 *     cpdef bint isInlet(self):             # <<<<<<<<<<<<<<
 *         """Return true if  is inlet."""
 *         return self.channelRole == _INLET
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.isInlet", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_15isInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_14isInlet[] = "Return true if  is inlet.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_15isInlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isInlet (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14isInlet(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14isInlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isInlet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isInlet(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.isInlet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":201
 *         return self.channelRole == _INLET
 * 
 *     cpdef bint isOutlet(self):             # <<<<<<<<<<<<<<
 *         """Return true if  is outlet."""
 *         return self.channelRole == _OUTLET
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_17isOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("isOutlet", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isOutlet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 201, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_17isOutlet)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 201, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 201, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":203
 *     cpdef bint isOutlet(self):
 *         """Return true if  is outlet."""
 *         return self.channelRole == _OUTLET             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint isUnknown(self):
 */
  __pyx_r = (__pyx_v_self->channelRole == __pyx_e_9QSWATPlus_7dataInC__OUTLET);
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":201
 *         return self.channelRole == _INLET
 * 
 *     cpdef bint isOutlet(self):             # <<<<<<<<<<<<<<
 *         """Return true if  is outlet."""
 *         return self.channelRole == _OUTLET
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.isOutlet", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_17isOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_16isOutlet[] = "Return true if  is outlet.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_17isOutlet(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isOutlet (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_16isOutlet(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_16isOutlet(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isOutlet", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isOutlet(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.isOutlet", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":205
 *         return self.channelRole == _OUTLET
 * 
 *     cpdef bint isUnknown(self):             # <<<<<<<<<<<<<<
 *         """Return true if water role is unknown."""
 *         return self.waterRole == _UNKNOWN
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_19isUnknown(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isUnknown(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("isUnknown", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isUnknown); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_19isUnknown)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 205, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":207
 *     cpdef bint isUnknown(self):
 *         """Return true if water role is unknown."""
 *         return self.waterRole == _UNKNOWN             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint isReservoir(self):
 */
  __pyx_r = (__pyx_v_self->waterRole == __pyx_e_9QSWATPlus_7dataInC__UNKNOWN);
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":205
 *         return self.channelRole == _OUTLET
 * 
 *     cpdef bint isUnknown(self):             # <<<<<<<<<<<<<<
 *         """Return true if water role is unknown."""
 *         return self.waterRole == _UNKNOWN
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.isUnknown", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_19isUnknown(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_18isUnknown[] = "Return true if water role is unknown.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_19isUnknown(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isUnknown (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_18isUnknown(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_18isUnknown(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isUnknown", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isUnknown(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.isUnknown", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":209
 *         return self.waterRole == _UNKNOWN
 * 
 *     cpdef bint isReservoir(self):             # <<<<<<<<<<<<<<
 *         """Return true if is reservoir."""
 *         return self.waterRole == _RESERVOIR
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_21isReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("isReservoir", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isReservoir); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 209, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_21isReservoir)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 209, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 209, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":211
 *     cpdef bint isReservoir(self):
 *         """Return true if is reservoir."""
 *         return self.waterRole == _RESERVOIR             # <<<<<<<<<<<<<<
 * 
 *     cpdef bint isPond(self):
 */
  __pyx_r = (__pyx_v_self->waterRole == __pyx_e_9QSWATPlus_7dataInC__RESERVOIR);
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":209
 *         return self.waterRole == _UNKNOWN
 * 
 *     cpdef bint isReservoir(self):             # <<<<<<<<<<<<<<
 *         """Return true if is reservoir."""
 *         return self.waterRole == _RESERVOIR
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.isReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_21isReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_20isReservoir[] = "Return true if is reservoir.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_21isReservoir(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isReservoir (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_20isReservoir(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_20isReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isReservoir", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isReservoir(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.isReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":213
 *         return self.waterRole == _RESERVOIR
 * 
 *     cpdef bint isPond(self):             # <<<<<<<<<<<<<<
 *         """Return true if is pond."""
 *         return self.waterRole == _POND
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_23isPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9WaterBody_isPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("isPond", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isPond); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 213, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_23isPond)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":215
 *     cpdef bint isPond(self):
 *         """Return true if is pond."""
 *         return self.waterRole == _POND             # <<<<<<<<<<<<<<
 * 
 *     cpdef WaterBody copy(self):
 */
  __pyx_r = (__pyx_v_self->waterRole == __pyx_e_9QSWATPlus_7dataInC__POND);
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":213
 *         return self.waterRole == _RESERVOIR
 * 
 *     cpdef bint isPond(self):             # <<<<<<<<<<<<<<
 *         """Return true if is pond."""
 *         return self.waterRole == _POND
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.WaterBody.isPond", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_23isPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_22isPond[] = "Return true if is pond.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_23isPond(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isPond (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_22isPond(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_22isPond(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isPond", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isPond(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.isPond", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":217
 *         return self.waterRole == _POND
 * 
 *     cpdef WaterBody copy(self):             # <<<<<<<<<<<<<<
 * 
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_25copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_f_9QSWATPlus_7dataInC_9WaterBody_copy(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_result = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  double __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("copy", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_25copy)) {
        __Pyx_XDECREF(((PyObject *)__pyx_r));
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 217, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_WaterBody))))) __PYX_ERR(0, 217, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":222
 *             WaterBody result
 * 
 *         result = WaterBody(self.cellCount, self.area, self.totalElevation, self.totalLongitude, self.totalLatitude)             # <<<<<<<<<<<<<<
 *         result.originalArea = self.originalArea
 *         result.channelRole = self.channelRole
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_WaterBody), __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_result = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "QSWATPlus/dataInC.pyx":223
 * 
 *         result = WaterBody(self.cellCount, self.area, self.totalElevation, self.totalLongitude, self.totalLatitude)
 *         result.originalArea = self.originalArea             # <<<<<<<<<<<<<<
 *         result.channelRole = self.channelRole
 *         result.waterRole = self.waterRole
 */
  __pyx_t_7 = __pyx_v_self->originalArea;
  __pyx_v_result->originalArea = __pyx_t_7;

  /* "QSWATPlus/dataInC.pyx":224
 *         result = WaterBody(self.cellCount, self.area, self.totalElevation, self.totalLongitude, self.totalLatitude)
 *         result.originalArea = self.originalArea
 *         result.channelRole = self.channelRole             # <<<<<<<<<<<<<<
 *         result.waterRole = self.waterRole
 *         result.id = self.id
 */
  __pyx_t_8 = __pyx_v_self->channelRole;
  __pyx_v_result->channelRole = __pyx_t_8;

  /* "QSWATPlus/dataInC.pyx":225
 *         result.originalArea = self.originalArea
 *         result.channelRole = self.channelRole
 *         result.waterRole = self.waterRole             # <<<<<<<<<<<<<<
 *         result.id = self.id
 *         return result
 */
  __pyx_t_8 = __pyx_v_self->waterRole;
  __pyx_v_result->waterRole = __pyx_t_8;

  /* "QSWATPlus/dataInC.pyx":226
 *         result.channelRole = self.channelRole
 *         result.waterRole = self.waterRole
 *         result.id = self.id             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_8 = __pyx_v_self->id;
  __pyx_v_result->id = __pyx_t_8;

  /* "QSWATPlus/dataInC.pyx":227
 *         result.waterRole = self.waterRole
 *         result.id = self.id
 *         return result             # <<<<<<<<<<<<<<
 * 
 * cdef class LSUData:
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":217
 *         return self.waterRole == _POND
 * 
 *     cpdef WaterBody copy(self):             # <<<<<<<<<<<<<<
 * 
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_25copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_25copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_24copy(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_24copy(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_9QSWATPlus_7dataInC_9WaterBody_copy(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":112
 * 
 *     cdef:
 *         public int cellCount             # <<<<<<<<<<<<<<
 *         public double area
 *         public double originalArea
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.cellCount.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 112, __pyx_L1_error)
  __pyx_v_self->cellCount = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.cellCount.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":113
 *     cdef:
 *         public int cellCount
 *         public double area             # <<<<<<<<<<<<<<
 *         public double originalArea
 *         public double totalElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_v_self->area = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.area.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":114
 *         public int cellCount
 *         public double area
 *         public double originalArea             # <<<<<<<<<<<<<<
 *         public double totalElevation
 *         public double totalLatitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->originalArea); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.originalArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_12originalArea_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 114, __pyx_L1_error)
  __pyx_v_self->originalArea = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.originalArea.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":115
 *         public double area
 *         public double originalArea
 *         public double totalElevation             # <<<<<<<<<<<<<<
 *         public double totalLatitude
 *         public double totalLongitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 115, __pyx_L1_error)
  __pyx_v_self->totalElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":116
 *         public double originalArea
 *         public double totalElevation
 *         public double totalLatitude             # <<<<<<<<<<<<<<
 *         public double totalLongitude
 *         public int id
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalLatitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_v_self->totalLatitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalLatitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":117
 *         public double totalElevation
 *         public double totalLatitude
 *         public double totalLongitude             # <<<<<<<<<<<<<<
 *         public int id
 *         public int channelRole
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalLongitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 117, __pyx_L1_error)
  __pyx_v_self->totalLongitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.totalLongitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":118
 *         public double totalLatitude
 *         public double totalLongitude
 *         public int id             # <<<<<<<<<<<<<<
 *         public int channelRole
 *         public int waterRole
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_2id_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
  __pyx_v_self->id = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":119
 *         public double totalLongitude
 *         public int id
 *         public int channelRole             # <<<<<<<<<<<<<<
 *         public int waterRole
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->channelRole); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.channelRole.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_11channelRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L1_error)
  __pyx_v_self->channelRole = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.channelRole.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":120
 *         public int id
 *         public int channelRole
 *         public int waterRole             # <<<<<<<<<<<<<<
 * 
 *     """Data about areas with landuse WATR."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->waterRole); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.waterRole.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_9waterRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 120, __pyx_L1_error)
  __pyx_v_self->waterRole = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.waterRole.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_26__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_26__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.area, self.cellCount, self.channelRole, self.id, self.originalArea, self.totalElevation, self.totalLatitude, self.totalLongitude, self.waterRole)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->channelRole); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->id); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->originalArea); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_self->waterRole); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = PyTuple_New(9); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_10, 4, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_10, 5, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_10, 6, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_10, 7, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_10, 8, __pyx_t_9);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_10);
  __pyx_t_10 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.area, self.cellCount, self.channelRole, self.id, self.originalArea, self.totalElevation, self.totalLatitude, self.totalLongitude, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_10 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_v__dict = __pyx_t_10;
  __pyx_t_10 = 0;

  /* "(tree fragment)":7
 *     state = (self.area, self.cellCount, self.channelRole, self.id, self.originalArea, self.totalElevation, self.totalLatitude, self.totalLongitude, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_11 = (__pyx_v__dict != Py_None);
  __pyx_t_12 = (__pyx_t_11 != 0);
  if (__pyx_t_12) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v__dict);
    __pyx_t_9 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_9));
    __pyx_t_9 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.area, self.cellCount, self.channelRole, self.id, self.originalArea, self.totalElevation, self.totalLatitude, self.totalLongitude, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, None), state
 *     else:
 */
  __pyx_t_12 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_12) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_pyx_unpickle_WaterBody); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyTuple_New(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_10, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_103203160);
    __Pyx_GIVEREF(__pyx_int_103203160);
    PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_int_103203160);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_10, 2, Py_None);
    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_10);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_v_state);
    __pyx_t_9 = 0;
    __pyx_t_10 = 0;
    __pyx_r = __pyx_t_8;
    __pyx_t_8 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, None), state
 *     else:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_WaterBody__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_pyx_unpickle_WaterBody); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = PyTuple_New(3); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_10, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_103203160);
    __Pyx_GIVEREF(__pyx_int_103203160);
    PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_int_103203160);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_v_state);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_10);
    __pyx_t_8 = 0;
    __pyx_t_10 = 0;
    __pyx_r = __pyx_t_9;
    __pyx_t_9 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_WaterBody__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9WaterBody_28__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9WaterBody_28__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_WaterBody__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_WaterBody__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_WaterBody, (type(self), 0x626c158, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_WaterBody__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.WaterBody.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":267
 *     If the water role ins _UNKNOWN then the water body is ignored and the WATR HRUs included.
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## Number of cells
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData___init__[] = "Initialise class variables.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_7LSUData___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":270
 *         """Initialise class variables."""
 *         ## Number of cells
 *         self.cellCount = 0             # <<<<<<<<<<<<<<
 *         ## Area in square metres
 *         self.area = 0
 */
  __pyx_v_self->cellCount = 0;

  /* "QSWATPlus/dataInC.pyx":272
 *         self.cellCount = 0
 *         ## Area in square metres
 *         self.area = 0             # <<<<<<<<<<<<<<
 *         ## elevation at outlet
 *         self.outletElevation = 0
 */
  __pyx_v_self->area = 0.0;

  /* "QSWATPlus/dataInC.pyx":274
 *         self.area = 0
 *         ## elevation at outlet
 *         self.outletElevation = 0             # <<<<<<<<<<<<<<
 *         ## source of channel elevation
 *         self.sourceElevation = 0
 */
  __pyx_v_self->outletElevation = 0.0;

  /* "QSWATPlus/dataInC.pyx":276
 *         self.outletElevation = 0
 *         ## source of channel elevation
 *         self.sourceElevation = 0             # <<<<<<<<<<<<<<
 *         ## channel length in m
 *         self.channelLength = 0
 */
  __pyx_v_self->sourceElevation = 0.0;

  /* "QSWATPlus/dataInC.pyx":278
 *         self.sourceElevation = 0
 *         ## channel length in m
 *         self.channelLength = 0             # <<<<<<<<<<<<<<
 *         ## Strahler order
 *         self.channelOrder = 0
 */
  __pyx_v_self->channelLength = 0.0;

  /* "QSWATPlus/dataInC.pyx":280
 *         self.channelLength = 0
 *         ## Strahler order
 *         self.channelOrder = 0             # <<<<<<<<<<<<<<
 *         ## elevation of point with longest flow distance
 *         self.farElevation = 0
 */
  __pyx_v_self->channelOrder = 0;

  /* "QSWATPlus/dataInC.pyx":282
 *         self.channelOrder = 0
 *         ## elevation of point with longest flow distance
 *         self.farElevation = 0             # <<<<<<<<<<<<<<
 *         ## longest flow distance to channel
 *         # set negative so even a zero distance will be recorded
 */
  __pyx_v_self->farElevation = 0.0;

  /* "QSWATPlus/dataInC.pyx":285
 *         ## longest flow distance to channel
 *         # set negative so even a zero distance will be recorded
 *         self.farDistance = -1             # <<<<<<<<<<<<<<
 *         ## longitude (in projected units) of point with longest flow distance
 *         self.farPointX = 0
 */
  __pyx_v_self->farDistance = -1.0;

  /* "QSWATPlus/dataInC.pyx":287
 *         self.farDistance = -1
 *         ## longitude (in projected units) of point with longest flow distance
 *         self.farPointX = 0             # <<<<<<<<<<<<<<
 *         ## latitude (in projected units) of point with longest flow distance
 *         self.farPointY = 0
 */
  __pyx_v_self->farPointX = 0.0;

  /* "QSWATPlus/dataInC.pyx":289
 *         self.farPointX = 0
 *         ## latitude (in projected units) of point with longest flow distance
 *         self.farPointY = 0             # <<<<<<<<<<<<<<
 *         ## longitude (in projected units) of channel's mid point
 *         self.midPointX = 0
 */
  __pyx_v_self->farPointY = 0.0;

  /* "QSWATPlus/dataInC.pyx":291
 *         self.farPointY = 0
 *         ## longitude (in projected units) of channel's mid point
 *         self.midPointX = 0             # <<<<<<<<<<<<<<
 *         ## latitude (in projected units) of channel's mid point
 *         self.midPointY = 0
 */
  __pyx_v_self->midPointX = 0.0;

  /* "QSWATPlus/dataInC.pyx":293
 *         self.midPointX = 0
 *         ## latitude (in projected units) of channel's mid point
 *         self.midPointY = 0             # <<<<<<<<<<<<<<
 *         ## Total of elevation values (to compute mean)
 *         self.totalElevation = 0
 */
  __pyx_v_self->midPointY = 0.0;

  /* "QSWATPlus/dataInC.pyx":295
 *         self.midPointY = 0
 *         ## Total of elevation values (to compute mean)
 *         self.totalElevation = 0             # <<<<<<<<<<<<<<
 *         ## total of latitudes (in projected units) (to compute centroid)
 *         self.totalLatitude = 0
 */
  __pyx_v_self->totalElevation = 0.0;

  /* "QSWATPlus/dataInC.pyx":297
 *         self.totalElevation = 0
 *         ## total of latitudes (in projected units) (to compute centroid)
 *         self.totalLatitude = 0             # <<<<<<<<<<<<<<
 *         ## total of longitudes (in projected units) (to compute centroid)
 *         self.totalLongitude = 0
 */
  __pyx_v_self->totalLatitude = 0.0;

  /* "QSWATPlus/dataInC.pyx":299
 *         self.totalLatitude = 0
 *         ## total of longitudes (in projected units) (to compute centroid)
 *         self.totalLongitude = 0             # <<<<<<<<<<<<<<
 *         ## Total of slope values (to compute mean)
 *         self.totalSlope = 0
 */
  __pyx_v_self->totalLongitude = 0.0;

  /* "QSWATPlus/dataInC.pyx":301
 *         self.totalLongitude = 0
 *         ## Total of slope values (to compute mean)
 *         self.totalSlope = 0             # <<<<<<<<<<<<<<
 *         ## area in square metres with not-Nodata crop, soil, and slope values.
 *         self.cropSoilSlopeArea = 0
 */
  __pyx_v_self->totalSlope = 0.0;

  /* "QSWATPlus/dataInC.pyx":303
 *         self.totalSlope = 0
 *         ## area in square metres with not-Nodata crop, soil, and slope values.
 *         self.cropSoilSlopeArea = 0             # <<<<<<<<<<<<<<
 *         ## Map hru (relative) number -> CellData.
 *         self.hruMap = dict()
 */
  __pyx_v_self->cropSoilSlopeArea = 0.0;

  /* "QSWATPlus/dataInC.pyx":305
 *         self.cropSoilSlopeArea = 0
 *         ## Map hru (relative) number -> CellData.
 *         self.hruMap = dict()             # <<<<<<<<<<<<<<
 *         ## Nested map crop -> soil -> slope -> hru number.
 *         # Range of cropSoilSlopeNumbers must be same as domain of hruMap
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->hruMap);
  __Pyx_DECREF(__pyx_v_self->hruMap);
  __pyx_v_self->hruMap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":308
 *         ## Nested map crop -> soil -> slope -> hru number.
 *         # Range of cropSoilSlopeNumbers must be same as domain of hruMap
 *         self.cropSoilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *         ## Map of crop to area of crop in landscape unit.
 *         #
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->cropSoilSlopeNumbers);
  __Pyx_DECREF(__pyx_v_self->cropSoilSlopeNumbers);
  __pyx_v_self->cropSoilSlopeNumbers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":316
 *         # HRU creation occurs within landscape units if these are used,
 *         # so landscape areas do not change when HRUs are created.
 *         self.cropAreas = dict()             # <<<<<<<<<<<<<<
 *         ## Original crop area map
 *         self.originalCropAreas = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->cropAreas);
  __Pyx_DECREF(__pyx_v_self->cropAreas);
  __pyx_v_self->cropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":318
 *         self.cropAreas = dict()
 *         ## Original crop area map
 *         self.originalCropAreas = dict()             # <<<<<<<<<<<<<<
 *         ## Map of soil to area of soil in landscape unit.
 *         self.soilAreas = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalCropAreas);
  __Pyx_DECREF(__pyx_v_self->originalCropAreas);
  __pyx_v_self->originalCropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":320
 *         self.originalCropAreas = dict()
 *         ## Map of soil to area of soil in landscape unit.
 *         self.soilAreas = dict()             # <<<<<<<<<<<<<<
 *         ## Original soil area map
 *         self.originalSoilAreas = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->soilAreas);
  __Pyx_DECREF(__pyx_v_self->soilAreas);
  __pyx_v_self->soilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":322
 *         self.soilAreas = dict()
 *         ## Original soil area map
 *         self.originalSoilAreas = dict()             # <<<<<<<<<<<<<<
 *         ## Map of slope to area of slope in landscape unit.
 *         self.slopeAreas = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalSoilAreas);
  __Pyx_DECREF(__pyx_v_self->originalSoilAreas);
  __pyx_v_self->originalSoilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":324
 *         self.originalSoilAreas = dict()
 *         ## Map of slope to area of slope in landscape unit.
 *         self.slopeAreas = dict()             # <<<<<<<<<<<<<<
 *         ## Original slope area map
 *         self.originalSlopeAreas = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->slopeAreas);
  __Pyx_DECREF(__pyx_v_self->slopeAreas);
  __pyx_v_self->slopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":326
 *         self.slopeAreas = dict()
 *         ## Original slope area map
 *         self.originalSlopeAreas = dict()             # <<<<<<<<<<<<<<
 *         ## water body if any
 *         self.waterBody = None
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalSlopeAreas);
  __Pyx_DECREF(__pyx_v_self->originalSlopeAreas);
  __pyx_v_self->originalSlopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":328
 *         self.originalSlopeAreas = dict()
 *         ## water body if any
 *         self.waterBody = None             # <<<<<<<<<<<<<<
 *         ## last HRU number used
 *         self.lastHru = 0
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->waterBody);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->waterBody));
  __pyx_v_self->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)Py_None);

  /* "QSWATPlus/dataInC.pyx":330
 *         self.waterBody = None
 *         ## last HRU number used
 *         self.lastHru = 0             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict cropSoilAreas(self, int crop):
 */
  __pyx_v_self->lastHru = 0;

  /* "QSWATPlus/dataInC.pyx":267
 *     If the water role ins _UNKNOWN then the water body is ignored and the WATR HRUs included.
 *     """
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## Number of cells
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":332
 *         self.lastHru = 0
 * 
 *     cpdef dict cropSoilAreas(self, int crop):             # <<<<<<<<<<<<<<
 *         '''Map of soil -> area in square metres for particular crop.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_3cropSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_crop); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_csmap = 0;
  int __pyx_v_soil;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("cropSoilAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cropSoilAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_3cropSoilAreas)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 332, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 332, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 332, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":335
 *         '''Map of soil -> area in square metres for particular crop.'''
 *         cdef:
 *             dict csmap = dict()             # <<<<<<<<<<<<<<
 *             int soil
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_csmap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":339
 * 
 * #         assert crop in self.cropSoilSlopeNumbers
 *         for soil in self.cropSoilSlopeNumbers[crop].keys():             # <<<<<<<<<<<<<<
 *             csmap[soil] = self.cropSoilArea(crop, soil)
 *         return csmap
 */
  __pyx_t_6 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 339, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(__pyx_t_4 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "keys");
    __PYX_ERR(0, 339, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_t_4, 0, __pyx_n_s_keys, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, &__pyx_t_2, NULL, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_soil = __pyx_t_9;

    /* "QSWATPlus/dataInC.pyx":340
 * #         assert crop in self.cropSoilSlopeNumbers
 *         for soil in self.cropSoilSlopeNumbers[crop].keys():
 *             csmap[soil] = self.cropSoilArea(crop, soil)             # <<<<<<<<<<<<<<
 *         return csmap
 * 
 */
    __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self->__pyx_vtab)->cropSoilArea(__pyx_v_self, __pyx_v_crop, __pyx_v_soil, 0)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(PyDict_SetItem(__pyx_v_csmap, __pyx_t_4, __pyx_t_2) < 0)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":341
 *         for soil in self.cropSoilSlopeNumbers[crop].keys():
 *             csmap[soil] = self.cropSoilArea(crop, soil)
 *         return csmap             # <<<<<<<<<<<<<<
 * 
 *     cpdef double cropSoilArea(self, int crop, int soil):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_csmap);
  __pyx_r = __pyx_v_csmap;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":332
 *         self.lastHru = 0
 * 
 *     cpdef dict cropSoilAreas(self, int crop):             # <<<<<<<<<<<<<<
 *         '''Map of soil -> area in square metres for particular crop.'''
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_csmap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_3cropSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_crop); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_2cropSoilAreas[] = "Map of soil -> area in square metres for particular crop.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_3cropSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_crop) {
  int __pyx_v_crop;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cropSoilAreas (wrapper)", 0);
  assert(__pyx_arg_crop); {
    __pyx_v_crop = __Pyx_PyInt_As_int(__pyx_arg_crop); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 332, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_2cropSoilAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((int)__pyx_v_crop));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_2cropSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cropSoilAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilAreas(__pyx_v_self, __pyx_v_crop, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":343
 *         return csmap
 * 
 *     cpdef double cropSoilArea(self, int crop, int soil):             # <<<<<<<<<<<<<<
 *         '''Area in square metres for crop-soil combination.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_5cropSoilArea(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static double __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_skip_dispatch) {
  double __pyx_v_area;
  int __pyx_v_hru;
  PyObject *__pyx_v_slopeNumbers = NULL;
  PyObject *__pyx_v_cellData = NULL;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  double __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("cropSoilArea", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cropSoilArea); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_5cropSoilArea)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 343, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_9;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":346
 *         '''Area in square metres for crop-soil combination.'''
 *         cdef:
 *             double area = 0             # <<<<<<<<<<<<<<
 *             int hru
 * 
 */
  __pyx_v_area = 0.0;

  /* "QSWATPlus/dataInC.pyx":350
 * 
 * #         assert crop in self.cropSoilSlopeNumbers and soil in self.cropSoilSlopeNumbers[crop]
 *         slopeNumbers = self.cropSoilSlopeNumbers[crop][soil]             # <<<<<<<<<<<<<<
 *         for hru in slopeNumbers.values():
 *             cellData = self.hruMap[hru]
 */
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 350, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_2, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_slopeNumbers = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":351
 * #         assert crop in self.cropSoilSlopeNumbers and soil in self.cropSoilSlopeNumbers[crop]
 *         slopeNumbers = self.cropSoilSlopeNumbers[crop][soil]
 *         for hru in slopeNumbers.values():             # <<<<<<<<<<<<<<
 *             cellData = self.hruMap[hru]
 *             area += cellData.area
 */
  __pyx_t_10 = 0;
  if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 351, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 0, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_7)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_12 == 0)) break;
    if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 351, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_hru = __pyx_t_12;

    /* "QSWATPlus/dataInC.pyx":352
 *         slopeNumbers = self.cropSoilSlopeNumbers[crop][soil]
 *         for hru in slopeNumbers.values():
 *             cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *             area += cellData.area
 *         return area
 */
    if (unlikely(__pyx_v_self->hruMap == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 352, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_cellData, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "QSWATPlus/dataInC.pyx":353
 *         for hru in slopeNumbers.values():
 *             cellData = self.hruMap[hru]
 *             area += cellData.area             # <<<<<<<<<<<<<<
 *         return area
 * 
 */
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_area); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_cellData, __pyx_n_s_area); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_8); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 353, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_v_area = __pyx_t_9;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":354
 *             cellData = self.hruMap[hru]
 *             area += cellData.area
 *         return area             # <<<<<<<<<<<<<<
 * 
 *     cdef double cropArea(self, int crop):
 */
  __pyx_r = __pyx_v_area;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":343
 *         return csmap
 * 
 *     cpdef double cropSoilArea(self, int crop, int soil):             # <<<<<<<<<<<<<<
 *         '''Area in square metres for crop-soil combination.'''
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.cropSoilArea", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF(__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_5cropSoilArea(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_4cropSoilArea[] = "Area in square metres for crop-soil combination.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_5cropSoilArea(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_crop;
  int __pyx_v_soil;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cropSoilArea (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_crop,&__pyx_n_s_soil,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_soil)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cropSoilArea", 1, 2, 2, 1); __PYX_ERR(0, 343, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cropSoilArea") < 0)) __PYX_ERR(0, 343, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_crop = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 343, __pyx_L3_error)
    __pyx_v_soil = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_soil == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 343, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cropSoilArea", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 343, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_4cropSoilArea(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), __pyx_v_crop, __pyx_v_soil);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_4cropSoilArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cropSoilArea", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilArea(__pyx_v_self, __pyx_v_crop, __pyx_v_soil, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":356
 *         return area
 * 
 *     cdef double cropArea(self, int crop):             # <<<<<<<<<<<<<<
 *         '''Area in square metres for crop.'''
 *         cdef:
 */

static double __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropArea(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop) {
  double __pyx_v_area;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("cropArea", 0);

  /* "QSWATPlus/dataInC.pyx":359
 *         '''Area in square metres for crop.'''
 *         cdef:
 *             double area = 0             # <<<<<<<<<<<<<<
 *             dict slopeNumbers
 *             int hru
 */
  __pyx_v_area = 0.0;

  /* "QSWATPlus/dataInC.pyx":366
 *         # use when cropAreas may not be set
 * #         assert crop in self.cropSoilSlopeNumbers, u'Landuse {0} not in basin data'.format(crop)
 *         for slopeNumbers in self.cropSoilSlopeNumbers[crop].values():             # <<<<<<<<<<<<<<
 *             for hru in slopeNumbers.values():
 *                 cellData = self.hruMap[hru]
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 366, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(__pyx_t_6 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 366, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_t_6, 0, __pyx_n_s_values, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, NULL, &__pyx_t_5, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (!(likely(PyDict_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_5)->tp_name), 0))) __PYX_ERR(0, 366, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "QSWATPlus/dataInC.pyx":367
 * #         assert crop in self.cropSoilSlopeNumbers, u'Landuse {0} not in basin data'.format(crop)
 *         for slopeNumbers in self.cropSoilSlopeNumbers[crop].values():
 *             for hru in slopeNumbers.values():             # <<<<<<<<<<<<<<
 *                 cellData = self.hruMap[hru]
 *                 area += cellData.area
 */
    __pyx_t_8 = 0;
    if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 367, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_9), (&__pyx_t_7)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 367, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_6;
    __pyx_t_6 = 0;
    while (1) {
      __pyx_t_10 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_9, &__pyx_t_8, NULL, &__pyx_t_6, NULL, __pyx_t_7);
      if (unlikely(__pyx_t_10 == 0)) break;
      if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 367, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_v_hru = __pyx_t_10;

      /* "QSWATPlus/dataInC.pyx":368
 *         for slopeNumbers in self.cropSoilSlopeNumbers[crop].values():
 *             for hru in slopeNumbers.values():
 *                 cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *                 area += cellData.area
 *         return area
 */
      if (unlikely(__pyx_v_self->hruMap == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 368, __pyx_L1_error)
      }
      __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_6); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (!(likely(((__pyx_t_11) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_11, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_11));
      __pyx_t_11 = 0;

      /* "QSWATPlus/dataInC.pyx":369
 *             for hru in slopeNumbers.values():
 *                 cellData = self.hruMap[hru]
 *                 area += cellData.area             # <<<<<<<<<<<<<<
 *         return area
 * 
 */
      __pyx_v_area = (__pyx_v_area + __pyx_v_cellData->area);
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":370
 *                 cellData = self.hruMap[hru]
 *                 area += cellData.area
 *         return area             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict cropSoilSlopeAreas(self, int crop, int soil):
 */
  __pyx_r = __pyx_v_area;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":356
 *         return area
 * 
 *     cdef double cropArea(self, int crop):             # <<<<<<<<<<<<<<
 *         '''Area in square metres for crop.'''
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.cropArea", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":372
 *         return area
 * 
 *     cpdef dict cropSoilSlopeAreas(self, int crop, int soil):             # <<<<<<<<<<<<<<
 *         '''Map of slope -> area in square metres for this crop and soil.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7cropSoilSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_cssmap = 0;
  int __pyx_v_slope;
  int __pyx_v_hru;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("cropSoilSlopeAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cropSoilSlopeAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7cropSoilSlopeAreas)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 372, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 372, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":375
 *         '''Map of slope -> area in square metres for this crop and soil.'''
 *         cdef:
 *             dict cssmap = dict()             # <<<<<<<<<<<<<<
 *             int slope
 *             int hru
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_cssmap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":380
 * 
 * #         assert crop in self.cropSoilSlopeNumbers and soil in self.cropSoilSlopeNumbers[crop]
 *         for (slope, hru) in self.cropSoilSlopeNumbers[crop][soil].items():             # <<<<<<<<<<<<<<
 *             cssmap[slope] = self.hruMap[hru].area
 *         return cssmap
 */
  __pyx_t_9 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 380, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_5, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 380, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_t_2, 0, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_10, &__pyx_t_9, &__pyx_t_5, &__pyx_t_2, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_11 == 0)) break;
    if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_slope = __pyx_t_11;
    __pyx_v_hru = __pyx_t_12;

    /* "QSWATPlus/dataInC.pyx":381
 * #         assert crop in self.cropSoilSlopeNumbers and soil in self.cropSoilSlopeNumbers[crop]
 *         for (slope, hru) in self.cropSoilSlopeNumbers[crop][soil].items():
 *             cssmap[slope] = self.hruMap[hru].area             # <<<<<<<<<<<<<<
 *         return cssmap
 * 
 */
    if (unlikely(__pyx_v_self->hruMap == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 381, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_area); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(PyDict_SetItem(__pyx_v_cssmap, __pyx_t_5, __pyx_t_2) < 0)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":382
 *         for (slope, hru) in self.cropSoilSlopeNumbers[crop][soil].items():
 *             cssmap[slope] = self.hruMap[hru].area
 *         return cssmap             # <<<<<<<<<<<<<<
 * 
 *     cpdef object getDominantHRU(self, waterLanduse, allowWater):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_cssmap);
  __pyx_r = __pyx_v_cssmap;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":372
 *         return area
 * 
 *     cpdef dict cropSoilSlopeAreas(self, int crop, int soil):             # <<<<<<<<<<<<<<
 *         '''Map of slope -> area in square metres for this crop and soil.'''
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cssmap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7cropSoilSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_6cropSoilSlopeAreas[] = "Map of slope -> area in square metres for this crop and soil.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7cropSoilSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_crop;
  int __pyx_v_soil;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cropSoilSlopeAreas (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_crop,&__pyx_n_s_soil,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_soil)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cropSoilSlopeAreas", 1, 2, 2, 1); __PYX_ERR(0, 372, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cropSoilSlopeAreas") < 0)) __PYX_ERR(0, 372, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_crop = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L3_error)
    __pyx_v_soil = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_soil == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 372, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cropSoilSlopeAreas", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 372, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6cropSoilSlopeAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), __pyx_v_crop, __pyx_v_soil);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_6cropSoilSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cropSoilSlopeAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeAreas(__pyx_v_self, __pyx_v_crop, __pyx_v_soil, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":384
 *         return cssmap
 * 
 *     cpdef object getDominantHRU(self, waterLanduse, allowWater):             # <<<<<<<<<<<<<<
 *         '''Find the HRU with the largest area,
 *         and return its crop, soil and slope.
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9getDominantHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_getDominantHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_allowWater, int __pyx_skip_dispatch) {
  double __pyx_v_maxArea;
  int __pyx_v_maxCrop;
  int __pyx_v_maxSoil;
  int __pyx_v_maxSlope;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  double __pyx_v_area;
  PyObject *__pyx_v_crop = NULL;
  PyObject *__pyx_v_soilSlopeNumbers = NULL;
  PyObject *__pyx_v_soil = NULL;
  PyObject *__pyx_v_slopeNumbers = NULL;
  PyObject *__pyx_v_slope = NULL;
  PyObject *__pyx_v_hru = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  int __pyx_t_17;
  double __pyx_t_18;
  __Pyx_RefNannySetupContext("getDominantHRU", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getDominantHRU); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9getDominantHRU)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_waterLanduse, __pyx_v_allowWater};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_waterLanduse, __pyx_v_allowWater};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_waterLanduse);
          __Pyx_GIVEREF(__pyx_v_waterLanduse);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_waterLanduse);
          __Pyx_INCREF(__pyx_v_allowWater);
          __Pyx_GIVEREF(__pyx_v_allowWater);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_allowWater);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":390
 *         '''
 *         cdef:
 *             double maxArea = 0             # <<<<<<<<<<<<<<
 *             int maxCrop = -1
 *             int maxSoil = -1
 */
  __pyx_v_maxArea = 0.0;

  /* "QSWATPlus/dataInC.pyx":391
 *         cdef:
 *             double maxArea = 0
 *             int maxCrop = -1             # <<<<<<<<<<<<<<
 *             int maxSoil = -1
 *             int maxSlope = -1
 */
  __pyx_v_maxCrop = -1;

  /* "QSWATPlus/dataInC.pyx":392
 *             double maxArea = 0
 *             int maxCrop = -1
 *             int maxSoil = -1             # <<<<<<<<<<<<<<
 *             int maxSlope = -1
 *             CellData cellData
 */
  __pyx_v_maxSoil = -1;

  /* "QSWATPlus/dataInC.pyx":393
 *             int maxCrop = -1
 *             int maxSoil = -1
 *             int maxSlope = -1             # <<<<<<<<<<<<<<
 *             CellData cellData
 *             double area
 */
  __pyx_v_maxSlope = -1;

  /* "QSWATPlus/dataInC.pyx":397
 *             double area
 * 
 *         for (crop, soilSlopeNumbers) in self.cropSoilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *             if crop != waterLanduse or allowWater:
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():
 */
  __pyx_t_7 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 397, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->cropSoilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_8), (&__pyx_t_5)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_8, &__pyx_t_7, &__pyx_t_2, &__pyx_t_3, NULL, __pyx_t_5);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_crop, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":398
 * 
 *         for (crop, soilSlopeNumbers) in self.cropSoilSlopeNumbers.items():
 *             if crop != waterLanduse or allowWater:             # <<<<<<<<<<<<<<
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():
 *                     for (slope, hru) in slopeNumbers.items():
 */
    __pyx_t_3 = PyObject_RichCompare(__pyx_v_crop, __pyx_v_waterLanduse, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 398, __pyx_L1_error)
    __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!__pyx_t_11) {
    } else {
      __pyx_t_10 = __pyx_t_11;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_allowWater); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
    __pyx_t_10 = __pyx_t_11;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_10) {

      /* "QSWATPlus/dataInC.pyx":399
 *         for (crop, soilSlopeNumbers) in self.cropSoilSlopeNumbers.items():
 *             if crop != waterLanduse or allowWater:
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *                     for (slope, hru) in slopeNumbers.items():
 *                         cellData = self.hruMap[hru]
 */
      __pyx_t_12 = 0;
      if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 399, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 0, __pyx_n_s_items, (&__pyx_t_13), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 399, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF(__pyx_t_3);
      __pyx_t_3 = __pyx_t_2;
      __pyx_t_2 = 0;
      while (1) {
        __pyx_t_14 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_13, &__pyx_t_12, &__pyx_t_2, &__pyx_t_6, NULL, __pyx_t_9);
        if (unlikely(__pyx_t_14 == 0)) break;
        if (unlikely(__pyx_t_14 == -1)) __PYX_ERR(0, 399, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_XDECREF_SET(__pyx_v_soil, __pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "QSWATPlus/dataInC.pyx":400
 *             if crop != waterLanduse or allowWater:
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():
 *                     for (slope, hru) in slopeNumbers.items():             # <<<<<<<<<<<<<<
 *                         cellData = self.hruMap[hru]
 *                         area = cellData.area
 */
        __pyx_t_15 = 0;
        if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
          __PYX_ERR(0, 400, __pyx_L1_error)
        }
        __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 0, __pyx_n_s_items, (&__pyx_t_16), (&__pyx_t_14)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 400, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_XDECREF(__pyx_t_6);
        __pyx_t_6 = __pyx_t_2;
        __pyx_t_2 = 0;
        while (1) {
          __pyx_t_17 = __Pyx_dict_iter_next(__pyx_t_6, __pyx_t_16, &__pyx_t_15, &__pyx_t_2, &__pyx_t_4, NULL, __pyx_t_14);
          if (unlikely(__pyx_t_17 == 0)) break;
          if (unlikely(__pyx_t_17 == -1)) __PYX_ERR(0, 400, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_XDECREF_SET(__pyx_v_slope, __pyx_t_2);
          __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_hru, __pyx_t_4);
          __pyx_t_4 = 0;

          /* "QSWATPlus/dataInC.pyx":401
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():
 *                     for (slope, hru) in slopeNumbers.items():
 *                         cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *                         area = cellData.area
 *                         if area > maxArea:
 */
          if (unlikely(__pyx_v_self->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 401, __pyx_L1_error)
          }
          __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_v_hru); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 401, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 401, __pyx_L1_error)
          __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_4));
          __pyx_t_4 = 0;

          /* "QSWATPlus/dataInC.pyx":402
 *                     for (slope, hru) in slopeNumbers.items():
 *                         cellData = self.hruMap[hru]
 *                         area = cellData.area             # <<<<<<<<<<<<<<
 *                         if area > maxArea:
 *                             maxArea = area
 */
          __pyx_t_18 = __pyx_v_cellData->area;
          __pyx_v_area = __pyx_t_18;

          /* "QSWATPlus/dataInC.pyx":403
 *                         cellData = self.hruMap[hru]
 *                         area = cellData.area
 *                         if area > maxArea:             # <<<<<<<<<<<<<<
 *                             maxArea = area
 *                             maxCrop = crop
 */
          __pyx_t_10 = ((__pyx_v_area > __pyx_v_maxArea) != 0);
          if (__pyx_t_10) {

            /* "QSWATPlus/dataInC.pyx":404
 *                         area = cellData.area
 *                         if area > maxArea:
 *                             maxArea = area             # <<<<<<<<<<<<<<
 *                             maxCrop = crop
 *                             maxSoil = soil
 */
            __pyx_v_maxArea = __pyx_v_area;

            /* "QSWATPlus/dataInC.pyx":405
 *                         if area > maxArea:
 *                             maxArea = area
 *                             maxCrop = crop             # <<<<<<<<<<<<<<
 *                             maxSoil = soil
 *                             maxSlope = slope
 */
            __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_v_crop); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 405, __pyx_L1_error)
            __pyx_v_maxCrop = __pyx_t_17;

            /* "QSWATPlus/dataInC.pyx":406
 *                             maxArea = area
 *                             maxCrop = crop
 *                             maxSoil = soil             # <<<<<<<<<<<<<<
 *                             maxSlope = slope
 *         return (maxCrop, maxSoil, maxSlope)
 */
            __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_v_soil); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L1_error)
            __pyx_v_maxSoil = __pyx_t_17;

            /* "QSWATPlus/dataInC.pyx":407
 *                             maxCrop = crop
 *                             maxSoil = soil
 *                             maxSlope = slope             # <<<<<<<<<<<<<<
 *         return (maxCrop, maxSoil, maxSlope)
 * 
 */
            __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_v_slope); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 407, __pyx_L1_error)
            __pyx_v_maxSlope = __pyx_t_17;

            /* "QSWATPlus/dataInC.pyx":403
 *                         cellData = self.hruMap[hru]
 *                         area = cellData.area
 *                         if area > maxArea:             # <<<<<<<<<<<<<<
 *                             maxArea = area
 *                             maxCrop = crop
 */
          }
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "QSWATPlus/dataInC.pyx":398
 * 
 *         for (crop, soilSlopeNumbers) in self.cropSoilSlopeNumbers.items():
 *             if crop != waterLanduse or allowWater:             # <<<<<<<<<<<<<<
 *                 for (soil, slopeNumbers) in soilSlopeNumbers.items():
 *                     for (slope, hru) in slopeNumbers.items():
 */
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":408
 *                             maxSoil = soil
 *                             maxSlope = slope
 *         return (maxCrop, maxSoil, maxSlope)             # <<<<<<<<<<<<<<
 * 
 *     cpdef void redistribute(self, double factor):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_maxCrop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_maxSoil); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_maxSlope); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_6 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":384
 *         return cssmap
 * 
 *     cpdef object getDominantHRU(self, waterLanduse, allowWater):             # <<<<<<<<<<<<<<
 *         '''Find the HRU with the largest area,
 *         and return its crop, soil and slope.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.getDominantHRU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_XDECREF(__pyx_v_crop);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_soil);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF(__pyx_v_slope);
  __Pyx_XDECREF(__pyx_v_hru);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9getDominantHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_8getDominantHRU[] = "Find the HRU with the largest area, \n        and return its crop, soil and slope.  \n        If allowWater is False, waterLanduse crop is ignored.\n        ";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9getDominantHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_waterLanduse = 0;
  PyObject *__pyx_v_allowWater = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getDominantHRU (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_waterLanduse,&__pyx_n_s_allowWater,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterLanduse)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_allowWater)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getDominantHRU", 1, 2, 2, 1); __PYX_ERR(0, 384, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getDominantHRU") < 0)) __PYX_ERR(0, 384, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_waterLanduse = values[0];
    __pyx_v_allowWater = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getDominantHRU", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 384, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.getDominantHRU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_8getDominantHRU(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), __pyx_v_waterLanduse, __pyx_v_allowWater);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_8getDominantHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_allowWater) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getDominantHRU", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_getDominantHRU(__pyx_v_self, __pyx_v_waterLanduse, __pyx_v_allowWater, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.getDominantHRU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":410
 *         return (maxCrop, maxSoil, maxSlope)
 * 
 *     cpdef void redistribute(self, double factor):             # <<<<<<<<<<<<<<
 *         '''Multiply all the HRU areas by factor.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11redistribute(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_redistribute(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_factor, int __pyx_skip_dispatch) {
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("redistribute", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_redistribute); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11redistribute)) {
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":416
 *             CellData cellData
 * 
 *         for (hru, cellData) in self.hruMap.items():             # <<<<<<<<<<<<<<
 *             cellData.multiply(factor)
 *             self.hruMap[hru] = cellData
 */
  __pyx_t_6 = 0;
  if (unlikely(__pyx_v_self->hruMap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 416, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->hruMap, 1, __pyx_n_s_items, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, &__pyx_t_2, &__pyx_t_4, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 416, __pyx_L1_error)
    __pyx_v_hru = __pyx_t_9;
    __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":417
 * 
 *         for (hru, cellData) in self.hruMap.items():
 *             cellData.multiply(factor)             # <<<<<<<<<<<<<<
 *             self.hruMap[hru] = cellData
 *         # keep area of water hrus and water body consistent
 */
    ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData *)__pyx_v_cellData->__pyx_vtab)->multiply(__pyx_v_cellData, __pyx_v_factor, 0);

    /* "QSWATPlus/dataInC.pyx":418
 *         for (hru, cellData) in self.hruMap.items():
 *             cellData.multiply(factor)
 *             self.hruMap[hru] = cellData             # <<<<<<<<<<<<<<
 *         # keep area of water hrus and water body consistent
 *         if self.waterBody is not None:
 */
    if (unlikely(__pyx_v_self->hruMap == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 418, __pyx_L1_error)
    }
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(PyDict_SetItem(__pyx_v_self->hruMap, __pyx_t_4, ((PyObject *)__pyx_v_cellData)) < 0)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":420
 *             self.hruMap[hru] = cellData
 *         # keep area of water hrus and water body consistent
 *         if self.waterBody is not None:             # <<<<<<<<<<<<<<
 *             self.waterBody.multiply(factor)
 * 
 */
  __pyx_t_10 = (((PyObject *)__pyx_v_self->waterBody) != Py_None);
  __pyx_t_11 = (__pyx_t_10 != 0);
  if (__pyx_t_11) {

    /* "QSWATPlus/dataInC.pyx":421
 *         # keep area of water hrus and water body consistent
 *         if self.waterBody is not None:
 *             self.waterBody.multiply(factor)             # <<<<<<<<<<<<<<
 * 
 *     cpdef void redistributeNodataAndWater(self, int chLink, int lscape, list chLinksByLakes, int waterLanduse):
 */
    ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self->waterBody->__pyx_vtab)->multiply(__pyx_v_self->waterBody, __pyx_v_factor, 0);

    /* "QSWATPlus/dataInC.pyx":420
 *             self.hruMap[hru] = cellData
 *         # keep area of water hrus and water body consistent
 *         if self.waterBody is not None:             # <<<<<<<<<<<<<<
 *             self.waterBody.multiply(factor)
 * 
 */
  }

  /* "QSWATPlus/dataInC.pyx":410
 *         return (maxCrop, maxSoil, maxSlope)
 * 
 *     cpdef void redistribute(self, double factor):             # <<<<<<<<<<<<<<
 *         '''Multiply all the HRU areas by factor.'''
 *         cdef:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11redistribute(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_10redistribute[] = "Multiply all the HRU areas by factor.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11redistribute(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor) {
  double __pyx_v_factor;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("redistribute (wrapper)", 0);
  assert(__pyx_arg_factor); {
    __pyx_v_factor = __pyx_PyFloat_AsDouble(__pyx_arg_factor); if (unlikely((__pyx_v_factor == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 410, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10redistribute(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((double)__pyx_v_factor));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10redistribute(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_factor) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("redistribute", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_redistribute(__pyx_v_self, __pyx_v_factor, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":423
 *             self.waterBody.multiply(factor)
 * 
 *     cpdef void redistributeNodataAndWater(self, int chLink, int lscape, list chLinksByLakes, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Add nodata areas proportionately to originalareas.
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13redistributeNodataAndWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_redistributeNodataAndWater(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_chLink, int __pyx_v_lscape, PyObject *__pyx_v_chLinksByLakes, CYTHON_UNUSED int __pyx_v_waterLanduse, int __pyx_skip_dispatch) {
  double __pyx_v_areaToRedistribute;
  double __pyx_v_redistributeFactor;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  double __pyx_t_13;
  __Pyx_RefNannySetupContext("redistributeNodataAndWater", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_redistributeNodataAndWater); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13redistributeNodataAndWater)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_chLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_lscape); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_waterLanduse); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_6 = __pyx_t_1; __pyx_t_7 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_8 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_v_chLinksByLakes, __pyx_t_5};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
          PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_v_chLinksByLakes, __pyx_t_5};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        } else
        #endif
        {
          __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          if (__pyx_t_7) {
            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
          __Pyx_INCREF(__pyx_v_chLinksByLakes);
          __Pyx_GIVEREF(__pyx_v_chLinksByLakes);
          PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_v_chLinksByLakes);
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_5);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_5 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        }
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":433
 *         # water bodies adjacent to lakes are counted as part of lakes, and whole lsu area is counted as land
 *         # but beware making area zero if all is water
 *         if self.waterBody is not None and self.cropSoilSlopeArea > self.waterBody.originalArea and \             # <<<<<<<<<<<<<<
 *             self.waterBody.isUnknown() and chLink in chLinksByLakes and \
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}
 */
  __pyx_t_11 = (((PyObject *)__pyx_v_self->waterBody) != Py_None);
  __pyx_t_12 = (__pyx_t_11 != 0);
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_12 = ((__pyx_v_self->cropSoilSlopeArea > __pyx_v_self->waterBody->originalArea) != 0);
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L4_bool_binop_done;
  }

  /* "QSWATPlus/dataInC.pyx":434
 *         # but beware making area zero if all is water
 *         if self.waterBody is not None and self.cropSoilSlopeArea > self.waterBody.originalArea and \
 *             self.waterBody.isUnknown() and chLink in chLinksByLakes and \             # <<<<<<<<<<<<<<
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}
 *             # self.removeWaterHRUs(waterLanduse)
 */
  __pyx_t_12 = (((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self->waterBody->__pyx_vtab)->isUnknown(__pyx_v_self->waterBody, 0) != 0);
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_chLink); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_v_chLinksByLakes, Py_EQ)); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_11 = (__pyx_t_12 != 0);
  if (__pyx_t_11) {
  } else {
    __pyx_t_10 = __pyx_t_11;
    goto __pyx_L4_bool_binop_done;
  }

  /* "QSWATPlus/dataInC.pyx":435
 *         if self.waterBody is not None and self.cropSoilSlopeArea > self.waterBody.originalArea and \
 *             self.waterBody.isUnknown() and chLink in chLinksByLakes and \
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}             # <<<<<<<<<<<<<<
 *             # self.removeWaterHRUs(waterLanduse)
 *             self.waterBody = None
 */
  switch (__pyx_v_lscape) {
    case 0:
    case 1:
    __pyx_t_11 = 1;
    break;
    default:
    __pyx_t_11 = 0;
    break;
  }
  __pyx_t_12 = (__pyx_t_11 != 0);
  __pyx_t_10 = __pyx_t_12;
  __pyx_L4_bool_binop_done:;

  /* "QSWATPlus/dataInC.pyx":433
 *         # water bodies adjacent to lakes are counted as part of lakes, and whole lsu area is counted as land
 *         # but beware making area zero if all is water
 *         if self.waterBody is not None and self.cropSoilSlopeArea > self.waterBody.originalArea and \             # <<<<<<<<<<<<<<
 *             self.waterBody.isUnknown() and chLink in chLinksByLakes and \
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}
 */
  if (__pyx_t_10) {

    /* "QSWATPlus/dataInC.pyx":437
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}
 *             # self.removeWaterHRUs(waterLanduse)
 *             self.waterBody = None             # <<<<<<<<<<<<<<
 *         areaToRedistribute = self.area - self.cropSoilSlopeArea
 *         if self.area > areaToRedistribute > 0:
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_self->waterBody);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->waterBody));
    __pyx_v_self->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)Py_None);

    /* "QSWATPlus/dataInC.pyx":433
 *         # water bodies adjacent to lakes are counted as part of lakes, and whole lsu area is counted as land
 *         # but beware making area zero if all is water
 *         if self.waterBody is not None and self.cropSoilSlopeArea > self.waterBody.originalArea and \             # <<<<<<<<<<<<<<
 *             self.waterBody.isUnknown() and chLink in chLinksByLakes and \
 *             lscape in {0, 1}:  # {QSWATUtils._NOLANDSCAPE, QSWATUtils._FLOODPLAIN}
 */
  }

  /* "QSWATPlus/dataInC.pyx":438
 *             # self.removeWaterHRUs(waterLanduse)
 *             self.waterBody = None
 *         areaToRedistribute = self.area - self.cropSoilSlopeArea             # <<<<<<<<<<<<<<
 *         if self.area > areaToRedistribute > 0:
 *             redistributeFactor = self.area / (self.area - areaToRedistribute)
 */
  __pyx_v_areaToRedistribute = (__pyx_v_self->area - __pyx_v_self->cropSoilSlopeArea);

  /* "QSWATPlus/dataInC.pyx":439
 *             self.waterBody = None
 *         areaToRedistribute = self.area - self.cropSoilSlopeArea
 *         if self.area > areaToRedistribute > 0:             # <<<<<<<<<<<<<<
 *             redistributeFactor = self.area / (self.area - areaToRedistribute)
 *             self.redistribute(redistributeFactor)
 */
  __pyx_t_10 = (__pyx_v_self->area > __pyx_v_areaToRedistribute);
  if (__pyx_t_10) {
    __pyx_t_10 = (__pyx_v_areaToRedistribute > 0.0);
  }
  __pyx_t_12 = (__pyx_t_10 != 0);
  if (__pyx_t_12) {

    /* "QSWATPlus/dataInC.pyx":440
 *         areaToRedistribute = self.area - self.cropSoilSlopeArea
 *         if self.area > areaToRedistribute > 0:
 *             redistributeFactor = self.area / (self.area - areaToRedistribute)             # <<<<<<<<<<<<<<
 *             self.redistribute(redistributeFactor)
 * 
 */
    __pyx_t_13 = (__pyx_v_self->area - __pyx_v_areaToRedistribute);
    if (unlikely(__pyx_t_13 == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 440, __pyx_L1_error)
    }
    __pyx_v_redistributeFactor = (__pyx_v_self->area / __pyx_t_13);

    /* "QSWATPlus/dataInC.pyx":441
 *         if self.area > areaToRedistribute > 0:
 *             redistributeFactor = self.area / (self.area - areaToRedistribute)
 *             self.redistribute(redistributeFactor)             # <<<<<<<<<<<<<<
 * 
 *     cpdef void removeHRU(self, int hru, int crop, int soil, int slope):
 */
    ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self->__pyx_vtab)->redistribute(__pyx_v_self, __pyx_v_redistributeFactor, 0);

    /* "QSWATPlus/dataInC.pyx":439
 *             self.waterBody = None
 *         areaToRedistribute = self.area - self.cropSoilSlopeArea
 *         if self.area > areaToRedistribute > 0:             # <<<<<<<<<<<<<<
 *             redistributeFactor = self.area / (self.area - areaToRedistribute)
 *             self.redistribute(redistributeFactor)
 */
  }

  /* "QSWATPlus/dataInC.pyx":423
 *             self.waterBody.multiply(factor)
 * 
 *     cpdef void redistributeNodataAndWater(self, int chLink, int lscape, list chLinksByLakes, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Add nodata areas proportionately to originalareas.
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.redistributeNodataAndWater", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13redistributeNodataAndWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_12redistributeNodataAndWater[] = "Add nodata areas proportionately to originalareas. \n         \n        Also removes water body if not a separate reservoir or pond \n        and channel flows into or is inside lake and lscape is nolandscape or floodplain.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13redistributeNodataAndWater(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_chLink;
  int __pyx_v_lscape;
  PyObject *__pyx_v_chLinksByLakes = 0;
  int __pyx_v_waterLanduse;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("redistributeNodataAndWater (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_chLink,&__pyx_n_s_lscape,&__pyx_n_s_chLinksByLakes,&__pyx_n_s_waterLanduse,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chLink)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lscape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("redistributeNodataAndWater", 1, 4, 4, 1); __PYX_ERR(0, 423, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chLinksByLakes)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("redistributeNodataAndWater", 1, 4, 4, 2); __PYX_ERR(0, 423, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterLanduse)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("redistributeNodataAndWater", 1, 4, 4, 3); __PYX_ERR(0, 423, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "redistributeNodataAndWater") < 0)) __PYX_ERR(0, 423, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_chLink = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_chLink == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 423, __pyx_L3_error)
    __pyx_v_lscape = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_lscape == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 423, __pyx_L3_error)
    __pyx_v_chLinksByLakes = ((PyObject*)values[2]);
    __pyx_v_waterLanduse = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_waterLanduse == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 423, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("redistributeNodataAndWater", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 423, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.redistributeNodataAndWater", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chLinksByLakes), (&PyList_Type), 1, "chLinksByLakes", 1))) __PYX_ERR(0, 423, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12redistributeNodataAndWater(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), __pyx_v_chLink, __pyx_v_lscape, __pyx_v_chLinksByLakes, __pyx_v_waterLanduse);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12redistributeNodataAndWater(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_chLink, int __pyx_v_lscape, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("redistributeNodataAndWater", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_redistributeNodataAndWater(__pyx_v_self, __pyx_v_chLink, __pyx_v_lscape, __pyx_v_chLinksByLakes, __pyx_v_waterLanduse, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.redistributeNodataAndWater", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":443
 *             self.redistribute(redistributeFactor)
 * 
 *     cpdef void removeHRU(self, int hru, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         '''Remove an HRU from the hruMap and the cropSoilSlopeNumbers map.'''
 * #         assert crop in self.cropSoilSlopeNumbers and \
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15removeHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_removeHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_hru, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, int __pyx_skip_dispatch) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("removeHRU", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_removeHRU); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15removeHRU)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_7 = __pyx_t_1; __pyx_t_8 = NULL;
        __pyx_t_9 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_9 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[5] = {__pyx_t_8, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 4+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
          PyObject *__pyx_temp[5] = {__pyx_t_8, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 4+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else
        #endif
        {
          __pyx_t_10 = PyTuple_New(4+__pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          if (__pyx_t_8) {
            __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __pyx_t_8 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_9, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_9, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_9, __pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_10, 3+__pyx_t_9, __pyx_t_6);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_5 = 0;
          __pyx_t_6 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":449
 * #             slope in self.cropSoilSlopeNumbers[crop][soil] and \
 * #             hru == self.cropSoilSlopeNumbers[crop][soil][slope]
 *         del self.hruMap[hru]             # <<<<<<<<<<<<<<
 *         del self.cropSoilSlopeNumbers[crop][soil][slope]
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:
 */
  if (unlikely(__pyx_v_self->hruMap == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 449, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_DelItem(__pyx_v_self->hruMap, __pyx_t_1) < 0)) __PYX_ERR(0, 449, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":450
 * #             hru == self.cropSoilSlopeNumbers[crop][soil][slope]
 *         del self.hruMap[hru]
 *         del self.cropSoilSlopeNumbers[crop][soil][slope]             # <<<<<<<<<<<<<<
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:
 *             del self.cropSoilSlopeNumbers[crop][soil]
 */
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 450, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_2, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(__Pyx_DelItemInt(__pyx_t_1, __pyx_v_slope, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":451
 *         del self.hruMap[hru]
 *         del self.cropSoilSlopeNumbers[crop][soil][slope]
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:             # <<<<<<<<<<<<<<
 *             del self.cropSoilSlopeNumbers[crop][soil]
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:
 */
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 451, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_2, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_11 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_12 = ((__pyx_t_11 == 0) != 0);
  if (__pyx_t_12) {

    /* "QSWATPlus/dataInC.pyx":452
 *         del self.cropSoilSlopeNumbers[crop][soil][slope]
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:
 *             del self.cropSoilSlopeNumbers[crop][soil]             # <<<<<<<<<<<<<<
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:
 *                 del self.cropSoilSlopeNumbers[crop]
 */
    if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 452, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 452, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(__Pyx_DelItemInt(__pyx_t_2, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 452, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":453
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:
 *             del self.cropSoilSlopeNumbers[crop][soil]
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:             # <<<<<<<<<<<<<<
 *                 del self.cropSoilSlopeNumbers[crop]
 * 
 */
    if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 453, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_11 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 453, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_12 = ((__pyx_t_11 == 0) != 0);
    if (__pyx_t_12) {

      /* "QSWATPlus/dataInC.pyx":454
 *             del self.cropSoilSlopeNumbers[crop][soil]
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:
 *                 del self.cropSoilSlopeNumbers[crop]             # <<<<<<<<<<<<<<
 * 
 *     cpdef void removeWaterHRUs(self, int waterLanduse):
 */
      if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 454, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_DelItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1) < 0)) __PYX_ERR(0, 454, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":453
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:
 *             del self.cropSoilSlopeNumbers[crop][soil]
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:             # <<<<<<<<<<<<<<
 *                 del self.cropSoilSlopeNumbers[crop]
 * 
 */
    }

    /* "QSWATPlus/dataInC.pyx":451
 *         del self.hruMap[hru]
 *         del self.cropSoilSlopeNumbers[crop][soil][slope]
 *         if len(self.cropSoilSlopeNumbers[crop][soil]) == 0:             # <<<<<<<<<<<<<<
 *             del self.cropSoilSlopeNumbers[crop][soil]
 *             if len(self.cropSoilSlopeNumbers[crop]) == 0:
 */
  }

  /* "QSWATPlus/dataInC.pyx":443
 *             self.redistribute(redistributeFactor)
 * 
 *     cpdef void removeHRU(self, int hru, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         '''Remove an HRU from the hruMap and the cropSoilSlopeNumbers map.'''
 * #         assert crop in self.cropSoilSlopeNumbers and \
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.removeHRU", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15removeHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_14removeHRU[] = "Remove an HRU from the hruMap and the cropSoilSlopeNumbers map.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15removeHRU(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_hru;
  int __pyx_v_crop;
  int __pyx_v_soil;
  int __pyx_v_slope;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeHRU (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_hru,&__pyx_n_s_crop,&__pyx_n_s_soil,&__pyx_n_s_slope,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_hru)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("removeHRU", 1, 4, 4, 1); __PYX_ERR(0, 443, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_soil)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("removeHRU", 1, 4, 4, 2); __PYX_ERR(0, 443, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("removeHRU", 1, 4, 4, 3); __PYX_ERR(0, 443, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "removeHRU") < 0)) __PYX_ERR(0, 443, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_hru = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_hru == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 443, __pyx_L3_error)
    __pyx_v_crop = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 443, __pyx_L3_error)
    __pyx_v_soil = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_soil == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 443, __pyx_L3_error)
    __pyx_v_slope = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_slope == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 443, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("removeHRU", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 443, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.removeHRU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14removeHRU(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), __pyx_v_hru, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14removeHRU(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_hru, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("removeHRU", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_removeHRU(__pyx_v_self, __pyx_v_hru, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.removeHRU", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":456
 *                 del self.cropSoilSlopeNumbers[crop]
 * 
 *     cpdef void removeWaterHRUs(self, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Remove HRUs with landuse water"""
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17removeWaterHRUs(PyObject *__pyx_v_self, PyObject *__pyx_arg_waterLanduse); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_removeWaterHRUs(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_waterLanduse, int __pyx_skip_dispatch) {
  int __pyx_v_crop;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  int __pyx_v_soil;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_slope;
  int __pyx_v_hru;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  double __pyx_t_15;
  __Pyx_RefNannySetupContext("removeWaterHRUs", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_removeWaterHRUs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17removeWaterHRUs)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_waterLanduse); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 456, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":467
 * 
 *         # note use of list as dictionaries changed within loop
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):             # <<<<<<<<<<<<<<
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 */
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 467, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_Items(__pyx_v_self->cropSoilSlopeNumbers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_List(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 467, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 467, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 467, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 467, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 467, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_4 = __pyx_t_7(__pyx_t_5); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_3 = __pyx_t_7(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_7(__pyx_t_5), 2) < 0) __PYX_ERR(0, 467, __pyx_L1_error)
      __pyx_t_7 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 467, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 467, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 467, __pyx_L1_error)
    __pyx_v_crop = __pyx_t_8;
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":468
 *         # note use of list as dictionaries changed within loop
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):
 *             if crop == waterLanduse:             # <<<<<<<<<<<<<<
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 *                     for slope, hru in list(slopeNumbers.items()):
 */
    __pyx_t_9 = ((__pyx_v_crop == __pyx_v_waterLanduse) != 0);
    if (__pyx_t_9) {

      /* "QSWATPlus/dataInC.pyx":469
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):             # <<<<<<<<<<<<<<
 *                     for slope, hru in list(slopeNumbers.items()):
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area
 */
      if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 469, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyDict_Items(__pyx_v_soilSlopeNumbers); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 469, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PySequence_List(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 469, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 469, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 469, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
        if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
          PyObject* sequence = __pyx_t_3;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 2)) {
            if (size > 2) __Pyx_RaiseTooManyValuesError(2);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 469, __pyx_L1_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
          } else {
            __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_5 = PyList_GET_ITEM(sequence, 1); 
          }
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          #else
          __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else {
          Py_ssize_t index = -1;
          __pyx_t_11 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_7 = Py_TYPE(__pyx_t_11)->tp_iternext;
          index = 0; __pyx_t_4 = __pyx_t_7(__pyx_t_11); if (unlikely(!__pyx_t_4)) goto __pyx_L10_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_4);
          index = 1; __pyx_t_5 = __pyx_t_7(__pyx_t_11); if (unlikely(!__pyx_t_5)) goto __pyx_L10_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_5);
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_7(__pyx_t_11), 2) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
          __pyx_t_7 = NULL;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L11_unpacking_done;
          __pyx_L10_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_7 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 469, __pyx_L1_error)
          __pyx_L11_unpacking_done:;
        }
        __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 469, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_5))||((__pyx_t_5) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_5)->tp_name), 0))) __PYX_ERR(0, 469, __pyx_L1_error)
        __pyx_v_soil = __pyx_t_8;
        __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "QSWATPlus/dataInC.pyx":470
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 *                     for slope, hru in list(slopeNumbers.items()):             # <<<<<<<<<<<<<<
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area
 *                         self.removeHRU(hru, crop, soil, slope)
 */
        if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
          __PYX_ERR(0, 470, __pyx_L1_error)
        }
        __pyx_t_3 = __Pyx_PyDict_Items(__pyx_v_slopeNumbers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 470, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __pyx_t_5; __Pyx_INCREF(__pyx_t_3); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        for (;;) {
          if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_5); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 470, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
          if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
            PyObject* sequence = __pyx_t_5;
            Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
            if (unlikely(size != 2)) {
              if (size > 2) __Pyx_RaiseTooManyValuesError(2);
              else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
              __PYX_ERR(0, 470, __pyx_L1_error)
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            if (likely(PyTuple_CheckExact(sequence))) {
              __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
              __pyx_t_11 = PyTuple_GET_ITEM(sequence, 1); 
            } else {
              __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
              __pyx_t_11 = PyList_GET_ITEM(sequence, 1); 
            }
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_11);
            #else
            __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 470, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_11 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 470, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_11);
            #endif
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          } else {
            Py_ssize_t index = -1;
            __pyx_t_13 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 470, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_13);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_7 = Py_TYPE(__pyx_t_13)->tp_iternext;
            index = 0; __pyx_t_4 = __pyx_t_7(__pyx_t_13); if (unlikely(!__pyx_t_4)) goto __pyx_L14_unpacking_failed;
            __Pyx_GOTREF(__pyx_t_4);
            index = 1; __pyx_t_11 = __pyx_t_7(__pyx_t_13); if (unlikely(!__pyx_t_11)) goto __pyx_L14_unpacking_failed;
            __Pyx_GOTREF(__pyx_t_11);
            if (__Pyx_IternextUnpackEndCheck(__pyx_t_7(__pyx_t_13), 2) < 0) __PYX_ERR(0, 470, __pyx_L1_error)
            __pyx_t_7 = NULL;
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            goto __pyx_L15_unpacking_done;
            __pyx_L14_unpacking_failed:;
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_7 = NULL;
            if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
            __PYX_ERR(0, 470, __pyx_L1_error)
            __pyx_L15_unpacking_done:;
          }
          __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 470, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_11); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 470, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_v_slope = __pyx_t_8;
          __pyx_v_hru = __pyx_t_14;

          /* "QSWATPlus/dataInC.pyx":471
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 *                     for slope, hru in list(slopeNumbers.items()):
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area             # <<<<<<<<<<<<<<
 *                         self.removeHRU(hru, crop, soil, slope)
 * 
 */
          __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->cropSoilSlopeArea); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          if (unlikely(__pyx_v_self->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 471, __pyx_L1_error)
          }
          __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_area); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = PyNumber_InPlaceSubtract(__pyx_t_5, __pyx_t_11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_15 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_15 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 471, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_self->cropSoilSlopeArea = __pyx_t_15;

          /* "QSWATPlus/dataInC.pyx":472
 *                     for slope, hru in list(slopeNumbers.items()):
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area
 *                         self.removeHRU(hru, crop, soil, slope)             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setCropAreas(self, bint isOriginal):
 */
          ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self->__pyx_vtab)->removeHRU(__pyx_v_self, __pyx_v_hru, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope, 0);

          /* "QSWATPlus/dataInC.pyx":470
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 *                     for slope, hru in list(slopeNumbers.items()):             # <<<<<<<<<<<<<<
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area
 *                         self.removeHRU(hru, crop, soil, slope)
 */
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "QSWATPlus/dataInC.pyx":469
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):             # <<<<<<<<<<<<<<
 *                     for slope, hru in list(slopeNumbers.items()):
 *                         self.cropSoilSlopeArea -= self.hruMap[hru].area
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":468
 *         # note use of list as dictionaries changed within loop
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):
 *             if crop == waterLanduse:             # <<<<<<<<<<<<<<
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 *                     for slope, hru in list(slopeNumbers.items()):
 */
    }

    /* "QSWATPlus/dataInC.pyx":467
 * 
 *         # note use of list as dictionaries changed within loop
 *         for crop, soilSlopeNumbers in list(self.cropSoilSlopeNumbers.items()):             # <<<<<<<<<<<<<<
 *             if crop == waterLanduse:
 *                 for soil, slopeNumbers in list(soilSlopeNumbers.items()):
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":456
 *                 del self.cropSoilSlopeNumbers[crop]
 * 
 *     cpdef void removeWaterHRUs(self, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Remove HRUs with landuse water"""
 *         cdef:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.removeWaterHRUs", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17removeWaterHRUs(PyObject *__pyx_v_self, PyObject *__pyx_arg_waterLanduse); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_16removeWaterHRUs[] = "Remove HRUs with landuse water";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17removeWaterHRUs(PyObject *__pyx_v_self, PyObject *__pyx_arg_waterLanduse) {
  int __pyx_v_waterLanduse;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeWaterHRUs (wrapper)", 0);
  assert(__pyx_arg_waterLanduse); {
    __pyx_v_waterLanduse = __Pyx_PyInt_As_int(__pyx_arg_waterLanduse); if (unlikely((__pyx_v_waterLanduse == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 456, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.removeWaterHRUs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_16removeWaterHRUs(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((int)__pyx_v_waterLanduse));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_16removeWaterHRUs(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_waterLanduse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("removeWaterHRUs", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_removeWaterHRUs(__pyx_v_self, __pyx_v_waterLanduse, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.removeWaterHRUs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":474
 *                         self.removeHRU(hru, crop, soil, slope)
 * 
 *     cpdef void setCropAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map crop -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_19setCropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setCropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_cmap = 0;
  int __pyx_v_crop;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  double __pyx_v_area;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  __Pyx_RefNannySetupContext("setCropAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setCropAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_19setCropAreas)) {
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 474, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 474, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":485
 *             CellData cellData
 * 
 *         cmap = self.originalCropAreas if isOriginal else self.cropAreas             # <<<<<<<<<<<<<<
 *         cmap.clear()
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 */
  if ((__pyx_v_isOriginal != 0)) {
    __Pyx_INCREF(__pyx_v_self->originalCropAreas);
    __pyx_t_1 = __pyx_v_self->originalCropAreas;
  } else {
    __Pyx_INCREF(__pyx_v_self->cropAreas);
    __pyx_t_1 = __pyx_v_self->cropAreas;
  }
  __pyx_v_cmap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":486
 * 
 *         cmap = self.originalCropAreas if isOriginal else self.cropAreas
 *         cmap.clear()             # <<<<<<<<<<<<<<
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 *             area = 0
 */
  if (unlikely(__pyx_v_cmap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "clear");
    __PYX_ERR(0, 486, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyDict_Clear(__pyx_v_cmap); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 486, __pyx_L1_error)

  /* "QSWATPlus/dataInC.pyx":487
 *         cmap = self.originalCropAreas if isOriginal else self.cropAreas
 *         cmap.clear()
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *             area = 0
 *             for slopeNumbers in soilSlopeNumbers.values():
 */
  __pyx_t_7 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 487, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->cropSoilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_10 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_8, &__pyx_t_7, &__pyx_t_2, &__pyx_t_4, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_10 == 0)) break;
    if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 487, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 487, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 487, __pyx_L1_error)
    __pyx_v_crop = __pyx_t_10;
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":488
 *         cmap.clear()
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 *             area = 0             # <<<<<<<<<<<<<<
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for hru in slopeNumbers.values():
 */
    __pyx_v_area = 0.0;

    /* "QSWATPlus/dataInC.pyx":489
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 *             area = 0
 *             for slopeNumbers in soilSlopeNumbers.values():             # <<<<<<<<<<<<<<
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]
 */
    __pyx_t_11 = 0;
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 489, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_12), (&__pyx_t_10)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_13 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_12, &__pyx_t_11, NULL, &__pyx_t_2, NULL, __pyx_t_10);
      if (unlikely(__pyx_t_13 == 0)) break;
      if (unlikely(__pyx_t_13 == -1)) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 489, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":490
 *             area = 0
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for hru in slopeNumbers.values():             # <<<<<<<<<<<<<<
 *                     cellData = self.hruMap[hru]
 *                     area += cellData.area
 */
      __pyx_t_14 = 0;
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
        __PYX_ERR(0, 490, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_15), (&__pyx_t_13)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 490, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_3;
      __pyx_t_3 = 0;
      while (1) {
        __pyx_t_16 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_15, &__pyx_t_14, NULL, &__pyx_t_3, NULL, __pyx_t_13);
        if (unlikely(__pyx_t_16 == 0)) break;
        if (unlikely(__pyx_t_16 == -1)) __PYX_ERR(0, 490, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_16 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_16 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 490, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_v_hru = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":491
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *                     area += cellData.area
 *             cmap[crop] = area
 */
        if (unlikely(__pyx_v_self->hruMap == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 491, __pyx_L1_error)
        }
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 491, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 491, __pyx_L1_error)
        __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "QSWATPlus/dataInC.pyx":492
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]
 *                     area += cellData.area             # <<<<<<<<<<<<<<
 *             cmap[crop] = area
 * 
 */
        __pyx_v_area = (__pyx_v_area + __pyx_v_cellData->area);
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":493
 *                     cellData = self.hruMap[hru]
 *                     area += cellData.area
 *             cmap[crop] = area             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setSoilAreas(self, bint isOriginal):
 */
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_area); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__pyx_v_cmap == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 493, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_cmap, __pyx_t_2, __pyx_t_4) < 0)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":474
 *                         self.removeHRU(hru, crop, soil, slope)
 * 
 *     cpdef void setCropAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map crop -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.setCropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cmap);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_19setCropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_18setCropAreas[] = "Make map crop -> area from hruMap and cropSoilSlopeNumbers.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_19setCropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCropAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 474, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setCropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18setCropAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_18setCropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setCropAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_setCropAreas(__pyx_v_self, __pyx_v_isOriginal, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setCropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":495
 *             cmap[crop] = area
 * 
 *     cpdef void setSoilAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map soil -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_21setSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_smap = 0;
  int __pyx_v_soil;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  double __pyx_v_area;
  PyObject *__pyx_v_soilSlopeNumbers = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  double __pyx_t_17;
  __Pyx_RefNannySetupContext("setSoilAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setSoilAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_21setSoilAreas)) {
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 495, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 495, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":505
 *             double area
 * 
 *         smap = self.originalSoilAreas if isOriginal else self.soilAreas             # <<<<<<<<<<<<<<
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 */
  if ((__pyx_v_isOriginal != 0)) {
    __Pyx_INCREF(__pyx_v_self->originalSoilAreas);
    __pyx_t_1 = __pyx_v_self->originalSoilAreas;
  } else {
    __Pyx_INCREF(__pyx_v_self->soilAreas);
    __pyx_t_1 = __pyx_v_self->soilAreas;
  }
  __pyx_v_smap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":506
 * 
 *         smap = self.originalSoilAreas if isOriginal else self.soilAreas
 *         smap.clear()             # <<<<<<<<<<<<<<
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 */
  if (unlikely(__pyx_v_smap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "clear");
    __PYX_ERR(0, 506, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyDict_Clear(__pyx_v_smap); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 506, __pyx_L1_error)

  /* "QSWATPlus/dataInC.pyx":507
 *         smap = self.originalSoilAreas if isOriginal else self.soilAreas
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():             # <<<<<<<<<<<<<<
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 for hru in slopeNumbers.values():
 */
  __pyx_t_7 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 507, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->cropSoilSlopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_10 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_8, &__pyx_t_7, NULL, &__pyx_t_2, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_10 == 0)) break;
    if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":508
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for soil, slopeNumbers in soilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]
 */
    __pyx_t_11 = 0;
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 508, __pyx_L1_error)
    }
    __pyx_t_4 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 0, __pyx_n_s_items, (&__pyx_t_12), (&__pyx_t_10)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_4;
    __pyx_t_4 = 0;
    while (1) {
      __pyx_t_13 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_12, &__pyx_t_11, &__pyx_t_4, &__pyx_t_3, NULL, __pyx_t_10);
      if (unlikely(__pyx_t_13 == 0)) break;
      if (unlikely(__pyx_t_13 == -1)) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 508, __pyx_L1_error)
      __pyx_v_soil = __pyx_t_13;
      __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "QSWATPlus/dataInC.pyx":509
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 for hru in slopeNumbers.values():             # <<<<<<<<<<<<<<
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(soil, 0)
 */
      __pyx_t_14 = 0;
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
        __PYX_ERR(0, 509, __pyx_L1_error)
      }
      __pyx_t_4 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_15), (&__pyx_t_13)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 509, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3);
      __pyx_t_3 = __pyx_t_4;
      __pyx_t_4 = 0;
      while (1) {
        __pyx_t_16 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_15, &__pyx_t_14, NULL, &__pyx_t_4, NULL, __pyx_t_13);
        if (unlikely(__pyx_t_16 == 0)) break;
        if (unlikely(__pyx_t_16 == -1)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_16 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_16 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_hru = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":510
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *                     area = smap.get(soil, 0)
 *                     smap[soil] = area + cellData.area
 */
        if (unlikely(__pyx_v_self->hruMap == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 510, __pyx_L1_error)
        }
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 510, __pyx_L1_error)
        __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "QSWATPlus/dataInC.pyx":511
 *                 for hru in slopeNumbers.values():
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(soil, 0)             # <<<<<<<<<<<<<<
 *                     smap[soil] = area + cellData.area
 * 
 */
        if (unlikely(__pyx_v_smap == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
          __PYX_ERR(0, 511, __pyx_L1_error)
        }
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 511, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyDict_GetItemDefault(__pyx_v_smap, __pyx_t_5, __pyx_int_0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 511, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_17 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_17 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 511, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_area = __pyx_t_17;

        /* "QSWATPlus/dataInC.pyx":512
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(soil, 0)
 *                     smap[soil] = area + cellData.area             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setSlopeAreas(self, bint isOriginal):
 */
        __pyx_t_4 = PyFloat_FromDouble((__pyx_v_area + __pyx_v_cellData->area)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 512, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (unlikely(__pyx_v_smap == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 512, __pyx_L1_error)
        }
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 512, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(PyDict_SetItem(__pyx_v_smap, __pyx_t_5, __pyx_t_4) < 0)) __PYX_ERR(0, 512, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":495
 *             cmap[crop] = area
 * 
 *     cpdef void setSoilAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map soil -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.setSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_smap);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_21setSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_20setSoilAreas[] = "Make map soil -> area from hruMap and cropSoilSlopeNumbers.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_21setSoilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setSoilAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 495, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20setSoilAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_20setSoilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setSoilAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_setSoilAreas(__pyx_v_self, __pyx_v_isOriginal, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setSoilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":514
 *                     smap[soil] = area + cellData.area
 * 
 *     cpdef void setSlopeAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map slope -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_23setSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_setSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_smap = 0;
  int __pyx_v_slope;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  double __pyx_v_area;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  double __pyx_t_18;
  __Pyx_RefNannySetupContext("setSlopeAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setSlopeAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_23setSlopeAreas)) {
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":525
 *             double area
 * 
 *         smap = self.originalSlopeAreas if isOriginal else self.slopeAreas             # <<<<<<<<<<<<<<
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 */
  if ((__pyx_v_isOriginal != 0)) {
    __Pyx_INCREF(__pyx_v_self->originalSlopeAreas);
    __pyx_t_1 = __pyx_v_self->originalSlopeAreas;
  } else {
    __Pyx_INCREF(__pyx_v_self->slopeAreas);
    __pyx_t_1 = __pyx_v_self->slopeAreas;
  }
  __pyx_v_smap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":526
 * 
 *         smap = self.originalSlopeAreas if isOriginal else self.slopeAreas
 *         smap.clear()             # <<<<<<<<<<<<<<
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for slopeNumbers in soilSlopeNumbers.values():
 */
  if (unlikely(__pyx_v_smap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "clear");
    __PYX_ERR(0, 526, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyDict_Clear(__pyx_v_smap); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 526, __pyx_L1_error)

  /* "QSWATPlus/dataInC.pyx":527
 *         smap = self.originalSlopeAreas if isOriginal else self.slopeAreas
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():             # <<<<<<<<<<<<<<
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for slope, hru in slopeNumbers.items():
 */
  __pyx_t_7 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 527, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->cropSoilSlopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_8), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_10 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_8, &__pyx_t_7, NULL, &__pyx_t_2, NULL, __pyx_t_9);
    if (unlikely(__pyx_t_10 == 0)) break;
    if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 527, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 527, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":528
 *         smap.clear()
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for slopeNumbers in soilSlopeNumbers.values():             # <<<<<<<<<<<<<<
 *                 for slope, hru in slopeNumbers.items():
 *                     cellData = self.hruMap[hru]
 */
    __pyx_t_11 = 0;
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 528, __pyx_L1_error)
    }
    __pyx_t_4 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 1, __pyx_n_s_values, (&__pyx_t_12), (&__pyx_t_10)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_4;
    __pyx_t_4 = 0;
    while (1) {
      __pyx_t_13 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_12, &__pyx_t_11, NULL, &__pyx_t_4, NULL, __pyx_t_10);
      if (unlikely(__pyx_t_13 == 0)) break;
      if (unlikely(__pyx_t_13 == -1)) __PYX_ERR(0, 528, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (!(likely(PyDict_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 528, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_4));
      __pyx_t_4 = 0;

      /* "QSWATPlus/dataInC.pyx":529
 *         for soilSlopeNumbers in self.cropSoilSlopeNumbers.values():
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for slope, hru in slopeNumbers.items():             # <<<<<<<<<<<<<<
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(slope, 0)
 */
      __pyx_t_14 = 0;
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 529, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_15), (&__pyx_t_13)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 529, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4);
      __pyx_t_4 = __pyx_t_3;
      __pyx_t_3 = 0;
      while (1) {
        __pyx_t_16 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_15, &__pyx_t_14, &__pyx_t_3, &__pyx_t_5, NULL, __pyx_t_13);
        if (unlikely(__pyx_t_16 == 0)) break;
        if (unlikely(__pyx_t_16 == -1)) __PYX_ERR(0, 529, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_16 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_16 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 529, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 529, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_slope = __pyx_t_16;
        __pyx_v_hru = __pyx_t_17;

        /* "QSWATPlus/dataInC.pyx":530
 *             for slopeNumbers in soilSlopeNumbers.values():
 *                 for slope, hru in slopeNumbers.items():
 *                     cellData = self.hruMap[hru]             # <<<<<<<<<<<<<<
 *                     area = smap.get(slope, 0)
 *                     smap[slope] = area + cellData.area
 */
        if (unlikely(__pyx_v_self->hruMap == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 530, __pyx_L1_error)
        }
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 530, __pyx_L1_error)
        __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "QSWATPlus/dataInC.pyx":531
 *                 for slope, hru in slopeNumbers.items():
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(slope, 0)             # <<<<<<<<<<<<<<
 *                     smap[slope] = area + cellData.area
 * 
 */
        if (unlikely(__pyx_v_smap == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
          __PYX_ERR(0, 531, __pyx_L1_error)
        }
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 531, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = __Pyx_PyDict_GetItemDefault(__pyx_v_smap, __pyx_t_3, __pyx_int_0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 531, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_18 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_18 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_area = __pyx_t_18;

        /* "QSWATPlus/dataInC.pyx":532
 *                     cellData = self.hruMap[hru]
 *                     area = smap.get(slope, 0)
 *                     smap[slope] = area + cellData.area             # <<<<<<<<<<<<<<
 * 
 *     cpdef int nextHruNumber(self):
 */
        __pyx_t_5 = PyFloat_FromDouble((__pyx_v_area + __pyx_v_cellData->area)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 532, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(__pyx_v_smap == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 532, __pyx_L1_error)
        }
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 532, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(PyDict_SetItem(__pyx_v_smap, __pyx_t_3, __pyx_t_5) < 0)) __PYX_ERR(0, 532, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":514
 *                     smap[soil] = area + cellData.area
 * 
 *     cpdef void setSlopeAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         '''Make map slope -> area from hruMap and cropSoilSlopeNumbers.'''
 *         cdef:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.setSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_smap);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_23setSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_22setSlopeAreas[] = "Make map slope -> area from hruMap and cropSoilSlopeNumbers.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_23setSlopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setSlopeAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 514, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_22setSlopeAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_22setSlopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setSlopeAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_setSlopeAreas(__pyx_v_self, __pyx_v_isOriginal, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.setSlopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":534
 *                     smap[slope] = area + cellData.area
 * 
 *     cpdef int nextHruNumber(self):             # <<<<<<<<<<<<<<
 *         """Return a new HRU number for use, incrementing last HRU number used."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_25nextHruNumber(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_7LSUData_nextHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("nextHruNumber", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nextHruNumber); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_25nextHruNumber)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 534, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":537
 *         """Return a new HRU number for use, incrementing last HRU number used."""
 * 
 *         self.lastHru += 1             # <<<<<<<<<<<<<<
 *         return self.lastHru
 * 
 */
  __pyx_v_self->lastHru = (__pyx_v_self->lastHru + 1);

  /* "QSWATPlus/dataInC.pyx":538
 * 
 *         self.lastHru += 1
 *         return self.lastHru             # <<<<<<<<<<<<<<
 * 
 *     cdef int getHruNumber(self, int crop, int soil, int slope):
 */
  __pyx_r = __pyx_v_self->lastHru;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":534
 *                     smap[slope] = area + cellData.area
 * 
 *     cpdef int nextHruNumber(self):             # <<<<<<<<<<<<<<
 *         """Return a new HRU number for use, incrementing last HRU number used."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.nextHruNumber", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_25nextHruNumber(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_24nextHruNumber[] = "Return a new HRU number for use, incrementing last HRU number used.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_25nextHruNumber(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nextHruNumber (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_24nextHruNumber(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_24nextHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("nextHruNumber", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_9QSWATPlus_7dataInC_7LSUData_nextHruNumber(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.nextHruNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":540
 *         return self.lastHru
 * 
 *     cdef int getHruNumber(self, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to last hru used for the landscape unit)
 */

static int __pyx_f_9QSWATPlus_7dataInC_7LSUData_getHruNumber(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope) {
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("getHruNumber", 0);

  /* "QSWATPlus/dataInC.pyx":550
 *             int hru
 * 
 *         soilSlopeNumbers = self.cropSoilSlopeNumbers.get(crop, None)             # <<<<<<<<<<<<<<
 *         if soilSlopeNumbers is None:
 *             # new crop
 */
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 550, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 550, __pyx_L1_error)
  __pyx_v_soilSlopeNumbers = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":551
 * 
 *         soilSlopeNumbers = self.cropSoilSlopeNumbers.get(crop, None)
 *         if soilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *             # new crop
 *             self.lastHru += 1
 */
  __pyx_t_3 = (__pyx_v_soilSlopeNumbers == ((PyObject*)Py_None));
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "QSWATPlus/dataInC.pyx":553
 *         if soilSlopeNumbers is None:
 *             # new crop
 *             self.lastHru += 1             # <<<<<<<<<<<<<<
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = self.lastHru
 */
    __pyx_v_self->lastHru = (__pyx_v_self->lastHru + 1);

    /* "QSWATPlus/dataInC.pyx":554
 *             # new crop
 *             self.lastHru += 1
 *             slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             slopeNumbers[slope] = self.lastHru
 *             soilSlopeNumbers = dict()
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 554, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":555
 *             self.lastHru += 1
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = self.lastHru             # <<<<<<<<<<<<<<
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":556
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = self.lastHru
 *             soilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             soilSlopeNumbers[soil] = slopeNumbers
 *             self.cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":557
 *             slopeNumbers[slope] = self.lastHru
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *             self.cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *         else:
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_2, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 557, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":558
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers
 *             self.cropSoilSlopeNumbers[crop] = soilSlopeNumbers             # <<<<<<<<<<<<<<
 *         else:
 *             slopeNumbers = soilSlopeNumbers.get(soil, None)
 */
    if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 558, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_2, __pyx_v_soilSlopeNumbers) < 0)) __PYX_ERR(0, 558, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":551
 * 
 *         soilSlopeNumbers = self.cropSoilSlopeNumbers.get(crop, None)
 *         if soilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *             # new crop
 *             self.lastHru += 1
 */
    goto __pyx_L3;
  }

  /* "QSWATPlus/dataInC.pyx":560
 *             self.cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *         else:
 *             slopeNumbers = soilSlopeNumbers.get(soil, None)             # <<<<<<<<<<<<<<
 *             if slopeNumbers is None:
 *                 # new soil for existing crop
 */
  /*else*/ {
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
      __PYX_ERR(0, 560, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_soilSlopeNumbers, __pyx_t_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 560, __pyx_L1_error)
    __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "QSWATPlus/dataInC.pyx":561
 *         else:
 *             slopeNumbers = soilSlopeNumbers.get(soil, None)
 *             if slopeNumbers is None:             # <<<<<<<<<<<<<<
 *                 # new soil for existing crop
 *                 self.lastHru += 1
 */
    __pyx_t_4 = (__pyx_v_slopeNumbers == ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_4 != 0);
    if (__pyx_t_3) {

      /* "QSWATPlus/dataInC.pyx":563
 *             if slopeNumbers is None:
 *                 # new soil for existing crop
 *                 self.lastHru += 1             # <<<<<<<<<<<<<<
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = self.lastHru
 */
      __pyx_v_self->lastHru = (__pyx_v_self->lastHru + 1);

      /* "QSWATPlus/dataInC.pyx":564
 *                 # new soil for existing crop
 *                 self.lastHru += 1
 *                 slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                 slopeNumbers[slope] = self.lastHru
 *                 soilSlopeNumbers[soil] = slopeNumbers
 */
      __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":565
 *                 self.lastHru += 1
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = self.lastHru             # <<<<<<<<<<<<<<
 *                 soilSlopeNumbers[soil] = slopeNumbers
 *             else:
 */
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 565, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 565, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_2, __pyx_t_1) < 0)) __PYX_ERR(0, 565, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":566
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = self.lastHru
 *                 soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *             else:
 *                 hru = slopeNumbers.get(slope, -1)
 */
      if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 566, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_1, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 566, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":561
 *         else:
 *             slopeNumbers = soilSlopeNumbers.get(soil, None)
 *             if slopeNumbers is None:             # <<<<<<<<<<<<<<
 *                 # new soil for existing crop
 *                 self.lastHru += 1
 */
      goto __pyx_L4;
    }

    /* "QSWATPlus/dataInC.pyx":568
 *                 soilSlopeNumbers[soil] = slopeNumbers
 *             else:
 *                 hru = slopeNumbers.get(slope, -1)             # <<<<<<<<<<<<<<
 *                 if hru < 0:
 *                     # new slope for existing crop and soil
 */
    /*else*/ {
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
        __PYX_ERR(0, 568, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_int_neg_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 568, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_hru = __pyx_t_5;

      /* "QSWATPlus/dataInC.pyx":569
 *             else:
 *                 hru = slopeNumbers.get(slope, -1)
 *                 if hru < 0:             # <<<<<<<<<<<<<<
 *                     # new slope for existing crop and soil
 *                     self.lastHru += 1
 */
      __pyx_t_3 = ((__pyx_v_hru < 0) != 0);
      if (__pyx_t_3) {

        /* "QSWATPlus/dataInC.pyx":571
 *                 if hru < 0:
 *                     # new slope for existing crop and soil
 *                     self.lastHru += 1             # <<<<<<<<<<<<<<
 *                     slopeNumbers[slope] = self.lastHru
 *                 else:
 */
        __pyx_v_self->lastHru = (__pyx_v_self->lastHru + 1);

        /* "QSWATPlus/dataInC.pyx":572
 *                     # new slope for existing crop and soil
 *                     self.lastHru += 1
 *                     slopeNumbers[slope] = self.lastHru             # <<<<<<<<<<<<<<
 *                 else:
 *                     return hru
 */
        __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 572, __pyx_L1_error)
        }
        __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 572, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "QSWATPlus/dataInC.pyx":569
 *             else:
 *                 hru = slopeNumbers.get(slope, -1)
 *                 if hru < 0:             # <<<<<<<<<<<<<<
 *                     # new slope for existing crop and soil
 *                     self.lastHru += 1
 */
        goto __pyx_L5;
      }

      /* "QSWATPlus/dataInC.pyx":574
 *                     slopeNumbers[slope] = self.lastHru
 *                 else:
 *                     return hru             # <<<<<<<<<<<<<<
 *         return self.lastHru
 * 
 */
      /*else*/ {
        __pyx_r = __pyx_v_hru;
        goto __pyx_L0;
      }
      __pyx_L5:;
    }
    __pyx_L4:;
  }
  __pyx_L3:;

  /* "QSWATPlus/dataInC.pyx":575
 *                 else:
 *                     return hru
 *         return self.lastHru             # <<<<<<<<<<<<<<
 * 
 *     cpdef LSUData copy(self):
 */
  __pyx_r = __pyx_v_self->lastHru;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":540
 *         return self.lastHru
 * 
 *     cdef int getHruNumber(self, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to last hru used for the landscape unit)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.getHruNumber", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":577
 *         return self.lastHru
 * 
 *     cpdef LSUData copy(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of self."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_27copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copy(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_result = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("copy", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_27copy)) {
        __Pyx_XDECREF(((PyObject *)__pyx_r));
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 577, __pyx_L1_error)
        __pyx_r = ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":581
 * 
 *         cdef:
 *             LSUData result = LSUData()             # <<<<<<<<<<<<<<
 * 
 *         result.cellCount = self.cellCount
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_LSUData)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":583
 *             LSUData result = LSUData()
 * 
 *         result.cellCount = self.cellCount             # <<<<<<<<<<<<<<
 *         result.area = self.area
 *         result.outletElevation = self.outletElevation
 */
  __pyx_t_5 = __pyx_v_self->cellCount;
  __pyx_v_result->cellCount = __pyx_t_5;

  /* "QSWATPlus/dataInC.pyx":584
 * 
 *         result.cellCount = self.cellCount
 *         result.area = self.area             # <<<<<<<<<<<<<<
 *         result.outletElevation = self.outletElevation
 *         result.sourceElevation = self.sourceElevation
 */
  __pyx_t_6 = __pyx_v_self->area;
  __pyx_v_result->area = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":585
 *         result.cellCount = self.cellCount
 *         result.area = self.area
 *         result.outletElevation = self.outletElevation             # <<<<<<<<<<<<<<
 *         result.sourceElevation = self.sourceElevation
 *         result.channelLength = self.channelLength
 */
  __pyx_t_6 = __pyx_v_self->outletElevation;
  __pyx_v_result->outletElevation = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":586
 *         result.area = self.area
 *         result.outletElevation = self.outletElevation
 *         result.sourceElevation = self.sourceElevation             # <<<<<<<<<<<<<<
 *         result.channelLength = self.channelLength
 *         result.channelOrder = self.channelOrder
 */
  __pyx_t_6 = __pyx_v_self->sourceElevation;
  __pyx_v_result->sourceElevation = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":587
 *         result.outletElevation = self.outletElevation
 *         result.sourceElevation = self.sourceElevation
 *         result.channelLength = self.channelLength             # <<<<<<<<<<<<<<
 *         result.channelOrder = self.channelOrder
 *         result.farElevation = self.farElevation
 */
  __pyx_t_6 = __pyx_v_self->channelLength;
  __pyx_v_result->channelLength = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":588
 *         result.sourceElevation = self.sourceElevation
 *         result.channelLength = self.channelLength
 *         result.channelOrder = self.channelOrder             # <<<<<<<<<<<<<<
 *         result.farElevation = self.farElevation
 *         result.farDistance = self.farDistance
 */
  __pyx_t_5 = __pyx_v_self->channelOrder;
  __pyx_v_result->channelOrder = __pyx_t_5;

  /* "QSWATPlus/dataInC.pyx":589
 *         result.channelLength = self.channelLength
 *         result.channelOrder = self.channelOrder
 *         result.farElevation = self.farElevation             # <<<<<<<<<<<<<<
 *         result.farDistance = self.farDistance
 *         result.farPointX = self.farPointX
 */
  __pyx_t_6 = __pyx_v_self->farElevation;
  __pyx_v_result->farElevation = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":590
 *         result.channelOrder = self.channelOrder
 *         result.farElevation = self.farElevation
 *         result.farDistance = self.farDistance             # <<<<<<<<<<<<<<
 *         result.farPointX = self.farPointX
 *         result.farPointY = self.farPointY
 */
  __pyx_t_6 = __pyx_v_self->farDistance;
  __pyx_v_result->farDistance = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":591
 *         result.farElevation = self.farElevation
 *         result.farDistance = self.farDistance
 *         result.farPointX = self.farPointX             # <<<<<<<<<<<<<<
 *         result.farPointY = self.farPointY
 *         result.midPointX = self.midPointX
 */
  __pyx_t_6 = __pyx_v_self->farPointX;
  __pyx_v_result->farPointX = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":592
 *         result.farDistance = self.farDistance
 *         result.farPointX = self.farPointX
 *         result.farPointY = self.farPointY             # <<<<<<<<<<<<<<
 *         result.midPointX = self.midPointX
 *         result.midPointY = self.midPointY
 */
  __pyx_t_6 = __pyx_v_self->farPointY;
  __pyx_v_result->farPointY = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":593
 *         result.farPointX = self.farPointX
 *         result.farPointY = self.farPointY
 *         result.midPointX = self.midPointX             # <<<<<<<<<<<<<<
 *         result.midPointY = self.midPointY
 *         result.totalElevation = self.totalElevation
 */
  __pyx_t_6 = __pyx_v_self->midPointX;
  __pyx_v_result->midPointX = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":594
 *         result.farPointY = self.farPointY
 *         result.midPointX = self.midPointX
 *         result.midPointY = self.midPointY             # <<<<<<<<<<<<<<
 *         result.totalElevation = self.totalElevation
 *         result.totalSlope = self.totalSlope
 */
  __pyx_t_6 = __pyx_v_self->midPointY;
  __pyx_v_result->midPointY = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":595
 *         result.midPointX = self.midPointX
 *         result.midPointY = self.midPointY
 *         result.totalElevation = self.totalElevation             # <<<<<<<<<<<<<<
 *         result.totalSlope = self.totalSlope
 *         result.totalLatitude = self.totalLatitude
 */
  __pyx_t_6 = __pyx_v_self->totalElevation;
  __pyx_v_result->totalElevation = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":596
 *         result.midPointY = self.midPointY
 *         result.totalElevation = self.totalElevation
 *         result.totalSlope = self.totalSlope             # <<<<<<<<<<<<<<
 *         result.totalLatitude = self.totalLatitude
 *         result.totalLongitude = self.totalLongitude
 */
  __pyx_t_6 = __pyx_v_self->totalSlope;
  __pyx_v_result->totalSlope = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":597
 *         result.totalElevation = self.totalElevation
 *         result.totalSlope = self.totalSlope
 *         result.totalLatitude = self.totalLatitude             # <<<<<<<<<<<<<<
 *         result.totalLongitude = self.totalLongitude
 *         result.cropSoilSlopeArea = self.cropSoilSlopeArea
 */
  __pyx_t_6 = __pyx_v_self->totalLatitude;
  __pyx_v_result->totalLatitude = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":598
 *         result.totalSlope = self.totalSlope
 *         result.totalLatitude = self.totalLatitude
 *         result.totalLongitude = self.totalLongitude             # <<<<<<<<<<<<<<
 *         result.cropSoilSlopeArea = self.cropSoilSlopeArea
 *         result.hruMap = self.copyHRUMap()
 */
  __pyx_t_6 = __pyx_v_self->totalLongitude;
  __pyx_v_result->totalLongitude = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":599
 *         result.totalLatitude = self.totalLatitude
 *         result.totalLongitude = self.totalLongitude
 *         result.cropSoilSlopeArea = self.cropSoilSlopeArea             # <<<<<<<<<<<<<<
 *         result.hruMap = self.copyHRUMap()
 *         result.cropSoilSlopeNumbers = self.copyCropSoilSlopeNumbers()
 */
  __pyx_t_6 = __pyx_v_self->cropSoilSlopeArea;
  __pyx_v_result->cropSoilSlopeArea = __pyx_t_6;

  /* "QSWATPlus/dataInC.pyx":600
 *         result.totalLongitude = self.totalLongitude
 *         result.cropSoilSlopeArea = self.cropSoilSlopeArea
 *         result.hruMap = self.copyHRUMap()             # <<<<<<<<<<<<<<
 *         result.cropSoilSlopeNumbers = self.copyCropSoilSlopeNumbers()
 *         result.cropAreas = LSUData.copyAreaMap(self.cropAreas)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self->__pyx_vtab)->copyHRUMap(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_result->hruMap);
  __Pyx_DECREF(__pyx_v_result->hruMap);
  __pyx_v_result->hruMap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":601
 *         result.cropSoilSlopeArea = self.cropSoilSlopeArea
 *         result.hruMap = self.copyHRUMap()
 *         result.cropSoilSlopeNumbers = self.copyCropSoilSlopeNumbers()             # <<<<<<<<<<<<<<
 *         result.cropAreas = LSUData.copyAreaMap(self.cropAreas)
 *         result.originalCropAreas = LSUData.copyAreaMap(self.originalCropAreas)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self->__pyx_vtab)->copyCropSoilSlopeNumbers(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_result->cropSoilSlopeNumbers);
  __Pyx_DECREF(__pyx_v_result->cropSoilSlopeNumbers);
  __pyx_v_result->cropSoilSlopeNumbers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":602
 *         result.hruMap = self.copyHRUMap()
 *         result.cropSoilSlopeNumbers = self.copyCropSoilSlopeNumbers()
 *         result.cropAreas = LSUData.copyAreaMap(self.cropAreas)             # <<<<<<<<<<<<<<
 *         result.originalCropAreas = LSUData.copyAreaMap(self.originalCropAreas)
 *         result.soilAreas = LSUData.copyAreaMap(self.soilAreas)
 */
  __pyx_t_1 = __pyx_v_self->cropAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_result->cropAreas);
  __Pyx_DECREF(__pyx_v_result->cropAreas);
  __pyx_v_result->cropAreas = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":603
 *         result.cropSoilSlopeNumbers = self.copyCropSoilSlopeNumbers()
 *         result.cropAreas = LSUData.copyAreaMap(self.cropAreas)
 *         result.originalCropAreas = LSUData.copyAreaMap(self.originalCropAreas)             # <<<<<<<<<<<<<<
 *         result.soilAreas = LSUData.copyAreaMap(self.soilAreas)
 *         result.originalSoilAreas = LSUData.copyAreaMap(self.originalSoilAreas)
 */
  __pyx_t_2 = __pyx_v_self->originalCropAreas;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_result->originalCropAreas);
  __Pyx_DECREF(__pyx_v_result->originalCropAreas);
  __pyx_v_result->originalCropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":604
 *         result.cropAreas = LSUData.copyAreaMap(self.cropAreas)
 *         result.originalCropAreas = LSUData.copyAreaMap(self.originalCropAreas)
 *         result.soilAreas = LSUData.copyAreaMap(self.soilAreas)             # <<<<<<<<<<<<<<
 *         result.originalSoilAreas = LSUData.copyAreaMap(self.originalSoilAreas)
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)
 */
  __pyx_t_1 = __pyx_v_self->soilAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_result->soilAreas);
  __Pyx_DECREF(__pyx_v_result->soilAreas);
  __pyx_v_result->soilAreas = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":605
 *         result.originalCropAreas = LSUData.copyAreaMap(self.originalCropAreas)
 *         result.soilAreas = LSUData.copyAreaMap(self.soilAreas)
 *         result.originalSoilAreas = LSUData.copyAreaMap(self.originalSoilAreas)             # <<<<<<<<<<<<<<
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)
 */
  __pyx_t_2 = __pyx_v_self->originalSoilAreas;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 605, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_result->originalSoilAreas);
  __Pyx_DECREF(__pyx_v_result->originalSoilAreas);
  __pyx_v_result->originalSoilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":606
 *         result.soilAreas = LSUData.copyAreaMap(self.soilAreas)
 *         result.originalSoilAreas = LSUData.copyAreaMap(self.originalSoilAreas)
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)             # <<<<<<<<<<<<<<
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)
 *         if self.waterBody is not None:
 */
  __pyx_t_1 = __pyx_v_self->slopeAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_result->slopeAreas);
  __Pyx_DECREF(__pyx_v_result->slopeAreas);
  __pyx_v_result->slopeAreas = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":607
 *         result.originalSoilAreas = LSUData.copyAreaMap(self.originalSoilAreas)
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)             # <<<<<<<<<<<<<<
 *         if self.waterBody is not None:
 *             result.waterBody = self.waterBody.copy()
 */
  __pyx_t_2 = __pyx_v_self->originalSlopeAreas;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_result->originalSlopeAreas);
  __Pyx_DECREF(__pyx_v_result->originalSlopeAreas);
  __pyx_v_result->originalSlopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":608
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)
 *         if self.waterBody is not None:             # <<<<<<<<<<<<<<
 *             result.waterBody = self.waterBody.copy()
 *         result.lastHru = self.lastHru
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->waterBody) != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "QSWATPlus/dataInC.pyx":609
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)
 *         if self.waterBody is not None:
 *             result.waterBody = self.waterBody.copy()             # <<<<<<<<<<<<<<
 *         result.lastHru = self.lastHru
 *         return result
 */
    __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self->waterBody->__pyx_vtab)->copy(__pyx_v_self->waterBody, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 609, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_result->waterBody);
    __Pyx_DECREF(((PyObject *)__pyx_v_result->waterBody));
    __pyx_v_result->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "QSWATPlus/dataInC.pyx":608
 *         result.slopeAreas = LSUData.copyAreaMap(self.slopeAreas)
 *         result.originalSlopeAreas = LSUData.copyAreaMap(self.originalSlopeAreas)
 *         if self.waterBody is not None:             # <<<<<<<<<<<<<<
 *             result.waterBody = self.waterBody.copy()
 *         result.lastHru = self.lastHru
 */
  }

  /* "QSWATPlus/dataInC.pyx":610
 *         if self.waterBody is not None:
 *             result.waterBody = self.waterBody.copy()
 *         result.lastHru = self.lastHru             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_5 = __pyx_v_self->lastHru;
  __pyx_v_result->lastHru = __pyx_t_5;

  /* "QSWATPlus/dataInC.pyx":611
 *             result.waterBody = self.waterBody.copy()
 *         result.lastHru = self.lastHru
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cdef dict copyHRUMap(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":577
 *         return self.lastHru
 * 
 *     cpdef LSUData copy(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of self."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_27copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_26copy[] = "Return deep copy of self.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_27copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_26copy(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_26copy(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("copy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_9QSWATPlus_7dataInC_7LSUData_copy(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":613
 *         return result
 * 
 *     cdef dict copyHRUMap(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of hruMap."""
 * 
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyHRUMap(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_v_result = 0;
  int __pyx_v_hru;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  __Pyx_RefNannySetupContext("copyHRUMap", 0);

  /* "QSWATPlus/dataInC.pyx":617
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             int hru
 *             CellData cellData
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":621
 *             CellData cellData
 * 
 *         for hru, cellData in self.hruMap.items():             # <<<<<<<<<<<<<<
 *             result[hru] = CellData(cellData.cellCount, cellData.area, cellData.totalElevation,
 *                                    cellData.totalSlope, cellData.totalLongitude, cellData.totalLatitude, cellData.crop)
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->hruMap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 621, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->hruMap, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 621, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 621, __pyx_L1_error)
    __pyx_v_hru = __pyx_t_7;
    __Pyx_XDECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "QSWATPlus/dataInC.pyx":622
 * 
 *         for hru, cellData in self.hruMap.items():
 *             result[hru] = CellData(cellData.cellCount, cellData.area, cellData.totalElevation,             # <<<<<<<<<<<<<<
 *                                    cellData.totalSlope, cellData.totalLongitude, cellData.totalLatitude, cellData.crop)
 *         return result
 */
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_cellData->cellCount); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_cellData->area); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = PyFloat_FromDouble(__pyx_v_cellData->totalElevation); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "QSWATPlus/dataInC.pyx":623
 *         for hru, cellData in self.hruMap.items():
 *             result[hru] = CellData(cellData.cellCount, cellData.area, cellData.totalElevation,
 *                                    cellData.totalSlope, cellData.totalLongitude, cellData.totalLatitude, cellData.crop)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
    __pyx_t_9 = PyFloat_FromDouble(__pyx_v_cellData->totalSlope); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyFloat_FromDouble(__pyx_v_cellData->totalLongitude); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = PyFloat_FromDouble(__pyx_v_cellData->totalLatitude); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_cellData->crop); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);

    /* "QSWATPlus/dataInC.pyx":622
 * 
 *         for hru, cellData in self.hruMap.items():
 *             result[hru] = CellData(cellData.cellCount, cellData.area, cellData.totalElevation,             # <<<<<<<<<<<<<<
 *                                    cellData.totalSlope, cellData.totalLongitude, cellData.totalLatitude, cellData.crop)
 *         return result
 */
    __pyx_t_13 = PyTuple_New(7); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_13, 2, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_13, 3, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_13, 4, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_11);
    PyTuple_SET_ITEM(__pyx_t_13, 5, __pyx_t_11);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_13, 6, __pyx_t_12);
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_8 = 0;
    __pyx_t_9 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_CellData), __pyx_t_13, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_13, __pyx_t_12) < 0)) __PYX_ERR(0, 622, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":624
 *             result[hru] = CellData(cellData.cellCount, cellData.area, cellData.totalElevation,
 *                                    cellData.totalSlope, cellData.totalLongitude, cellData.totalLatitude, cellData.crop)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cdef dict copyCropSoilSlopeNumbers(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":613
 *         return result
 * 
 *     cdef dict copyHRUMap(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of hruMap."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.copyHRUMap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":626
 *         return result
 * 
 *     cdef dict copyCropSoilSlopeNumbers(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of cropSoilSlopeNumbers."""
 * 
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyCropSoilSlopeNumbers(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_v_result = 0;
  int __pyx_v_crop;
  int __pyx_v_soil;
  int __pyx_v_slope;
  int __pyx_v_hru;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  PyObject *__pyx_v_slopeNumbers = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  __Pyx_RefNannySetupContext("copyCropSoilSlopeNumbers", 0);

  /* "QSWATPlus/dataInC.pyx":630
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             int crop
 *             int soil
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":638
 *             dict slopeNumbers
 * 
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *             result[crop] = dict()
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 638, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_self->cropSoilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 638, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_6))||((__pyx_t_6) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_6)->tp_name), 0))) __PYX_ERR(0, 638, __pyx_L1_error)
    __pyx_v_crop = __pyx_t_7;
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "QSWATPlus/dataInC.pyx":639
 * 
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 *             result[crop] = dict()             # <<<<<<<<<<<<<<
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 result[crop][soil] = dict()
 */
    __pyx_t_6 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_5, __pyx_t_6) < 0)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "QSWATPlus/dataInC.pyx":640
 *         for crop, soilSlopeNumbers in self.cropSoilSlopeNumbers.items():
 *             result[crop] = dict()
 *             for soil, slopeNumbers in soilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *                 result[crop][soil] = dict()
 *                 for slope, hru in slopeNumbers.items():
 */
    __pyx_t_8 = 0;
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 640, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_9), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_5;
    __pyx_t_5 = 0;
    while (1) {
      __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_6, __pyx_t_9, &__pyx_t_8, &__pyx_t_5, &__pyx_t_10, NULL, __pyx_t_7);
      if (unlikely(__pyx_t_11 == 0)) break;
      if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (!(likely(PyDict_CheckExact(__pyx_t_10))||((__pyx_t_10) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_10)->tp_name), 0))) __PYX_ERR(0, 640, __pyx_L1_error)
      __pyx_v_soil = __pyx_t_11;
      __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_10));
      __pyx_t_10 = 0;

      /* "QSWATPlus/dataInC.pyx":641
 *             result[crop] = dict()
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 result[crop][soil] = dict()             # <<<<<<<<<<<<<<
 *                 for slope, hru in slopeNumbers.items():
 *                     result[crop][soil][slope] = hru
 */
      __pyx_t_10 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 641, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 641, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_12 = __Pyx_PyDict_GetItem(__pyx_v_result, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 641, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(__Pyx_SetItemInt(__pyx_t_12, __pyx_v_soil, __pyx_t_10, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 641, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "QSWATPlus/dataInC.pyx":642
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 result[crop][soil] = dict()
 *                 for slope, hru in slopeNumbers.items():             # <<<<<<<<<<<<<<
 *                     result[crop][soil][slope] = hru
 *         return result
 */
      __pyx_t_13 = 0;
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 642, __pyx_L1_error)
      }
      __pyx_t_12 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_14), (&__pyx_t_11)); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 642, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_XDECREF(__pyx_t_10);
      __pyx_t_10 = __pyx_t_12;
      __pyx_t_12 = 0;
      while (1) {
        __pyx_t_15 = __Pyx_dict_iter_next(__pyx_t_10, __pyx_t_14, &__pyx_t_13, &__pyx_t_12, &__pyx_t_5, NULL, __pyx_t_11);
        if (unlikely(__pyx_t_15 == 0)) break;
        if (unlikely(__pyx_t_15 == -1)) __PYX_ERR(0, 642, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_12); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_16 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_16 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_slope = __pyx_t_15;
        __pyx_v_hru = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":643
 *                 result[crop][soil] = dict()
 *                 for slope, hru in slopeNumbers.items():
 *                     result[crop][soil][slope] = hru             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 643, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 643, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_17 = __Pyx_PyDict_GetItem(__pyx_v_result, __pyx_t_12); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 643, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_17, __pyx_v_soil, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 643, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(__Pyx_SetItemInt(__pyx_t_12, __pyx_v_slope, __pyx_t_5, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 643, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":644
 *                 for slope, hru in slopeNumbers.items():
 *                     result[crop][soil][slope] = hru
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":626
 *         return result
 * 
 *     cdef dict copyCropSoilSlopeNumbers(self):             # <<<<<<<<<<<<<<
 *         """Return deep copy of cropSoilSlopeNumbers."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.copyCropSoilSlopeNumbers", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":647
 * 
 *     @staticmethod
 *     cdef dict copyAreaMap(dict amap):             # <<<<<<<<<<<<<<
 *         """Return deep copy of int -> double amap."""
 * 
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap(PyObject *__pyx_v_amap) {
  PyObject *__pyx_v_result = 0;
  int __pyx_v_key;
  double __pyx_v_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  double __pyx_t_8;
  __Pyx_RefNannySetupContext("copyAreaMap", 0);

  /* "QSWATPlus/dataInC.pyx":651
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             int key
 *             double val
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":655
 *             double val
 * 
 *         for key, val in amap.items():             # <<<<<<<<<<<<<<
 *             result[key] = val
 *         return result
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_amap == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 655, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_amap, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_key = __pyx_t_7;
    __pyx_v_val = __pyx_t_8;

    /* "QSWATPlus/dataInC.pyx":656
 * 
 *         for key, val in amap.items():
 *             result[key] = val             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_key); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_5, __pyx_t_6) < 0)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":657
 *         for key, val in amap.items():
 *             result[key] = val
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cpdef void merge(self, LSUData lsuData):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":647
 * 
 *     @staticmethod
 *     cdef dict copyAreaMap(dict amap):             # <<<<<<<<<<<<<<
 *         """Return deep copy of int -> double amap."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.copyAreaMap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":659
 *         return result
 * 
 *     cpdef void merge(self, LSUData lsuData):             # <<<<<<<<<<<<<<
 *         """Merge lsuData into this data."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_29merge(PyObject *__pyx_v_self, PyObject *__pyx_v_lsuData); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_merge(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData, int __pyx_skip_dispatch) {
  int __pyx_v_crop;
  int __pyx_v_soil;
  int __pyx_v_slope;
  int __pyx_v_hru;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  PyObject *__pyx_v_slopeNumbers = 0;
  PyObject *__pyx_v_mySoilSlopeNumbers = NULL;
  PyObject *__pyx_v_mySlopeNumbers = NULL;
  PyObject *__pyx_v_myHru = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  __Pyx_RefNannySetupContext("merge", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_merge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_29merge)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_lsuData)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_lsuData));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":671
 *             dict slopeNumbers
 * 
 *         self.cellCount += lsuData.cellCount             # <<<<<<<<<<<<<<
 *         self.area += lsuData.area
 *         # merge is always down, i.e. LSUData is being merged downstream into self
 */
  __pyx_v_self->cellCount = (__pyx_v_self->cellCount + __pyx_v_lsuData->cellCount);

  /* "QSWATPlus/dataInC.pyx":672
 * 
 *         self.cellCount += lsuData.cellCount
 *         self.area += lsuData.area             # <<<<<<<<<<<<<<
 *         # merge is always down, i.e. LSUData is being merged downstream into self
 *         self.sourceElevation = lsuData.sourceElevation
 */
  __pyx_v_self->area = (__pyx_v_self->area + __pyx_v_lsuData->area);

  /* "QSWATPlus/dataInC.pyx":674
 *         self.area += lsuData.area
 *         # merge is always down, i.e. LSUData is being merged downstream into self
 *         self.sourceElevation = lsuData.sourceElevation             # <<<<<<<<<<<<<<
 *         if self.farDistance < lsuData.farDistance + self.channelLength:
 *             self.farElevation = lsuData.farElevation
 */
  __pyx_t_5 = __pyx_v_lsuData->sourceElevation;
  __pyx_v_self->sourceElevation = __pyx_t_5;

  /* "QSWATPlus/dataInC.pyx":675
 *         # merge is always down, i.e. LSUData is being merged downstream into self
 *         self.sourceElevation = lsuData.sourceElevation
 *         if self.farDistance < lsuData.farDistance + self.channelLength:             # <<<<<<<<<<<<<<
 *             self.farElevation = lsuData.farElevation
 *             self.farPointX = lsuData.farPointX
 */
  __pyx_t_6 = ((__pyx_v_self->farDistance < (__pyx_v_lsuData->farDistance + __pyx_v_self->channelLength)) != 0);
  if (__pyx_t_6) {

    /* "QSWATPlus/dataInC.pyx":676
 *         self.sourceElevation = lsuData.sourceElevation
 *         if self.farDistance < lsuData.farDistance + self.channelLength:
 *             self.farElevation = lsuData.farElevation             # <<<<<<<<<<<<<<
 *             self.farPointX = lsuData.farPointX
 *             self.farPointY = lsuData.farPointY
 */
    __pyx_t_5 = __pyx_v_lsuData->farElevation;
    __pyx_v_self->farElevation = __pyx_t_5;

    /* "QSWATPlus/dataInC.pyx":677
 *         if self.farDistance < lsuData.farDistance + self.channelLength:
 *             self.farElevation = lsuData.farElevation
 *             self.farPointX = lsuData.farPointX             # <<<<<<<<<<<<<<
 *             self.farPointY = lsuData.farPointY
 *             self.farDistance = lsuData.farDistance + self.channelLength
 */
    __pyx_t_5 = __pyx_v_lsuData->farPointX;
    __pyx_v_self->farPointX = __pyx_t_5;

    /* "QSWATPlus/dataInC.pyx":678
 *             self.farElevation = lsuData.farElevation
 *             self.farPointX = lsuData.farPointX
 *             self.farPointY = lsuData.farPointY             # <<<<<<<<<<<<<<
 *             self.farDistance = lsuData.farDistance + self.channelLength
 *         self.midPointX = (self.midPointX + lsuData.midPointX) / 2
 */
    __pyx_t_5 = __pyx_v_lsuData->farPointY;
    __pyx_v_self->farPointY = __pyx_t_5;

    /* "QSWATPlus/dataInC.pyx":679
 *             self.farPointX = lsuData.farPointX
 *             self.farPointY = lsuData.farPointY
 *             self.farDistance = lsuData.farDistance + self.channelLength             # <<<<<<<<<<<<<<
 *         self.midPointX = (self.midPointX + lsuData.midPointX) / 2
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2
 */
    __pyx_v_self->farDistance = (__pyx_v_lsuData->farDistance + __pyx_v_self->channelLength);

    /* "QSWATPlus/dataInC.pyx":675
 *         # merge is always down, i.e. LSUData is being merged downstream into self
 *         self.sourceElevation = lsuData.sourceElevation
 *         if self.farDistance < lsuData.farDistance + self.channelLength:             # <<<<<<<<<<<<<<
 *             self.farElevation = lsuData.farElevation
 *             self.farPointX = lsuData.farPointX
 */
  }

  /* "QSWATPlus/dataInC.pyx":680
 *             self.farPointY = lsuData.farPointY
 *             self.farDistance = lsuData.farDistance + self.channelLength
 *         self.midPointX = (self.midPointX + lsuData.midPointX) / 2             # <<<<<<<<<<<<<<
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2
 *         self.channelLength += lsuData.channelLength
 */
  __pyx_v_self->midPointX = ((__pyx_v_self->midPointX + __pyx_v_lsuData->midPointX) / 2.0);

  /* "QSWATPlus/dataInC.pyx":681
 *             self.farDistance = lsuData.farDistance + self.channelLength
 *         self.midPointX = (self.midPointX + lsuData.midPointX) / 2
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2             # <<<<<<<<<<<<<<
 *         self.channelLength += lsuData.channelLength
 *         if self.channelOrder < lsuData.channelOrder:
 */
  __pyx_v_self->midPointY = ((__pyx_v_self->midPointY + __pyx_v_lsuData->midPointY) / 2.0);

  /* "QSWATPlus/dataInC.pyx":682
 *         self.midPointX = (self.midPointX + lsuData.midPointX) / 2
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2
 *         self.channelLength += lsuData.channelLength             # <<<<<<<<<<<<<<
 *         if self.channelOrder < lsuData.channelOrder:
 *             self.channelOrder = lsuData.channelOrder
 */
  __pyx_v_self->channelLength = (__pyx_v_self->channelLength + __pyx_v_lsuData->channelLength);

  /* "QSWATPlus/dataInC.pyx":683
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2
 *         self.channelLength += lsuData.channelLength
 *         if self.channelOrder < lsuData.channelOrder:             # <<<<<<<<<<<<<<
 *             self.channelOrder = lsuData.channelOrder
 *         self.totalElevation += lsuData.totalElevation
 */
  __pyx_t_6 = ((__pyx_v_self->channelOrder < __pyx_v_lsuData->channelOrder) != 0);
  if (__pyx_t_6) {

    /* "QSWATPlus/dataInC.pyx":684
 *         self.channelLength += lsuData.channelLength
 *         if self.channelOrder < lsuData.channelOrder:
 *             self.channelOrder = lsuData.channelOrder             # <<<<<<<<<<<<<<
 *         self.totalElevation += lsuData.totalElevation
 *         self.totalSlope += lsuData.totalSlope
 */
    __pyx_t_7 = __pyx_v_lsuData->channelOrder;
    __pyx_v_self->channelOrder = __pyx_t_7;

    /* "QSWATPlus/dataInC.pyx":683
 *         self.midPointY = (self.midPointY + lsuData.midPointY) / 2
 *         self.channelLength += lsuData.channelLength
 *         if self.channelOrder < lsuData.channelOrder:             # <<<<<<<<<<<<<<
 *             self.channelOrder = lsuData.channelOrder
 *         self.totalElevation += lsuData.totalElevation
 */
  }

  /* "QSWATPlus/dataInC.pyx":685
 *         if self.channelOrder < lsuData.channelOrder:
 *             self.channelOrder = lsuData.channelOrder
 *         self.totalElevation += lsuData.totalElevation             # <<<<<<<<<<<<<<
 *         self.totalSlope += lsuData.totalSlope
 *         self.totalLatitude += lsuData.totalLatitude
 */
  __pyx_v_self->totalElevation = (__pyx_v_self->totalElevation + __pyx_v_lsuData->totalElevation);

  /* "QSWATPlus/dataInC.pyx":686
 *             self.channelOrder = lsuData.channelOrder
 *         self.totalElevation += lsuData.totalElevation
 *         self.totalSlope += lsuData.totalSlope             # <<<<<<<<<<<<<<
 *         self.totalLatitude += lsuData.totalLatitude
 *         self.totalLongitude += lsuData.totalLongitude
 */
  __pyx_v_self->totalSlope = (__pyx_v_self->totalSlope + __pyx_v_lsuData->totalSlope);

  /* "QSWATPlus/dataInC.pyx":687
 *         self.totalElevation += lsuData.totalElevation
 *         self.totalSlope += lsuData.totalSlope
 *         self.totalLatitude += lsuData.totalLatitude             # <<<<<<<<<<<<<<
 *         self.totalLongitude += lsuData.totalLongitude
 *         self.cropSoilSlopeArea += lsuData.cropSoilSlopeArea
 */
  __pyx_v_self->totalLatitude = (__pyx_v_self->totalLatitude + __pyx_v_lsuData->totalLatitude);

  /* "QSWATPlus/dataInC.pyx":688
 *         self.totalSlope += lsuData.totalSlope
 *         self.totalLatitude += lsuData.totalLatitude
 *         self.totalLongitude += lsuData.totalLongitude             # <<<<<<<<<<<<<<
 *         self.cropSoilSlopeArea += lsuData.cropSoilSlopeArea
 *         for crop, soilSlopeNumbers in lsuData.cropSoilSlopeNumbers.items():
 */
  __pyx_v_self->totalLongitude = (__pyx_v_self->totalLongitude + __pyx_v_lsuData->totalLongitude);

  /* "QSWATPlus/dataInC.pyx":689
 *         self.totalLatitude += lsuData.totalLatitude
 *         self.totalLongitude += lsuData.totalLongitude
 *         self.cropSoilSlopeArea += lsuData.cropSoilSlopeArea             # <<<<<<<<<<<<<<
 *         for crop, soilSlopeNumbers in lsuData.cropSoilSlopeNumbers.items():
 *             mySoilSlopeNumbers = self.cropSoilSlopeNumbers.setdefault(crop, dict())
 */
  __pyx_v_self->cropSoilSlopeArea = (__pyx_v_self->cropSoilSlopeArea + __pyx_v_lsuData->cropSoilSlopeArea);

  /* "QSWATPlus/dataInC.pyx":690
 *         self.totalLongitude += lsuData.totalLongitude
 *         self.cropSoilSlopeArea += lsuData.cropSoilSlopeArea
 *         for crop, soilSlopeNumbers in lsuData.cropSoilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *             mySoilSlopeNumbers = self.cropSoilSlopeNumbers.setdefault(crop, dict())
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 */
  __pyx_t_8 = 0;
  if (unlikely(__pyx_v_lsuData->cropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 690, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_lsuData->cropSoilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_9), (&__pyx_t_7)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_10 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_9, &__pyx_t_8, &__pyx_t_2, &__pyx_t_3, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_10 == 0)) break;
    if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 690, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 690, __pyx_L1_error)
    __pyx_v_crop = __pyx_t_10;
    __Pyx_XDECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":691
 *         self.cropSoilSlopeArea += lsuData.cropSoilSlopeArea
 *         for crop, soilSlopeNumbers in lsuData.cropSoilSlopeNumbers.items():
 *             mySoilSlopeNumbers = self.cropSoilSlopeNumbers.setdefault(crop, dict())             # <<<<<<<<<<<<<<
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 mySlopeNumbers = mySoilSlopeNumbers.setdefault(soil, dict())
 */
    if (unlikely(__pyx_v_self->cropSoilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "setdefault");
      __PYX_ERR(0, 691, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyDict_SetDefault(__pyx_v_self->cropSoilSlopeNumbers, __pyx_t_3, __pyx_t_2, -1L); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_mySoilSlopeNumbers, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":692
 *         for crop, soilSlopeNumbers in lsuData.cropSoilSlopeNumbers.items():
 *             mySoilSlopeNumbers = self.cropSoilSlopeNumbers.setdefault(crop, dict())
 *             for soil, slopeNumbers in soilSlopeNumbers.items():             # <<<<<<<<<<<<<<
 *                 mySlopeNumbers = mySoilSlopeNumbers.setdefault(soil, dict())
 *                 for slope, hru in slopeNumbers.items():
 */
    __pyx_t_11 = 0;
    if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 692, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_soilSlopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_12), (&__pyx_t_10)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_13 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_12, &__pyx_t_11, &__pyx_t_2, &__pyx_t_3, NULL, __pyx_t_10);
      if (unlikely(__pyx_t_13 == 0)) break;
      if (unlikely(__pyx_t_13 == -1)) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 692, __pyx_L1_error)
      __pyx_v_soil = __pyx_t_13;
      __Pyx_XDECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_3));
      __pyx_t_3 = 0;

      /* "QSWATPlus/dataInC.pyx":693
 *             mySoilSlopeNumbers = self.cropSoilSlopeNumbers.setdefault(crop, dict())
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 mySlopeNumbers = mySoilSlopeNumbers.setdefault(soil, dict())             # <<<<<<<<<<<<<<
 *                 for slope, hru in slopeNumbers.items():
 *                     myHru = mySlopeNumbers.get(slope, -1)
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_mySoilSlopeNumbers, __pyx_n_s_setdefault); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 693, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 693, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_15 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 693, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_16 = NULL;
      __pyx_t_13 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_16)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_16);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_13 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_t_14, __pyx_t_15};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[3] = {__pyx_t_16, __pyx_t_14, __pyx_t_15};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      } else
      #endif
      {
        __pyx_t_17 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 693, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_17);
        if (__pyx_t_16) {
          __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_16); __pyx_t_16 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_14);
        PyTuple_SET_ITEM(__pyx_t_17, 0+__pyx_t_13, __pyx_t_14);
        __Pyx_GIVEREF(__pyx_t_15);
        PyTuple_SET_ITEM(__pyx_t_17, 1+__pyx_t_13, __pyx_t_15);
        __pyx_t_14 = 0;
        __pyx_t_15 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_17, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_mySlopeNumbers, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "QSWATPlus/dataInC.pyx":694
 *             for soil, slopeNumbers in soilSlopeNumbers.items():
 *                 mySlopeNumbers = mySoilSlopeNumbers.setdefault(soil, dict())
 *                 for slope, hru in slopeNumbers.items():             # <<<<<<<<<<<<<<
 *                     myHru = mySlopeNumbers.get(slope, -1)
 *                     if myHru < 0:
 */
      __pyx_t_18 = 0;
      if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 694, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_slopeNumbers, 1, __pyx_n_s_items, (&__pyx_t_19), (&__pyx_t_13)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF(__pyx_t_3);
      __pyx_t_3 = __pyx_t_2;
      __pyx_t_2 = 0;
      while (1) {
        __pyx_t_20 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_19, &__pyx_t_18, &__pyx_t_2, &__pyx_t_17, NULL, __pyx_t_13);
        if (unlikely(__pyx_t_20 == 0)) break;
        if (unlikely(__pyx_t_20 == -1)) __PYX_ERR(0, 694, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_17);
        __pyx_t_20 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_20 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 694, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_21 = __Pyx_PyInt_As_int(__pyx_t_17); if (unlikely((__pyx_t_21 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 694, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __pyx_v_slope = __pyx_t_20;
        __pyx_v_hru = __pyx_t_21;

        /* "QSWATPlus/dataInC.pyx":695
 *                 mySlopeNumbers = mySoilSlopeNumbers.setdefault(soil, dict())
 *                 for slope, hru in slopeNumbers.items():
 *                     myHru = mySlopeNumbers.get(slope, -1)             # <<<<<<<<<<<<<<
 *                     if myHru < 0:
 *                         self.lastHru += 1
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_mySlopeNumbers, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 695, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 695, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_14 = NULL;
        __pyx_t_21 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
            __pyx_t_21 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_2)) {
          PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_t_15, __pyx_int_neg_1};
          __pyx_t_17 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_21, 2+__pyx_t_21); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 695, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
          PyObject *__pyx_temp[3] = {__pyx_t_14, __pyx_t_15, __pyx_int_neg_1};
          __pyx_t_17 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_21, 2+__pyx_t_21); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 695, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        } else
        #endif
        {
          __pyx_t_16 = PyTuple_New(2+__pyx_t_21); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 695, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          if (__pyx_t_14) {
            __Pyx_GIVEREF(__pyx_t_14); PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_t_14); __pyx_t_14 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_16, 0+__pyx_t_21, __pyx_t_15);
          __Pyx_INCREF(__pyx_int_neg_1);
          __Pyx_GIVEREF(__pyx_int_neg_1);
          PyTuple_SET_ITEM(__pyx_t_16, 1+__pyx_t_21, __pyx_int_neg_1);
          __pyx_t_15 = 0;
          __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_16, NULL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 695, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_myHru, __pyx_t_17);
        __pyx_t_17 = 0;

        /* "QSWATPlus/dataInC.pyx":696
 *                 for slope, hru in slopeNumbers.items():
 *                     myHru = mySlopeNumbers.get(slope, -1)
 *                     if myHru < 0:             # <<<<<<<<<<<<<<
 *                         self.lastHru += 1
 *                         mySlopeNumbers[slope] = self.lastHru
 */
        __pyx_t_17 = PyObject_RichCompare(__pyx_v_myHru, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_17); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 696, __pyx_L1_error)
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_17); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 696, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (__pyx_t_6) {

          /* "QSWATPlus/dataInC.pyx":697
 *                     myHru = mySlopeNumbers.get(slope, -1)
 *                     if myHru < 0:
 *                         self.lastHru += 1             # <<<<<<<<<<<<<<
 *                         mySlopeNumbers[slope] = self.lastHru
 *                         self.hruMap[self.lastHru] = lsuData.hruMap[hru]
 */
          __pyx_v_self->lastHru = (__pyx_v_self->lastHru + 1);

          /* "QSWATPlus/dataInC.pyx":698
 *                     if myHru < 0:
 *                         self.lastHru += 1
 *                         mySlopeNumbers[slope] = self.lastHru             # <<<<<<<<<<<<<<
 *                         self.hruMap[self.lastHru] = lsuData.hruMap[hru]
 *                     else:
 */
          __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          if (unlikely(__Pyx_SetItemInt(__pyx_v_mySlopeNumbers, __pyx_v_slope, __pyx_t_17, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 698, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;

          /* "QSWATPlus/dataInC.pyx":699
 *                         self.lastHru += 1
 *                         mySlopeNumbers[slope] = self.lastHru
 *                         self.hruMap[self.lastHru] = lsuData.hruMap[hru]             # <<<<<<<<<<<<<<
 *                     else:
 *                         self.hruMap[myHru].addCells(lsuData.hruMap[hru])
 */
          if (unlikely(__pyx_v_lsuData->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 699, __pyx_L1_error)
          }
          __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 699, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_lsuData->hruMap, __pyx_t_17); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 699, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (unlikely(__pyx_v_self->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 699, __pyx_L1_error)
          }
          __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 699, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          if (unlikely(PyDict_SetItem(__pyx_v_self->hruMap, __pyx_t_17, __pyx_t_2) < 0)) __PYX_ERR(0, 699, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "QSWATPlus/dataInC.pyx":696
 *                 for slope, hru in slopeNumbers.items():
 *                     myHru = mySlopeNumbers.get(slope, -1)
 *                     if myHru < 0:             # <<<<<<<<<<<<<<
 *                         self.lastHru += 1
 *                         mySlopeNumbers[slope] = self.lastHru
 */
          goto __pyx_L11;
        }

        /* "QSWATPlus/dataInC.pyx":701
 *                         self.hruMap[self.lastHru] = lsuData.hruMap[hru]
 *                     else:
 *                         self.hruMap[myHru].addCells(lsuData.hruMap[hru])             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.cropAreas, lsuData.cropAreas)
 *         LSUData.mergeMaps(self.originalCropAreas, lsuData.originalCropAreas)
 */
        /*else*/ {
          if (unlikely(__pyx_v_self->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 701, __pyx_L1_error)
          }
          __pyx_t_17 = __Pyx_PyDict_GetItem(__pyx_v_self->hruMap, __pyx_v_myHru); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 701, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_addCells); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 701, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (unlikely(__pyx_v_lsuData->hruMap == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 701, __pyx_L1_error)
          }
          __pyx_t_17 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 701, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_15 = __Pyx_PyDict_GetItem(__pyx_v_lsuData->hruMap, __pyx_t_17); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 701, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          __pyx_t_17 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_16))) {
            __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_16);
            if (likely(__pyx_t_17)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
              __Pyx_INCREF(__pyx_t_17);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_16, function);
            }
          }
          __pyx_t_2 = (__pyx_t_17) ? __Pyx_PyObject_Call2Args(__pyx_t_16, __pyx_t_17, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_16, __pyx_t_15);
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __pyx_L11:;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":702
 *                     else:
 *                         self.hruMap[myHru].addCells(lsuData.hruMap[hru])
 *         LSUData.mergeMaps(self.cropAreas, lsuData.cropAreas)             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.originalCropAreas, lsuData.originalCropAreas)
 *         LSUData.mergeMaps(self.soilAreas, lsuData.soilAreas)
 */
  __pyx_t_1 = __pyx_v_self->cropAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = __pyx_v_lsuData->cropAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_1), ((PyObject*)__pyx_t_4));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "QSWATPlus/dataInC.pyx":703
 *                         self.hruMap[myHru].addCells(lsuData.hruMap[hru])
 *         LSUData.mergeMaps(self.cropAreas, lsuData.cropAreas)
 *         LSUData.mergeMaps(self.originalCropAreas, lsuData.originalCropAreas)             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.soilAreas, lsuData.soilAreas)
 *         LSUData.mergeMaps(self.originalSoilAreas, lsuData.originalSoilAreas)
 */
  __pyx_t_4 = __pyx_v_self->originalCropAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_1 = __pyx_v_lsuData->originalCropAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_4), ((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":704
 *         LSUData.mergeMaps(self.cropAreas, lsuData.cropAreas)
 *         LSUData.mergeMaps(self.originalCropAreas, lsuData.originalCropAreas)
 *         LSUData.mergeMaps(self.soilAreas, lsuData.soilAreas)             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.originalSoilAreas, lsuData.originalSoilAreas)
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)
 */
  __pyx_t_1 = __pyx_v_self->soilAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = __pyx_v_lsuData->soilAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_1), ((PyObject*)__pyx_t_4));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "QSWATPlus/dataInC.pyx":705
 *         LSUData.mergeMaps(self.originalCropAreas, lsuData.originalCropAreas)
 *         LSUData.mergeMaps(self.soilAreas, lsuData.soilAreas)
 *         LSUData.mergeMaps(self.originalSoilAreas, lsuData.originalSoilAreas)             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)
 */
  __pyx_t_4 = __pyx_v_self->originalSoilAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_1 = __pyx_v_lsuData->originalSoilAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_4), ((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":706
 *         LSUData.mergeMaps(self.soilAreas, lsuData.soilAreas)
 *         LSUData.mergeMaps(self.originalSoilAreas, lsuData.originalSoilAreas)
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)             # <<<<<<<<<<<<<<
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)
 *         if self.waterBody is None:
 */
  __pyx_t_1 = __pyx_v_self->slopeAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = __pyx_v_lsuData->slopeAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_1), ((PyObject*)__pyx_t_4));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "QSWATPlus/dataInC.pyx":707
 *         LSUData.mergeMaps(self.originalSoilAreas, lsuData.originalSoilAreas)
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)             # <<<<<<<<<<<<<<
 *         if self.waterBody is None:
 *             self.waterBody = lsuData.waterBody
 */
  __pyx_t_4 = __pyx_v_self->originalSlopeAreas;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_1 = __pyx_v_lsuData->originalSlopeAreas;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(((PyObject*)__pyx_t_4), ((PyObject*)__pyx_t_1));
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":708
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)
 *         if self.waterBody is None:             # <<<<<<<<<<<<<<
 *             self.waterBody = lsuData.waterBody
 *         elif lsuData.waterBody is not None:
 */
  __pyx_t_6 = (((PyObject *)__pyx_v_self->waterBody) == Py_None);
  __pyx_t_22 = (__pyx_t_6 != 0);
  if (__pyx_t_22) {

    /* "QSWATPlus/dataInC.pyx":709
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)
 *         if self.waterBody is None:
 *             self.waterBody = lsuData.waterBody             # <<<<<<<<<<<<<<
 *         elif lsuData.waterBody is not None:
 *             self.waterBody.addWater(lsuData.waterBody, False)
 */
    __pyx_t_1 = ((PyObject *)__pyx_v_lsuData->waterBody);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->waterBody);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->waterBody));
    __pyx_v_self->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "QSWATPlus/dataInC.pyx":708
 *         LSUData.mergeMaps(self.slopeAreas, lsuData.slopeAreas)
 *         LSUData.mergeMaps(self.originalSlopeAreas, lsuData.originalSlopeAreas)
 *         if self.waterBody is None:             # <<<<<<<<<<<<<<
 *             self.waterBody = lsuData.waterBody
 *         elif lsuData.waterBody is not None:
 */
    goto __pyx_L12;
  }

  /* "QSWATPlus/dataInC.pyx":710
 *         if self.waterBody is None:
 *             self.waterBody = lsuData.waterBody
 *         elif lsuData.waterBody is not None:             # <<<<<<<<<<<<<<
 *             self.waterBody.addWater(lsuData.waterBody, False)
 * 
 */
  __pyx_t_22 = (((PyObject *)__pyx_v_lsuData->waterBody) != Py_None);
  __pyx_t_6 = (__pyx_t_22 != 0);
  if (__pyx_t_6) {

    /* "QSWATPlus/dataInC.pyx":711
 *             self.waterBody = lsuData.waterBody
 *         elif lsuData.waterBody is not None:
 *             self.waterBody.addWater(lsuData.waterBody, False)             # <<<<<<<<<<<<<<
 * 
 *     cpdef makeReservoir(self, double threshold):
 */
    __pyx_t_1 = ((PyObject *)__pyx_v_lsuData->waterBody);
    __Pyx_INCREF(__pyx_t_1);
    ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_self->waterBody->__pyx_vtab)->addWater(__pyx_v_self->waterBody, ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1), 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "QSWATPlus/dataInC.pyx":710
 *         if self.waterBody is None:
 *             self.waterBody = lsuData.waterBody
 *         elif lsuData.waterBody is not None:             # <<<<<<<<<<<<<<
 *             self.waterBody.addWater(lsuData.waterBody, False)
 * 
 */
  }
  __pyx_L12:;

  /* "QSWATPlus/dataInC.pyx":659
 *         return result
 * 
 *     cpdef void merge(self, LSUData lsuData):             # <<<<<<<<<<<<<<
 *         """Merge lsuData into this data."""
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.merge", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF(__pyx_v_mySoilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_mySlopeNumbers);
  __Pyx_XDECREF(__pyx_v_myHru);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_29merge(PyObject *__pyx_v_self, PyObject *__pyx_v_lsuData); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_28merge[] = "Merge lsuData into this data.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_29merge(PyObject *__pyx_v_self, PyObject *__pyx_v_lsuData) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("merge (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_lsuData), __pyx_ptype_9QSWATPlus_7dataInC_LSUData, 1, "lsuData", 0))) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_28merge(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_28merge(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("merge", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_7LSUData_merge(__pyx_v_self, __pyx_v_lsuData, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.merge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":713
 *             self.waterBody.addWater(lsuData.waterBody, False)
 * 
 *     cpdef makeReservoir(self, double threshold):             # <<<<<<<<<<<<<<
 *         """Set water body to a reservoir if water area exceeds threshold percent of LSU."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_31makeReservoir(PyObject *__pyx_v_self, PyObject *__pyx_arg_threshold); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_7LSUData_makeReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_threshold, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("makeReservoir", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_makeReservoir); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 713, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_31makeReservoir)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_threshold); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 713, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 713, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":716
 *         """Set water body to a reservoir if water area exceeds threshold percent of LSU."""
 * 
 *         if self.waterBody is not None and self.waterBody.area > threshold * self.area / 100:             # <<<<<<<<<<<<<<
 *             self.waterBody.waterRole = _RESERVOIR
 * 
 */
  __pyx_t_7 = (((PyObject *)__pyx_v_self->waterBody) != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {
  } else {
    __pyx_t_6 = __pyx_t_8;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_8 = ((__pyx_v_self->waterBody->area > ((__pyx_v_threshold * __pyx_v_self->area) / 100.0)) != 0);
  __pyx_t_6 = __pyx_t_8;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_6) {

    /* "QSWATPlus/dataInC.pyx":717
 * 
 *         if self.waterBody is not None and self.waterBody.area > threshold * self.area / 100:
 *             self.waterBody.waterRole = _RESERVOIR             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    __pyx_v_self->waterBody->waterRole = __pyx_e_9QSWATPlus_7dataInC__RESERVOIR;

    /* "QSWATPlus/dataInC.pyx":716
 *         """Set water body to a reservoir if water area exceeds threshold percent of LSU."""
 * 
 *         if self.waterBody is not None and self.waterBody.area > threshold * self.area / 100:             # <<<<<<<<<<<<<<
 *             self.waterBody.waterRole = _RESERVOIR
 * 
 */
  }

  /* "QSWATPlus/dataInC.pyx":713
 *             self.waterBody.addWater(lsuData.waterBody, False)
 * 
 *     cpdef makeReservoir(self, double threshold):             # <<<<<<<<<<<<<<
 *         """Set water body to a reservoir if water area exceeds threshold percent of LSU."""
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.makeReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_31makeReservoir(PyObject *__pyx_v_self, PyObject *__pyx_arg_threshold); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_7LSUData_30makeReservoir[] = "Set water body to a reservoir if water area exceeds threshold percent of LSU.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_31makeReservoir(PyObject *__pyx_v_self, PyObject *__pyx_arg_threshold) {
  double __pyx_v_threshold;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("makeReservoir (wrapper)", 0);
  assert(__pyx_arg_threshold); {
    __pyx_v_threshold = __pyx_PyFloat_AsDouble(__pyx_arg_threshold); if (unlikely((__pyx_v_threshold == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.makeReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_30makeReservoir(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((double)__pyx_v_threshold));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_30makeReservoir(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, double __pyx_v_threshold) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("makeReservoir", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_7LSUData_makeReservoir(__pyx_v_self, __pyx_v_threshold, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.makeReservoir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":720
 * 
 *     @staticmethod
 *     cdef void mergeMaps(dict map1, dict map2):             # <<<<<<<<<<<<<<
 *         """Add data from map2 to map1.  Two maps assumed to have int domain type and double range type."""
 * 
 */

static void __pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps(PyObject *__pyx_v_map1, PyObject *__pyx_v_map2) {
  int __pyx_v_key;
  double __pyx_v_val;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  double __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  __Pyx_RefNannySetupContext("mergeMaps", 0);

  /* "QSWATPlus/dataInC.pyx":727
 *             double val
 * 
 *         for key, val in map2.items():             # <<<<<<<<<<<<<<
 *             if key not in map1:
 *                 map1[key] = val
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_map2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 727, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_map2, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 727, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 727, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 727, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_key = __pyx_t_7;
    __pyx_v_val = __pyx_t_8;

    /* "QSWATPlus/dataInC.pyx":728
 * 
 *         for key, val in map2.items():
 *             if key not in map1:             # <<<<<<<<<<<<<<
 *                 map1[key] = val
 *             else:
 */
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_key); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 728, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__pyx_v_map1 == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 728, __pyx_L1_error)
    }
    __pyx_t_9 = (__Pyx_PyDict_ContainsTF(__pyx_t_6, __pyx_v_map1, Py_NE)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 728, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = (__pyx_t_9 != 0);
    if (__pyx_t_10) {

      /* "QSWATPlus/dataInC.pyx":729
 *         for key, val in map2.items():
 *             if key not in map1:
 *                 map1[key] = val             # <<<<<<<<<<<<<<
 *             else:
 *                 map1[key] += val
 */
      __pyx_t_6 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 729, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(__pyx_v_map1 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 729, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_key); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 729, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(PyDict_SetItem(__pyx_v_map1, __pyx_t_5, __pyx_t_6) < 0)) __PYX_ERR(0, 729, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "QSWATPlus/dataInC.pyx":728
 * 
 *         for key, val in map2.items():
 *             if key not in map1:             # <<<<<<<<<<<<<<
 *                 map1[key] = val
 *             else:
 */
      goto __pyx_L5;
    }

    /* "QSWATPlus/dataInC.pyx":731
 *                 map1[key] = val
 *             else:
 *                 map1[key] += val             # <<<<<<<<<<<<<<
 * 
 * cdef class BasinData:
 */
    /*else*/ {
      if (unlikely(__pyx_v_map1 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 731, __pyx_L1_error)
      }
      __Pyx_INCREF(__pyx_v_map1);
      __pyx_t_11 = __pyx_v_map1;
      __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_key); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(__pyx_t_11 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 731, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_t_11, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_12 = PyFloat_FromDouble(__pyx_v_val); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = PyNumber_InPlaceAdd(__pyx_t_5, __pyx_t_12); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(__pyx_t_11 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 731, __pyx_L1_error)
      }
      if (unlikely(PyDict_SetItem(__pyx_t_11, __pyx_t_6, __pyx_t_13) < 0)) __PYX_ERR(0, 731, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __pyx_L5:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":720
 * 
 *     @staticmethod
 *     cdef void mergeMaps(dict map1, dict map2):             # <<<<<<<<<<<<<<
 *         """Add data from map2 to map1.  Two maps assumed to have int domain type and double range type."""
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.LSUData.mergeMaps", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "QSWATPlus/dataInC.pyx":232
 * 
 *     cdef:
 *         public int cellCount             # <<<<<<<<<<<<<<
 *         public double area
 *         public double outletElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cellCount.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cellCount_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 232, __pyx_L1_error)
  __pyx_v_self->cellCount = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cellCount.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":233
 *     cdef:
 *         public int cellCount
 *         public double area             # <<<<<<<<<<<<<<
 *         public double outletElevation
 *         public double sourceElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 233, __pyx_L1_error)
  __pyx_v_self->area = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.area.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":234
 *         public int cellCount
 *         public double area
 *         public double outletElevation             # <<<<<<<<<<<<<<
 *         public double sourceElevation
 *         public double channelLength
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->outletElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.outletElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15outletElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 234, __pyx_L1_error)
  __pyx_v_self->outletElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.outletElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":235
 *         public double area
 *         public double outletElevation
 *         public double sourceElevation             # <<<<<<<<<<<<<<
 *         public double channelLength
 *         public int channelOrder
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sourceElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.sourceElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 235, __pyx_L1_error)
  __pyx_v_self->sourceElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.sourceElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":236
 *         public double outletElevation
 *         public double sourceElevation
 *         public double channelLength             # <<<<<<<<<<<<<<
 *         public int channelOrder
 *         public double farElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->channelLength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.channelLength.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13channelLength_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 236, __pyx_L1_error)
  __pyx_v_self->channelLength = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.channelLength.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":237
 *         public double sourceElevation
 *         public double channelLength
 *         public int channelOrder             # <<<<<<<<<<<<<<
 *         public double farElevation
 *         public double farDistance
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->channelOrder); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.channelOrder.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12channelOrder_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 237, __pyx_L1_error)
  __pyx_v_self->channelOrder = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.channelOrder.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":238
 *         public double channelLength
 *         public int channelOrder
 *         public double farElevation             # <<<<<<<<<<<<<<
 *         public double farDistance
 *         public double farPointX
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_12farElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 238, __pyx_L1_error)
  __pyx_v_self->farElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":239
 *         public int channelOrder
 *         public double farElevation
 *         public double farDistance             # <<<<<<<<<<<<<<
 *         public double farPointX
 *         public double farPointY
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farDistance); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farDistance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_11farDistance_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L1_error)
  __pyx_v_self->farDistance = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farDistance.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":240
 *         public double farElevation
 *         public double farDistance
 *         public double farPointX             # <<<<<<<<<<<<<<
 *         public double farPointY
 *         public double midPointX
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farPointX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farPointX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L1_error)
  __pyx_v_self->farPointX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farPointX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":241
 *         public double farDistance
 *         public double farPointX
 *         public double farPointY             # <<<<<<<<<<<<<<
 *         public double midPointX
 *         public double midPointY
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farPointY); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farPointY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9farPointY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 241, __pyx_L1_error)
  __pyx_v_self->farPointY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.farPointY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":242
 *         public double farPointX
 *         public double farPointY
 *         public double midPointX             # <<<<<<<<<<<<<<
 *         public double midPointY
 *         public double totalElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->midPointX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.midPointX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 242, __pyx_L1_error)
  __pyx_v_self->midPointX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.midPointX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":243
 *         public double farPointY
 *         public double midPointX
 *         public double midPointY             # <<<<<<<<<<<<<<
 *         public double totalElevation
 *         public double totalSlope
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->midPointY); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.midPointY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9midPointY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L1_error)
  __pyx_v_self->midPointY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.midPointY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":244
 *         public double midPointX
 *         public double midPointY
 *         public double totalElevation             # <<<<<<<<<<<<<<
 *         public double totalSlope
 *         public double totalLatitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 244, __pyx_L1_error)
  __pyx_v_self->totalElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":245
 *         public double midPointY
 *         public double totalElevation
 *         public double totalSlope             # <<<<<<<<<<<<<<
 *         public double totalLatitude
 *         public double totalLongitude
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalSlope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalSlope.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10totalSlope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 245, __pyx_L1_error)
  __pyx_v_self->totalSlope = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalSlope.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":246
 *         public double totalElevation
 *         public double totalSlope
 *         public double totalLatitude             # <<<<<<<<<<<<<<
 *         public double totalLongitude
 *         public double cropSoilSlopeArea
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalLatitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 246, __pyx_L1_error)
  __pyx_v_self->totalLatitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalLatitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":247
 *         public double totalSlope
 *         public double totalLatitude
 *         public double totalLongitude             # <<<<<<<<<<<<<<
 *         public double cropSoilSlopeArea
 *         public dict hruMap
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalLongitude.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 247, __pyx_L1_error)
  __pyx_v_self->totalLongitude = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.totalLongitude.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":248
 *         public double totalLatitude
 *         public double totalLongitude
 *         public double cropSoilSlopeArea             # <<<<<<<<<<<<<<
 *         public dict hruMap
 *         public dict cropSoilSlopeNumbers
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->cropSoilSlopeArea); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 248, __pyx_L1_error)
  __pyx_v_self->cropSoilSlopeArea = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeArea.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":249
 *         public double totalLongitude
 *         public double cropSoilSlopeArea
 *         public dict hruMap             # <<<<<<<<<<<<<<
 *         public dict cropSoilSlopeNumbers
 *         public dict cropAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->hruMap);
  __pyx_r = __pyx_v_self->hruMap;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 249, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->hruMap);
  __Pyx_DECREF(__pyx_v_self->hruMap);
  __pyx_v_self->hruMap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.hruMap.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_6hruMap_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->hruMap);
  __Pyx_DECREF(__pyx_v_self->hruMap);
  __pyx_v_self->hruMap = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":250
 *         public double cropSoilSlopeArea
 *         public dict hruMap
 *         public dict cropSoilSlopeNumbers             # <<<<<<<<<<<<<<
 *         public dict cropAreas
 *         public dict originalCropAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->cropSoilSlopeNumbers);
  __pyx_r = __pyx_v_self->cropSoilSlopeNumbers;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 250, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->cropSoilSlopeNumbers);
  __Pyx_DECREF(__pyx_v_self->cropSoilSlopeNumbers);
  __pyx_v_self->cropSoilSlopeNumbers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropSoilSlopeNumbers.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->cropSoilSlopeNumbers);
  __Pyx_DECREF(__pyx_v_self->cropSoilSlopeNumbers);
  __pyx_v_self->cropSoilSlopeNumbers = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":251
 *         public dict hruMap
 *         public dict cropSoilSlopeNumbers
 *         public dict cropAreas             # <<<<<<<<<<<<<<
 *         public dict originalCropAreas
 *         public dict soilAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->cropAreas);
  __pyx_r = __pyx_v_self->cropAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 251, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->cropAreas);
  __Pyx_DECREF(__pyx_v_self->cropAreas);
  __pyx_v_self->cropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.cropAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9cropAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->cropAreas);
  __Pyx_DECREF(__pyx_v_self->cropAreas);
  __pyx_v_self->cropAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":252
 *         public dict cropSoilSlopeNumbers
 *         public dict cropAreas
 *         public dict originalCropAreas             # <<<<<<<<<<<<<<
 *         public dict soilAreas
 *         public dict originalSoilAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->originalCropAreas);
  __pyx_r = __pyx_v_self->originalCropAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 252, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalCropAreas);
  __Pyx_DECREF(__pyx_v_self->originalCropAreas);
  __pyx_v_self->originalCropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.originalCropAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->originalCropAreas);
  __Pyx_DECREF(__pyx_v_self->originalCropAreas);
  __pyx_v_self->originalCropAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":253
 *         public dict cropAreas
 *         public dict originalCropAreas
 *         public dict soilAreas             # <<<<<<<<<<<<<<
 *         public dict originalSoilAreas
 *         public dict slopeAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->soilAreas);
  __pyx_r = __pyx_v_self->soilAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 253, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->soilAreas);
  __Pyx_DECREF(__pyx_v_self->soilAreas);
  __pyx_v_self->soilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.soilAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9soilAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->soilAreas);
  __Pyx_DECREF(__pyx_v_self->soilAreas);
  __pyx_v_self->soilAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":254
 *         public dict originalCropAreas
 *         public dict soilAreas
 *         public dict originalSoilAreas             # <<<<<<<<<<<<<<
 *         public dict slopeAreas
 *         public dict originalSlopeAreas
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->originalSoilAreas);
  __pyx_r = __pyx_v_self->originalSoilAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 254, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalSoilAreas);
  __Pyx_DECREF(__pyx_v_self->originalSoilAreas);
  __pyx_v_self->originalSoilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.originalSoilAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->originalSoilAreas);
  __Pyx_DECREF(__pyx_v_self->originalSoilAreas);
  __pyx_v_self->originalSoilAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":255
 *         public dict soilAreas
 *         public dict originalSoilAreas
 *         public dict slopeAreas             # <<<<<<<<<<<<<<
 *         public dict originalSlopeAreas
 *         public WaterBody waterBody
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->slopeAreas);
  __pyx_r = __pyx_v_self->slopeAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 255, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->slopeAreas);
  __Pyx_DECREF(__pyx_v_self->slopeAreas);
  __pyx_v_self->slopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.slopeAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->slopeAreas);
  __Pyx_DECREF(__pyx_v_self->slopeAreas);
  __pyx_v_self->slopeAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":256
 *         public dict originalSoilAreas
 *         public dict slopeAreas
 *         public dict originalSlopeAreas             # <<<<<<<<<<<<<<
 *         public WaterBody waterBody
 *         public int lastHru
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->originalSlopeAreas);
  __pyx_r = __pyx_v_self->originalSlopeAreas;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 256, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->originalSlopeAreas);
  __Pyx_DECREF(__pyx_v_self->originalSlopeAreas);
  __pyx_v_self->originalSlopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.originalSlopeAreas.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->originalSlopeAreas);
  __Pyx_DECREF(__pyx_v_self->originalSlopeAreas);
  __pyx_v_self->originalSlopeAreas = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":257
 *         public dict slopeAreas
 *         public dict originalSlopeAreas
 *         public WaterBody waterBody             # <<<<<<<<<<<<<<
 *         public int lastHru
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->waterBody));
  __pyx_r = ((PyObject *)__pyx_v_self->waterBody);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_9QSWATPlus_7dataInC_WaterBody))))) __PYX_ERR(0, 257, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->waterBody);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->waterBody));
  __pyx_v_self->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.waterBody.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_9waterBody_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->waterBody);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->waterBody));
  __pyx_v_self->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":258
 *         public dict originalSlopeAreas
 *         public WaterBody waterBody
 *         public int lastHru             # <<<<<<<<<<<<<<
 * 
 *     """Data held about landscape unit.
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.lastHru.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_7LSUData_7lastHru_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 258, __pyx_L1_error)
  __pyx_v_self->lastHru = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.lastHru.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_32__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_32__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.area, self.cellCount, self.channelLength, self.channelOrder, self.cropAreas, self.cropSoilSlopeArea, self.cropSoilSlopeNumbers, self.farDistance, self.farElevation, self.farPointX, self.farPointY, self.hruMap, self.lastHru, self.midPointX, self.midPointY, self.originalCropAreas, self.originalSlopeAreas, self.originalSoilAreas, self.outletElevation, self.slopeAreas, self.soilAreas, self.sourceElevation, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope, self.waterBody)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->cellCount); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->channelLength); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->channelOrder); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->cropSoilSlopeArea); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->farDistance); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_self->farElevation); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_self->farPointX); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyFloat_FromDouble(__pyx_v_self->farPointY); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_self->lastHru); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = PyFloat_FromDouble(__pyx_v_self->midPointX); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_12 = PyFloat_FromDouble(__pyx_v_self->midPointY); if (unlikely(!__pyx_t_12)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = PyFloat_FromDouble(__pyx_v_self->outletElevation); if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_14 = PyFloat_FromDouble(__pyx_v_self->sourceElevation); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = PyFloat_FromDouble(__pyx_v_self->totalElevation); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_16 = PyFloat_FromDouble(__pyx_v_self->totalLatitude); if (unlikely(!__pyx_t_16)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_17 = PyFloat_FromDouble(__pyx_v_self->totalLongitude); if (unlikely(!__pyx_t_17)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_17);
  __pyx_t_18 = PyFloat_FromDouble(__pyx_v_self->totalSlope); if (unlikely(!__pyx_t_18)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_18);
  __pyx_t_19 = PyTuple_New(27); if (unlikely(!__pyx_t_19)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_19);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_19, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_19, 3, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->cropAreas);
  __Pyx_GIVEREF(__pyx_v_self->cropAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 4, __pyx_v_self->cropAreas);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_19, 5, __pyx_t_5);
  __Pyx_INCREF(__pyx_v_self->cropSoilSlopeNumbers);
  __Pyx_GIVEREF(__pyx_v_self->cropSoilSlopeNumbers);
  PyTuple_SET_ITEM(__pyx_t_19, 6, __pyx_v_self->cropSoilSlopeNumbers);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_19, 7, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_19, 8, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_19, 9, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_19, 10, __pyx_t_9);
  __Pyx_INCREF(__pyx_v_self->hruMap);
  __Pyx_GIVEREF(__pyx_v_self->hruMap);
  PyTuple_SET_ITEM(__pyx_t_19, 11, __pyx_v_self->hruMap);
  __Pyx_GIVEREF(__pyx_t_10);
  PyTuple_SET_ITEM(__pyx_t_19, 12, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_19, 13, __pyx_t_11);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_19, 14, __pyx_t_12);
  __Pyx_INCREF(__pyx_v_self->originalCropAreas);
  __Pyx_GIVEREF(__pyx_v_self->originalCropAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 15, __pyx_v_self->originalCropAreas);
  __Pyx_INCREF(__pyx_v_self->originalSlopeAreas);
  __Pyx_GIVEREF(__pyx_v_self->originalSlopeAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 16, __pyx_v_self->originalSlopeAreas);
  __Pyx_INCREF(__pyx_v_self->originalSoilAreas);
  __Pyx_GIVEREF(__pyx_v_self->originalSoilAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 17, __pyx_v_self->originalSoilAreas);
  __Pyx_GIVEREF(__pyx_t_13);
  PyTuple_SET_ITEM(__pyx_t_19, 18, __pyx_t_13);
  __Pyx_INCREF(__pyx_v_self->slopeAreas);
  __Pyx_GIVEREF(__pyx_v_self->slopeAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 19, __pyx_v_self->slopeAreas);
  __Pyx_INCREF(__pyx_v_self->soilAreas);
  __Pyx_GIVEREF(__pyx_v_self->soilAreas);
  PyTuple_SET_ITEM(__pyx_t_19, 20, __pyx_v_self->soilAreas);
  __Pyx_GIVEREF(__pyx_t_14);
  PyTuple_SET_ITEM(__pyx_t_19, 21, __pyx_t_14);
  __Pyx_GIVEREF(__pyx_t_15);
  PyTuple_SET_ITEM(__pyx_t_19, 22, __pyx_t_15);
  __Pyx_GIVEREF(__pyx_t_16);
  PyTuple_SET_ITEM(__pyx_t_19, 23, __pyx_t_16);
  __Pyx_GIVEREF(__pyx_t_17);
  PyTuple_SET_ITEM(__pyx_t_19, 24, __pyx_t_17);
  __Pyx_GIVEREF(__pyx_t_18);
  PyTuple_SET_ITEM(__pyx_t_19, 25, __pyx_t_18);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->waterBody));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->waterBody));
  PyTuple_SET_ITEM(__pyx_t_19, 26, ((PyObject *)__pyx_v_self->waterBody));
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_12 = 0;
  __pyx_t_13 = 0;
  __pyx_t_14 = 0;
  __pyx_t_15 = 0;
  __pyx_t_16 = 0;
  __pyx_t_17 = 0;
  __pyx_t_18 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_19);
  __pyx_t_19 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.area, self.cellCount, self.channelLength, self.channelOrder, self.cropAreas, self.cropSoilSlopeArea, self.cropSoilSlopeNumbers, self.farDistance, self.farElevation, self.farPointX, self.farPointY, self.hruMap, self.lastHru, self.midPointX, self.midPointY, self.originalCropAreas, self.originalSlopeAreas, self.originalSoilAreas, self.outletElevation, self.slopeAreas, self.soilAreas, self.sourceElevation, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope, self.waterBody)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_19 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_19)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_19);
  __pyx_v__dict = __pyx_t_19;
  __pyx_t_19 = 0;

  /* "(tree fragment)":7
 *     state = (self.area, self.cellCount, self.channelLength, self.channelOrder, self.cropAreas, self.cropSoilSlopeArea, self.cropSoilSlopeNumbers, self.farDistance, self.farElevation, self.farPointX, self.farPointY, self.hruMap, self.lastHru, self.midPointX, self.midPointY, self.originalCropAreas, self.originalSlopeAreas, self.originalSoilAreas, self.outletElevation, self.slopeAreas, self.soilAreas, self.sourceElevation, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope, self.waterBody)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_20 = (__pyx_v__dict != Py_None);
  __pyx_t_21 = (__pyx_t_20 != 0);
  if (__pyx_t_21) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_19 = PyTuple_New(1); if (unlikely(!__pyx_t_19)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_v__dict);
    __pyx_t_18 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_19); if (unlikely(!__pyx_t_18)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_18));
    __pyx_t_18 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.cropAreas is not None or self.cropSoilSlopeNumbers is not None or self.hruMap is not None or self.originalCropAreas is not None or self.originalSlopeAreas is not None or self.originalSoilAreas is not None or self.slopeAreas is not None or self.soilAreas is not None or self.waterBody is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.area, self.cellCount, self.channelLength, self.channelOrder, self.cropAreas, self.cropSoilSlopeArea, self.cropSoilSlopeNumbers, self.farDistance, self.farElevation, self.farPointX, self.farPointY, self.hruMap, self.lastHru, self.midPointX, self.midPointY, self.originalCropAreas, self.originalSlopeAreas, self.originalSoilAreas, self.outletElevation, self.slopeAreas, self.soilAreas, self.sourceElevation, self.totalElevation, self.totalLatitude, self.totalLongitude, self.totalSlope, self.waterBody)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.cropAreas is not None or self.cropSoilSlopeNumbers is not None or self.hruMap is not None or self.originalCropAreas is not None or self.originalSlopeAreas is not None or self.originalSoilAreas is not None or self.slopeAreas is not None or self.soilAreas is not None or self.waterBody is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, None), state
 */
  /*else*/ {
    __pyx_t_20 = (__pyx_v_self->cropAreas != ((PyObject*)Py_None));
    __pyx_t_22 = (__pyx_t_20 != 0);
    if (!__pyx_t_22) {
    } else {
      __pyx_t_21 = __pyx_t_22;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_22 = (__pyx_v_self->cropSoilSlopeNumbers != ((PyObject*)Py_None));
    __pyx_t_20 = (__pyx_t_22 != 0);
    if (!__pyx_t_20) {
    } else {
      __pyx_t_21 = __pyx_t_20;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_20 = (__pyx_v_self->hruMap != ((PyObject*)Py_None));
    __pyx_t_22 = (__pyx_t_20 != 0);
    if (!__pyx_t_22) {
    } else {
      __pyx_t_21 = __pyx_t_22;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_22 = (__pyx_v_self->originalCropAreas != ((PyObject*)Py_None));
    __pyx_t_20 = (__pyx_t_22 != 0);
    if (!__pyx_t_20) {
    } else {
      __pyx_t_21 = __pyx_t_20;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_20 = (__pyx_v_self->originalSlopeAreas != ((PyObject*)Py_None));
    __pyx_t_22 = (__pyx_t_20 != 0);
    if (!__pyx_t_22) {
    } else {
      __pyx_t_21 = __pyx_t_22;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_22 = (__pyx_v_self->originalSoilAreas != ((PyObject*)Py_None));
    __pyx_t_20 = (__pyx_t_22 != 0);
    if (!__pyx_t_20) {
    } else {
      __pyx_t_21 = __pyx_t_20;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_20 = (__pyx_v_self->slopeAreas != ((PyObject*)Py_None));
    __pyx_t_22 = (__pyx_t_20 != 0);
    if (!__pyx_t_22) {
    } else {
      __pyx_t_21 = __pyx_t_22;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_22 = (__pyx_v_self->soilAreas != ((PyObject*)Py_None));
    __pyx_t_20 = (__pyx_t_22 != 0);
    if (!__pyx_t_20) {
    } else {
      __pyx_t_21 = __pyx_t_20;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_20 = (((PyObject *)__pyx_v_self->waterBody) != Py_None);
    __pyx_t_22 = (__pyx_t_20 != 0);
    __pyx_t_21 = __pyx_t_22;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_21;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cropAreas is not None or self.cropSoilSlopeNumbers is not None or self.hruMap is not None or self.originalCropAreas is not None or self.originalSlopeAreas is not None or self.originalSoilAreas is not None or self.slopeAreas is not None or self.soilAreas is not None or self.waterBody is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, None), state
 *     else:
 */
  __pyx_t_21 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_21) {

    /* "(tree fragment)":13
 *         use_setstate = self.cropAreas is not None or self.cropSoilSlopeNumbers is not None or self.hruMap is not None or self.originalCropAreas is not None or self.originalSlopeAreas is not None or self.originalSoilAreas is not None or self.slopeAreas is not None or self.soilAreas is not None or self.waterBody is not None
 *     if use_setstate:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_pyx_unpickle_LSUData); if (unlikely(!__pyx_t_18)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_19 = PyTuple_New(3); if (unlikely(!__pyx_t_19)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_19, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_133009318);
    __Pyx_GIVEREF(__pyx_int_133009318);
    PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_int_133009318);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_19, 2, Py_None);
    __pyx_t_17 = PyTuple_New(3); if (unlikely(!__pyx_t_17)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    __Pyx_GIVEREF(__pyx_t_18);
    PyTuple_SET_ITEM(__pyx_t_17, 0, __pyx_t_18);
    __Pyx_GIVEREF(__pyx_t_19);
    PyTuple_SET_ITEM(__pyx_t_17, 1, __pyx_t_19);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_17, 2, __pyx_v_state);
    __pyx_t_18 = 0;
    __pyx_t_19 = 0;
    __pyx_r = __pyx_t_17;
    __pyx_t_17 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.cropAreas is not None or self.cropSoilSlopeNumbers is not None or self.hruMap is not None or self.originalCropAreas is not None or self.originalSlopeAreas is not None or self.originalSoilAreas is not None or self.slopeAreas is not None or self.soilAreas is not None or self.waterBody is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, None), state
 *     else:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_LSUData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_pyx_unpickle_LSUData); if (unlikely(!__pyx_t_17)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_17);
    __pyx_t_19 = PyTuple_New(3); if (unlikely(!__pyx_t_19)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_19, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_133009318);
    __Pyx_GIVEREF(__pyx_int_133009318);
    PyTuple_SET_ITEM(__pyx_t_19, 1, __pyx_int_133009318);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_19, 2, __pyx_v_state);
    __pyx_t_18 = PyTuple_New(2); if (unlikely(!__pyx_t_18)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_GIVEREF(__pyx_t_17);
    PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_17);
    __Pyx_GIVEREF(__pyx_t_19);
    PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_19);
    __pyx_t_17 = 0;
    __pyx_t_19 = 0;
    __pyx_r = __pyx_t_18;
    __pyx_t_18 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_LSUData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7LSUData_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_7LSUData_34__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_7LSUData_34__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_LSUData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LSUData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_LSUData, (type(self), 0x7ed8fa6, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_LSUData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LSUData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":745
 *         public int waterId
 * 
 *     def __init__(self, waterLanduse, farDistance, waterId):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## Map channel -> landscape category -> LSUData
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData___init__[] = "Initialise class variables.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_9BasinData___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_waterLanduse = 0;
  PyObject *__pyx_v_farDistance = 0;
  PyObject *__pyx_v_waterId = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_waterLanduse,&__pyx_n_s_farDistance,&__pyx_n_s_waterId,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterLanduse)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_farDistance)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 745, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterId)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 745, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 745, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_waterLanduse = values[0];
    __pyx_v_farDistance = values[1];
    __pyx_v_waterId = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 745, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), __pyx_v_waterLanduse, __pyx_v_farDistance, __pyx_v_waterId);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_waterLanduse, PyObject *__pyx_v_farDistance, PyObject *__pyx_v_waterId) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":748
 *         """Initialise class variables."""
 *         ## Map channel -> landscape category -> LSUData
 *         self.lsus = dict()             # <<<<<<<<<<<<<<
 *         ## results of doing merges
 *         self.mergedLsus = None
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lsus);
  __Pyx_DECREF(__pyx_v_self->lsus);
  __pyx_v_self->lsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":750
 *         self.lsus = dict()
 *         ## results of doing merges
 *         self.mergedLsus = None             # <<<<<<<<<<<<<<
 *         ## Elevation in metres of lowest point in the subbasin
 *         self.minElevation = 8849 # everest plus 1
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->mergedLsus);
  __Pyx_DECREF(__pyx_v_self->mergedLsus);
  __pyx_v_self->mergedLsus = ((PyObject*)Py_None);

  /* "QSWATPlus/dataInC.pyx":752
 *         self.mergedLsus = None
 *         ## Elevation in metres of lowest point in the subbasin
 *         self.minElevation = 8849 # everest plus 1             # <<<<<<<<<<<<<<
 *         ## Elevation in metres of highest point in the subbasin
 *         self.maxElevation =  -419 # dead sea min minus 1
 */
  __pyx_v_self->minElevation = 8849.0;

  /* "QSWATPlus/dataInC.pyx":754
 *         self.minElevation = 8849 # everest plus 1
 *         ## Elevation in metres of highest point in the subbasin
 *         self.maxElevation =  -419 # dead sea min minus 1             # <<<<<<<<<<<<<<
 *         ## longest flow length to subbasin outlet
 *         # initialised for existing non-grid watershed to maximum channel flow length
 */
  __pyx_v_self->maxElevation = -419.0;

  /* "QSWATPlus/dataInC.pyx":758
 *         # initialised for existing non-grid watershed to maximum channel flow length
 *         # otherwise to -1 so later values passed by addCell will update it
 *         self.farDistance = farDistance             # <<<<<<<<<<<<<<
 *         ## landuse (crop) value for WATR
 *         self.waterLanduse = waterLanduse
 */
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_farDistance); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 758, __pyx_L1_error)
  __pyx_v_self->farDistance = __pyx_t_2;

  /* "QSWATPlus/dataInC.pyx":760
 *         self.farDistance = farDistance
 *         ## landuse (crop) value for WATR
 *         self.waterLanduse = waterLanduse             # <<<<<<<<<<<<<<
 *         ## waterId used with grid models to indicate cells that are part of lakes but need to be recorded in gis_subbasins
 *         self.waterId = waterId
 */
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_waterLanduse); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L1_error)
  __pyx_v_self->waterLanduse = __pyx_t_3;

  /* "QSWATPlus/dataInC.pyx":762
 *         self.waterLanduse = waterLanduse
 *         ## waterId used with grid models to indicate cells that are part of lakes but need to be recorded in gis_subbasins
 *         self.waterId = waterId             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict getLsus(self):
 */
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_waterId); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L1_error)
  __pyx_v_self->waterId = __pyx_t_3;

  /* "QSWATPlus/dataInC.pyx":745
 *         public int waterId
 * 
 *     def __init__(self, waterLanduse, farDistance, waterId):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## Map channel -> landscape category -> LSUData
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":764
 *         self.waterId = waterId
 * 
 *     cpdef dict getLsus(self):             # <<<<<<<<<<<<<<
 *         """Return mergedLsus if it exists, else lsus."""
 *         return self.lsus if self.mergedLsus is None else self.mergedLsus
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_3getLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_getLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("getLsus", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getLsus); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 764, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_3getLsus)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 764, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 764, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":766
 *     cpdef dict getLsus(self):
 *         """Return mergedLsus if it exists, else lsus."""
 *         return self.lsus if self.mergedLsus is None else self.mergedLsus             # <<<<<<<<<<<<<<
 * 
 *     cpdef void addCell(self, int channel, int landscape, int crop, int soil, int slope, double area,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = (__pyx_v_self->mergedLsus == ((PyObject*)Py_None));
  if ((__pyx_t_5 != 0)) {
    __Pyx_INCREF(__pyx_v_self->lsus);
    __pyx_t_1 = __pyx_v_self->lsus;
  } else {
    __Pyx_INCREF(__pyx_v_self->mergedLsus);
    __pyx_t_1 = __pyx_v_self->mergedLsus;
  }
  __pyx_r = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":764
 *         self.waterId = waterId
 * 
 *     cpdef dict getLsus(self):             # <<<<<<<<<<<<<<
 *         """Return mergedLsus if it exists, else lsus."""
 *         return self.lsus if self.mergedLsus is None else self.mergedLsus
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.getLsus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_3getLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_2getLsus[] = "Return mergedLsus if it exists, else lsus.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_3getLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLsus (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_2getLsus(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_2getLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getLsus", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_9BasinData_getLsus(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.getLsus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":768
 *         return self.lsus if self.mergedLsus is None else self.mergedLsus
 * 
 *     cpdef void addCell(self, int channel, int landscape, int crop, int soil, int slope, double area,             # <<<<<<<<<<<<<<
 *                       double elevation, double slopeValue, double distSt, double distCh, double x, double y, object _gv):
 *         """Add data for 1 cell in watershed grid."""
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_5addCell(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_addCell(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slopeValue, double __pyx_v_distSt, double __pyx_v_distCh, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v__gv, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_reachData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v_cellData = 0;
  int __pyx_v_hru;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_t_17;
  PyObject *__pyx_t_18 = NULL;
  int __pyx_t_19;
  int __pyx_t_20;
  double __pyx_t_21;
  double __pyx_t_22;
  double __pyx_t_23;
  __Pyx_RefNannySetupContext("addCell", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_addCell); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_5addCell)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = PyFloat_FromDouble(__pyx_v_area); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_9 = PyFloat_FromDouble(__pyx_v_elevation); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = PyFloat_FromDouble(__pyx_v_slopeValue); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = PyFloat_FromDouble(__pyx_v_distSt); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_12 = PyFloat_FromDouble(__pyx_v_distCh); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_13 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_14 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 768, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_15 = __pyx_t_1; __pyx_t_16 = NULL;
        __pyx_t_17 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_17 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_15)) {
          PyObject *__pyx_temp[14] = {__pyx_t_16, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_t_13, __pyx_t_14, __pyx_v__gv};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_15, __pyx_temp+1-__pyx_t_17, 13+__pyx_t_17); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_15)) {
          PyObject *__pyx_temp[14] = {__pyx_t_16, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_t_13, __pyx_t_14, __pyx_v__gv};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_15, __pyx_temp+1-__pyx_t_17, 13+__pyx_t_17); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        } else
        #endif
        {
          __pyx_t_18 = PyTuple_New(13+__pyx_t_17); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 768, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_18);
          if (__pyx_t_16) {
            __Pyx_GIVEREF(__pyx_t_16); PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_16); __pyx_t_16 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_18, 0+__pyx_t_17, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_18, 1+__pyx_t_17, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_18, 2+__pyx_t_17, __pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_18, 3+__pyx_t_17, __pyx_t_6);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_18, 4+__pyx_t_17, __pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_18, 5+__pyx_t_17, __pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_9);
          PyTuple_SET_ITEM(__pyx_t_18, 6+__pyx_t_17, __pyx_t_9);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_18, 7+__pyx_t_17, __pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_18, 8+__pyx_t_17, __pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_18, 9+__pyx_t_17, __pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_13);
          PyTuple_SET_ITEM(__pyx_t_18, 10+__pyx_t_17, __pyx_t_13);
          __Pyx_GIVEREF(__pyx_t_14);
          PyTuple_SET_ITEM(__pyx_t_18, 11+__pyx_t_17, __pyx_t_14);
          __Pyx_INCREF(__pyx_v__gv);
          __Pyx_GIVEREF(__pyx_v__gv);
          PyTuple_SET_ITEM(__pyx_t_18, 12+__pyx_t_17, __pyx_v__gv);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_5 = 0;
          __pyx_t_6 = 0;
          __pyx_t_7 = 0;
          __pyx_t_8 = 0;
          __pyx_t_9 = 0;
          __pyx_t_10 = 0;
          __pyx_t_11 = 0;
          __pyx_t_12 = 0;
          __pyx_t_13 = 0;
          __pyx_t_14 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_15, __pyx_t_18, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":779
 *             int hru
 * 
 *         channelData = self.lsus.get(channel, None)             # <<<<<<<<<<<<<<
 *         if channelData is None:
 *             self.lsus[channel] = dict()
 */
  if (unlikely(__pyx_v_self->lsus == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 779, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->lsus, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 779, __pyx_L1_error)
  __pyx_v_channelData = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":780
 * 
 *         channelData = self.lsus.get(channel, None)
 *         if channelData is None:             # <<<<<<<<<<<<<<
 *             self.lsus[channel] = dict()
 *             channelData = self.lsus[channel]
 */
  __pyx_t_19 = (__pyx_v_channelData == ((PyObject*)Py_None));
  __pyx_t_20 = (__pyx_t_19 != 0);
  if (__pyx_t_20) {

    /* "QSWATPlus/dataInC.pyx":781
 *         channelData = self.lsus.get(channel, None)
 *         if channelData is None:
 *             self.lsus[channel] = dict()             # <<<<<<<<<<<<<<
 *             channelData = self.lsus[channel]
 *         if landscape in channelData:
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__pyx_v_self->lsus == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 781, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_self->lsus, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":782
 *         if channelData is None:
 *             self.lsus[channel] = dict()
 *             channelData = self.lsus[channel]             # <<<<<<<<<<<<<<
 *         if landscape in channelData:
 *             lsuData = channelData[landscape]
 */
    if (unlikely(__pyx_v_self->lsus == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 782, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 782, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->lsus, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 782, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 782, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "QSWATPlus/dataInC.pyx":780
 * 
 *         channelData = self.lsus.get(channel, None)
 *         if channelData is None:             # <<<<<<<<<<<<<<
 *             self.lsus[channel] = dict()
 *             channelData = self.lsus[channel]
 */
  }

  /* "QSWATPlus/dataInC.pyx":783
 *             self.lsus[channel] = dict()
 *             channelData = self.lsus[channel]
 *         if landscape in channelData:             # <<<<<<<<<<<<<<
 *             lsuData = channelData[landscape]
 *         else:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_v_channelData == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 783, __pyx_L1_error)
  }
  __pyx_t_20 = (__Pyx_PyDict_ContainsTF(__pyx_t_1, __pyx_v_channelData, Py_EQ)); if (unlikely(__pyx_t_20 < 0)) __PYX_ERR(0, 783, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_19 = (__pyx_t_20 != 0);
  if (__pyx_t_19) {

    /* "QSWATPlus/dataInC.pyx":784
 *             channelData = self.lsus[channel]
 *         if landscape in channelData:
 *             lsuData = channelData[landscape]             # <<<<<<<<<<<<<<
 *         else:
 *             lsuData = LSUData()
 */
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 784, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_channelData, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 784, __pyx_L1_error)
    __pyx_v_lsuData = ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":783
 *             self.lsus[channel] = dict()
 *             channelData = self.lsus[channel]
 *         if landscape in channelData:             # <<<<<<<<<<<<<<
 *             lsuData = channelData[landscape]
 *         else:
 */
    goto __pyx_L4;
  }

  /* "QSWATPlus/dataInC.pyx":786
 *             lsuData = channelData[landscape]
 *         else:
 *             lsuData = LSUData()             # <<<<<<<<<<<<<<
 *             reachData = _gv.topo.channelsData[channel]
 *             lsuData.outletElevation = reachData.lowerZ
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_LSUData)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_lsuData = ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":787
 *         else:
 *             lsuData = LSUData()
 *             reachData = _gv.topo.channelsData[channel]             # <<<<<<<<<<<<<<
 *             lsuData.outletElevation = reachData.lowerZ
 *             lsuData.sourceElevation = reachData.upperZ
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_topo); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_channelsData); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_channel, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_ReachData))))) __PYX_ERR(0, 787, __pyx_L1_error)
    __pyx_v_reachData = ((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":788
 *             lsuData = LSUData()
 *             reachData = _gv.topo.channelsData[channel]
 *             lsuData.outletElevation = reachData.lowerZ             # <<<<<<<<<<<<<<
 *             lsuData.sourceElevation = reachData.upperZ
 *             # mid point of channel is a notional point midway between ends
 */
    __pyx_t_21 = __pyx_v_reachData->lowerZ;
    __pyx_v_lsuData->outletElevation = __pyx_t_21;

    /* "QSWATPlus/dataInC.pyx":789
 *             reachData = _gv.topo.channelsData[channel]
 *             lsuData.outletElevation = reachData.lowerZ
 *             lsuData.sourceElevation = reachData.upperZ             # <<<<<<<<<<<<<<
 *             # mid point of channel is a notional point midway between ends
 *             lsuData.midPointX = (reachData.lowerX + reachData.upperX) / 2
 */
    __pyx_t_21 = __pyx_v_reachData->upperZ;
    __pyx_v_lsuData->sourceElevation = __pyx_t_21;

    /* "QSWATPlus/dataInC.pyx":791
 *             lsuData.sourceElevation = reachData.upperZ
 *             # mid point of channel is a notional point midway between ends
 *             lsuData.midPointX = (reachData.lowerX + reachData.upperX) / 2             # <<<<<<<<<<<<<<
 *             lsuData.midPointY = (reachData.lowerY + reachData.upperY) / 2
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]
 */
    __pyx_v_lsuData->midPointX = ((__pyx_v_reachData->lowerX + __pyx_v_reachData->upperX) / 2.0);

    /* "QSWATPlus/dataInC.pyx":792
 *             # mid point of channel is a notional point midway between ends
 *             lsuData.midPointX = (reachData.lowerX + reachData.upperX) / 2
 *             lsuData.midPointY = (reachData.lowerY + reachData.upperY) / 2             # <<<<<<<<<<<<<<
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]
 *             lsuData.channelOrder = _gv.topo.strahler[channel]
 */
    __pyx_v_lsuData->midPointY = ((__pyx_v_reachData->lowerY + __pyx_v_reachData->upperY) / 2.0);

    /* "QSWATPlus/dataInC.pyx":793
 *             lsuData.midPointX = (reachData.lowerX + reachData.upperX) / 2
 *             lsuData.midPointY = (reachData.lowerY + reachData.upperY) / 2
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]             # <<<<<<<<<<<<<<
 *             lsuData.channelOrder = _gv.topo.strahler[channel]
 *             if _gv.existingWshed:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_topo); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_channelLengths); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_channel, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_21 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_21 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_lsuData->channelLength = __pyx_t_21;

    /* "QSWATPlus/dataInC.pyx":794
 *             lsuData.midPointY = (reachData.lowerY + reachData.upperY) / 2
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]
 *             lsuData.channelOrder = _gv.topo.strahler[channel]             # <<<<<<<<<<<<<<
 *             if _gv.existingWshed:
 *                 lsuData.farDistance = lsuData.channelLength
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_topo); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_strahler); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_channel, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_lsuData->channelOrder = __pyx_t_17;

    /* "QSWATPlus/dataInC.pyx":795
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]
 *             lsuData.channelOrder = _gv.topo.strahler[channel]
 *             if _gv.existingWshed:             # <<<<<<<<<<<<<<
 *                 lsuData.farDistance = lsuData.channelLength
 *                 lsuData.farElevation = lsuData.sourceElevation
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_existingWshed); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_19 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_19 < 0)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_19) {

      /* "QSWATPlus/dataInC.pyx":796
 *             lsuData.channelOrder = _gv.topo.strahler[channel]
 *             if _gv.existingWshed:
 *                 lsuData.farDistance = lsuData.channelLength             # <<<<<<<<<<<<<<
 *                 lsuData.farElevation = lsuData.sourceElevation
 *             channelData[landscape] = lsuData
 */
      __pyx_t_21 = __pyx_v_lsuData->channelLength;
      __pyx_v_lsuData->farDistance = __pyx_t_21;

      /* "QSWATPlus/dataInC.pyx":797
 *             if _gv.existingWshed:
 *                 lsuData.farDistance = lsuData.channelLength
 *                 lsuData.farElevation = lsuData.sourceElevation             # <<<<<<<<<<<<<<
 *             channelData[landscape] = lsuData
 *         lsuData.cellCount += 1
 */
      __pyx_t_21 = __pyx_v_lsuData->sourceElevation;
      __pyx_v_lsuData->farElevation = __pyx_t_21;

      /* "QSWATPlus/dataInC.pyx":795
 *             lsuData.channelLength = _gv.topo.channelLengths[channel]
 *             lsuData.channelOrder = _gv.topo.strahler[channel]
 *             if _gv.existingWshed:             # <<<<<<<<<<<<<<
 *                 lsuData.farDistance = lsuData.channelLength
 *                 lsuData.farElevation = lsuData.sourceElevation
 */
    }

    /* "QSWATPlus/dataInC.pyx":798
 *                 lsuData.farDistance = lsuData.channelLength
 *                 lsuData.farElevation = lsuData.sourceElevation
 *             channelData[landscape] = lsuData             # <<<<<<<<<<<<<<
 *         lsuData.cellCount += 1
 *         lsuData.area += area
 */
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 798, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_channelData, __pyx_t_2, ((PyObject *)__pyx_v_lsuData)) < 0)) __PYX_ERR(0, 798, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L4:;

  /* "QSWATPlus/dataInC.pyx":799
 *                 lsuData.farElevation = lsuData.sourceElevation
 *             channelData[landscape] = lsuData
 *         lsuData.cellCount += 1             # <<<<<<<<<<<<<<
 *         lsuData.area += area
 *         lsuData.totalLatitude += y
 */
  __pyx_v_lsuData->cellCount = (__pyx_v_lsuData->cellCount + 1);

  /* "QSWATPlus/dataInC.pyx":800
 *             channelData[landscape] = lsuData
 *         lsuData.cellCount += 1
 *         lsuData.area += area             # <<<<<<<<<<<<<<
 *         lsuData.totalLatitude += y
 *         lsuData.totalLongitude += x
 */
  __pyx_v_lsuData->area = (__pyx_v_lsuData->area + __pyx_v_area);

  /* "QSWATPlus/dataInC.pyx":801
 *         lsuData.cellCount += 1
 *         lsuData.area += area
 *         lsuData.totalLatitude += y             # <<<<<<<<<<<<<<
 *         lsuData.totalLongitude += x
 *         if slopeValue != _gv.slopeNoData:
 */
  __pyx_v_lsuData->totalLatitude = (__pyx_v_lsuData->totalLatitude + __pyx_v_y);

  /* "QSWATPlus/dataInC.pyx":802
 *         lsuData.area += area
 *         lsuData.totalLatitude += y
 *         lsuData.totalLongitude += x             # <<<<<<<<<<<<<<
 *         if slopeValue != _gv.slopeNoData:
 *             lsuData.totalSlope += slopeValue
 */
  __pyx_v_lsuData->totalLongitude = (__pyx_v_lsuData->totalLongitude + __pyx_v_x);

  /* "QSWATPlus/dataInC.pyx":803
 *         lsuData.totalLatitude += y
 *         lsuData.totalLongitude += x
 *         if slopeValue != _gv.slopeNoData:             # <<<<<<<<<<<<<<
 *             lsuData.totalSlope += slopeValue
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_slopeValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_slopeNoData); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_15 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_15); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_19 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely(__pyx_t_19 < 0)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  if (__pyx_t_19) {

    /* "QSWATPlus/dataInC.pyx":804
 *         lsuData.totalLongitude += x
 *         if slopeValue != _gv.slopeNoData:
 *             lsuData.totalSlope += slopeValue             # <<<<<<<<<<<<<<
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 *             lsuData.totalElevation += elevation
 */
    __pyx_v_lsuData->totalSlope = (__pyx_v_lsuData->totalSlope + __pyx_v_slopeValue);

    /* "QSWATPlus/dataInC.pyx":803
 *         lsuData.totalLatitude += y
 *         lsuData.totalLongitude += x
 *         if slopeValue != _gv.slopeNoData:             # <<<<<<<<<<<<<<
 *             lsuData.totalSlope += slopeValue
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 */
  }

  /* "QSWATPlus/dataInC.pyx":805
 *         if slopeValue != _gv.slopeNoData:
 *             lsuData.totalSlope += slopeValue
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):             # <<<<<<<<<<<<<<
 *             lsuData.totalElevation += elevation
 *             if distSt != _gv.distStNoData and distSt > self.farDistance:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_math); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_isclose); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_15 = PyFloat_FromDouble(__pyx_v_elevation); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_elevationNoData); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_18 = PyTuple_New(2); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_18);
  __Pyx_GIVEREF(__pyx_t_15);
  PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_15);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_2);
  __pyx_t_15 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_rel_tol, __pyx_float_1eneg_06) < 0) __PYX_ERR(0, 805, __pyx_L1_error)
  __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_18, __pyx_t_2); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_19 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely(__pyx_t_19 < 0)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_20 = ((!__pyx_t_19) != 0);
  if (__pyx_t_20) {

    /* "QSWATPlus/dataInC.pyx":806
 *             lsuData.totalSlope += slopeValue
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 *             lsuData.totalElevation += elevation             # <<<<<<<<<<<<<<
 *             if distSt != _gv.distStNoData and distSt > self.farDistance:
 *                 # We have found a new  farthest (by flow distance) point from the subbasin outlet:
 */
    __pyx_v_lsuData->totalElevation = (__pyx_v_lsuData->totalElevation + __pyx_v_elevation);

    /* "QSWATPlus/dataInC.pyx":807
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 *             lsuData.totalElevation += elevation
 *             if distSt != _gv.distStNoData and distSt > self.farDistance:             # <<<<<<<<<<<<<<
 *                 # We have found a new  farthest (by flow distance) point from the subbasin outlet:
 *                 # store distance
 */
    __pyx_t_15 = PyFloat_FromDouble(__pyx_v_distSt); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 807, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_distStNoData); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 807, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_18 = PyObject_RichCompare(__pyx_t_15, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_18); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 807, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_19 = __Pyx_PyObject_IsTrue(__pyx_t_18); if (unlikely(__pyx_t_19 < 0)) __PYX_ERR(0, 807, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    if (__pyx_t_19) {
    } else {
      __pyx_t_20 = __pyx_t_19;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_19 = ((__pyx_v_distSt > __pyx_v_self->farDistance) != 0);
    __pyx_t_20 = __pyx_t_19;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_20) {

      /* "QSWATPlus/dataInC.pyx":810
 *                 # We have found a new  farthest (by flow distance) point from the subbasin outlet:
 *                 # store distance
 *                 self.farDistance = distSt             # <<<<<<<<<<<<<<
 *             if distCh != _gv.distChNoData and distCh > lsuData.farDistance:
 *                 # We have found a new farthest (by flow distance) point from the channel:
 */
      __pyx_v_self->farDistance = __pyx_v_distSt;

      /* "QSWATPlus/dataInC.pyx":807
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):
 *             lsuData.totalElevation += elevation
 *             if distSt != _gv.distStNoData and distSt > self.farDistance:             # <<<<<<<<<<<<<<
 *                 # We have found a new  farthest (by flow distance) point from the subbasin outlet:
 *                 # store distance
 */
    }

    /* "QSWATPlus/dataInC.pyx":811
 *                 # store distance
 *                 self.farDistance = distSt
 *             if distCh != _gv.distChNoData and distCh > lsuData.farDistance:             # <<<<<<<<<<<<<<
 *                 # We have found a new farthest (by flow distance) point from the channel:
 *                 # store distance, its elevation and its location
 */
    __pyx_t_18 = PyFloat_FromDouble(__pyx_v_distCh); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_distChNoData); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_15 = PyObject_RichCompare(__pyx_t_18, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_15); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_19 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely(__pyx_t_19 < 0)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (__pyx_t_19) {
    } else {
      __pyx_t_20 = __pyx_t_19;
      goto __pyx_L12_bool_binop_done;
    }
    __pyx_t_19 = ((__pyx_v_distCh > __pyx_v_lsuData->farDistance) != 0);
    __pyx_t_20 = __pyx_t_19;
    __pyx_L12_bool_binop_done:;
    if (__pyx_t_20) {

      /* "QSWATPlus/dataInC.pyx":814
 *                 # We have found a new farthest (by flow distance) point from the channel:
 *                 # store distance, its elevation and its location
 *                 lsuData.farDistance = distCh             # <<<<<<<<<<<<<<
 *                 lsuData.farElevation = elevation
 *                 lsuData.farPointX = x
 */
      __pyx_v_lsuData->farDistance = __pyx_v_distCh;

      /* "QSWATPlus/dataInC.pyx":815
 *                 # store distance, its elevation and its location
 *                 lsuData.farDistance = distCh
 *                 lsuData.farElevation = elevation             # <<<<<<<<<<<<<<
 *                 lsuData.farPointX = x
 *                 lsuData.farPointY = y
 */
      __pyx_v_lsuData->farElevation = __pyx_v_elevation;

      /* "QSWATPlus/dataInC.pyx":816
 *                 lsuData.farDistance = distCh
 *                 lsuData.farElevation = elevation
 *                 lsuData.farPointX = x             # <<<<<<<<<<<<<<
 *                 lsuData.farPointY = y
 *             self.maxElevation = max(self.maxElevation, elevation)
 */
      __pyx_v_lsuData->farPointX = __pyx_v_x;

      /* "QSWATPlus/dataInC.pyx":817
 *                 lsuData.farElevation = elevation
 *                 lsuData.farPointX = x
 *                 lsuData.farPointY = y             # <<<<<<<<<<<<<<
 *             self.maxElevation = max(self.maxElevation, elevation)
 *             self.minElevation = min(self.minElevation, elevation)
 */
      __pyx_v_lsuData->farPointY = __pyx_v_y;

      /* "QSWATPlus/dataInC.pyx":811
 *                 # store distance
 *                 self.farDistance = distSt
 *             if distCh != _gv.distChNoData and distCh > lsuData.farDistance:             # <<<<<<<<<<<<<<
 *                 # We have found a new farthest (by flow distance) point from the channel:
 *                 # store distance, its elevation and its location
 */
    }

    /* "QSWATPlus/dataInC.pyx":818
 *                 lsuData.farPointX = x
 *                 lsuData.farPointY = y
 *             self.maxElevation = max(self.maxElevation, elevation)             # <<<<<<<<<<<<<<
 *             self.minElevation = min(self.minElevation, elevation)
 *         if crop == self.waterLanduse:
 */
    __pyx_t_21 = __pyx_v_elevation;
    __pyx_t_22 = __pyx_v_self->maxElevation;
    if (((__pyx_t_21 > __pyx_t_22) != 0)) {
      __pyx_t_23 = __pyx_t_21;
    } else {
      __pyx_t_23 = __pyx_t_22;
    }
    __pyx_v_self->maxElevation = __pyx_t_23;

    /* "QSWATPlus/dataInC.pyx":819
 *                 lsuData.farPointY = y
 *             self.maxElevation = max(self.maxElevation, elevation)
 *             self.minElevation = min(self.minElevation, elevation)             # <<<<<<<<<<<<<<
 *         if crop == self.waterLanduse:
 *             if lsuData.waterBody is None:
 */
    __pyx_t_23 = __pyx_v_elevation;
    __pyx_t_21 = __pyx_v_self->minElevation;
    if (((__pyx_t_23 < __pyx_t_21) != 0)) {
      __pyx_t_22 = __pyx_t_23;
    } else {
      __pyx_t_22 = __pyx_t_21;
    }
    __pyx_v_self->minElevation = __pyx_t_22;

    /* "QSWATPlus/dataInC.pyx":805
 *         if slopeValue != _gv.slopeNoData:
 *             lsuData.totalSlope += slopeValue
 *         if not math.isclose(elevation, _gv.elevationNoData, rel_tol=1e-06):             # <<<<<<<<<<<<<<
 *             lsuData.totalElevation += elevation
 *             if distSt != _gv.distStNoData and distSt > self.farDistance:
 */
  }

  /* "QSWATPlus/dataInC.pyx":820
 *             self.maxElevation = max(self.maxElevation, elevation)
 *             self.minElevation = min(self.minElevation, elevation)
 *         if crop == self.waterLanduse:             # <<<<<<<<<<<<<<
 *             if lsuData.waterBody is None:
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)
 */
  __pyx_t_20 = ((__pyx_v_crop == __pyx_v_self->waterLanduse) != 0);
  if (__pyx_t_20) {

    /* "QSWATPlus/dataInC.pyx":821
 *             self.minElevation = min(self.minElevation, elevation)
 *         if crop == self.waterLanduse:
 *             if lsuData.waterBody is None:             # <<<<<<<<<<<<<<
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)
 *             else:
 */
    __pyx_t_20 = (((PyObject *)__pyx_v_lsuData->waterBody) == Py_None);
    __pyx_t_19 = (__pyx_t_20 != 0);
    if (__pyx_t_19) {

      /* "QSWATPlus/dataInC.pyx":822
 *         if crop == self.waterLanduse:
 *             if lsuData.waterBody is None:
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)             # <<<<<<<<<<<<<<
 *             else:
 *                 lsuData.waterBody.addCell(area, elevation, x, y)
 */
      __pyx_t_15 = PyFloat_FromDouble(__pyx_v_area); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_elevation); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_18 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyTuple_New(5); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_15);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_14, 2, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_14, 3, __pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_14, 4, __pyx_t_1);
      __pyx_t_15 = 0;
      __pyx_t_2 = 0;
      __pyx_t_18 = 0;
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_WaterBody), __pyx_t_14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_lsuData->waterBody);
      __Pyx_DECREF(((PyObject *)__pyx_v_lsuData->waterBody));
      __pyx_v_lsuData->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1);
      __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":821
 *             self.minElevation = min(self.minElevation, elevation)
 *         if crop == self.waterLanduse:
 *             if lsuData.waterBody is None:             # <<<<<<<<<<<<<<
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)
 *             else:
 */
      goto __pyx_L15;
    }

    /* "QSWATPlus/dataInC.pyx":824
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)
 *             else:
 *                 lsuData.waterBody.addCell(area, elevation, x, y)             # <<<<<<<<<<<<<<
 *         if (crop != _gv.cropNoData) and (soil != _gv.soilNoData) and (slopeValue != _gv.slopeNoData):
 *             lsuData.cropSoilSlopeArea += area
 */
    /*else*/ {
      ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody *)__pyx_v_lsuData->waterBody->__pyx_vtab)->addCell(__pyx_v_lsuData->waterBody, __pyx_v_area, __pyx_v_elevation, __pyx_v_x, __pyx_v_y);
    }
    __pyx_L15:;

    /* "QSWATPlus/dataInC.pyx":820
 *             self.maxElevation = max(self.maxElevation, elevation)
 *             self.minElevation = min(self.minElevation, elevation)
 *         if crop == self.waterLanduse:             # <<<<<<<<<<<<<<
 *             if lsuData.waterBody is None:
 *                 lsuData.waterBody = WaterBody(1, area, elevation, x, y)
 */
  }

  /* "QSWATPlus/dataInC.pyx":825
 *             else:
 *                 lsuData.waterBody.addCell(area, elevation, x, y)
 *         if (crop != _gv.cropNoData) and (soil != _gv.soilNoData) and (slopeValue != _gv.slopeNoData):             # <<<<<<<<<<<<<<
 *             lsuData.cropSoilSlopeArea += area
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_cropNoData); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_18 = PyObject_RichCompare(__pyx_t_1, __pyx_t_14, Py_NE); __Pyx_XGOTREF(__pyx_t_18); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_20 = __Pyx_PyObject_IsTrue(__pyx_t_18); if (unlikely(__pyx_t_20 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
  if (__pyx_t_20) {
  } else {
    __pyx_t_19 = __pyx_t_20;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_18);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_soilNoData); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_18, __pyx_t_14, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_20 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_20 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_20) {
  } else {
    __pyx_t_19 = __pyx_t_20;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_slopeValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v__gv, __pyx_n_s_slopeNoData); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_18 = PyObject_RichCompare(__pyx_t_1, __pyx_t_14, Py_NE); __Pyx_XGOTREF(__pyx_t_18); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_20 = __Pyx_PyObject_IsTrue(__pyx_t_18); if (unlikely(__pyx_t_20 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
  __pyx_t_19 = __pyx_t_20;
  __pyx_L17_bool_binop_done:;
  if (__pyx_t_19) {

    /* "QSWATPlus/dataInC.pyx":826
 *                 lsuData.waterBody.addCell(area, elevation, x, y)
 *         if (crop != _gv.cropNoData) and (soil != _gv.soilNoData) and (slopeValue != _gv.slopeNoData):
 *             lsuData.cropSoilSlopeArea += area             # <<<<<<<<<<<<<<
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 *             cellData = lsuData.hruMap.get(hru, None)
 */
    __pyx_v_lsuData->cropSoilSlopeArea = (__pyx_v_lsuData->cropSoilSlopeArea + __pyx_v_area);

    /* "QSWATPlus/dataInC.pyx":827
 *         if (crop != _gv.cropNoData) and (soil != _gv.soilNoData) and (slopeValue != _gv.slopeNoData):
 *             lsuData.cropSoilSlopeArea += area
 *             hru = lsuData.getHruNumber(crop, soil, slope)             # <<<<<<<<<<<<<<
 *             cellData = lsuData.hruMap.get(hru, None)
 *             if cellData is None:
 */
    __pyx_v_hru = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->getHruNumber(__pyx_v_lsuData, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope);

    /* "QSWATPlus/dataInC.pyx":828
 *             lsuData.cropSoilSlopeArea += area
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 *             cellData = lsuData.hruMap.get(hru, None)             # <<<<<<<<<<<<<<
 *             if cellData is None:
 *                 # new hru
 */
    if (unlikely(__pyx_v_lsuData->hruMap == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
      __PYX_ERR(0, 828, __pyx_L1_error)
    }
    __pyx_t_18 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_18);
    __pyx_t_14 = __Pyx_PyDict_GetItemDefault(__pyx_v_lsuData->hruMap, __pyx_t_18, Py_None); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    if (!(likely(((__pyx_t_14) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_14, __pyx_ptype_9QSWATPlus_7dataInC_CellData))))) __PYX_ERR(0, 828, __pyx_L1_error)
    __pyx_v_cellData = ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_14);
    __pyx_t_14 = 0;

    /* "QSWATPlus/dataInC.pyx":829
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 *             cellData = lsuData.hruMap.get(hru, None)
 *             if cellData is None:             # <<<<<<<<<<<<<<
 *                 # new hru
 *                 cellData = CellData(1, area, elevation, slopeValue, x, y, crop)
 */
    __pyx_t_19 = (((PyObject *)__pyx_v_cellData) == Py_None);
    __pyx_t_20 = (__pyx_t_19 != 0);
    if (__pyx_t_20) {

      /* "QSWATPlus/dataInC.pyx":831
 *             if cellData is None:
 *                 # new hru
 *                 cellData = CellData(1, area, elevation, slopeValue, x, y, crop)             # <<<<<<<<<<<<<<
 *                 lsuData.hruMap[hru] = cellData
 *             else:
 */
      __pyx_t_14 = PyFloat_FromDouble(__pyx_v_area); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_18 = PyFloat_FromDouble(__pyx_v_elevation); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_1 = PyFloat_FromDouble(__pyx_v_slopeValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_15 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_12 = PyTuple_New(7); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_18);
      PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_18);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_12, 4, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_15);
      PyTuple_SET_ITEM(__pyx_t_12, 5, __pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_12, 6, __pyx_t_13);
      __pyx_t_14 = 0;
      __pyx_t_18 = 0;
      __pyx_t_1 = 0;
      __pyx_t_2 = 0;
      __pyx_t_15 = 0;
      __pyx_t_13 = 0;
      __pyx_t_13 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_CellData), __pyx_t_12, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF_SET(__pyx_v_cellData, ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_t_13));
      __pyx_t_13 = 0;

      /* "QSWATPlus/dataInC.pyx":832
 *                 # new hru
 *                 cellData = CellData(1, area, elevation, slopeValue, x, y, crop)
 *                 lsuData.hruMap[hru] = cellData             # <<<<<<<<<<<<<<
 *             else:
 *                 cellData.addCell(area, elevation, slopeValue, x, y)
 */
      if (unlikely(__pyx_v_lsuData->hruMap == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 832, __pyx_L1_error)
      }
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      if (unlikely(PyDict_SetItem(__pyx_v_lsuData->hruMap, __pyx_t_13, ((PyObject *)__pyx_v_cellData)) < 0)) __PYX_ERR(0, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

      /* "QSWATPlus/dataInC.pyx":829
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 *             cellData = lsuData.hruMap.get(hru, None)
 *             if cellData is None:             # <<<<<<<<<<<<<<
 *                 # new hru
 *                 cellData = CellData(1, area, elevation, slopeValue, x, y, crop)
 */
      goto __pyx_L20;
    }

    /* "QSWATPlus/dataInC.pyx":834
 *                 lsuData.hruMap[hru] = cellData
 *             else:
 *                 cellData.addCell(area, elevation, slopeValue, x, y)             # <<<<<<<<<<<<<<
 *                 lsuData.hruMap[hru] = cellData
 * 
 */
    /*else*/ {
      ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData *)__pyx_v_cellData->__pyx_vtab)->addCell(__pyx_v_cellData, __pyx_v_area, __pyx_v_elevation, __pyx_v_slopeValue, __pyx_v_x, __pyx_v_y);

      /* "QSWATPlus/dataInC.pyx":835
 *             else:
 *                 cellData.addCell(area, elevation, slopeValue, x, y)
 *                 lsuData.hruMap[hru] = cellData             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
      if (unlikely(__pyx_v_lsuData->hruMap == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 835, __pyx_L1_error)
      }
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      if (unlikely(PyDict_SetItem(__pyx_v_lsuData->hruMap, __pyx_t_13, ((PyObject *)__pyx_v_cellData)) < 0)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_L20:;

    /* "QSWATPlus/dataInC.pyx":825
 *             else:
 *                 lsuData.waterBody.addCell(area, elevation, x, y)
 *         if (crop != _gv.cropNoData) and (soil != _gv.soilNoData) and (slopeValue != _gv.slopeNoData):             # <<<<<<<<<<<<<<
 *             lsuData.cropSoilSlopeArea += area
 *             hru = lsuData.getHruNumber(crop, soil, slope)
 */
  }

  /* "QSWATPlus/dataInC.pyx":768
 *         return self.lsus if self.mergedLsus is None else self.mergedLsus
 * 
 *     cpdef void addCell(self, int channel, int landscape, int crop, int soil, int slope, double area,             # <<<<<<<<<<<<<<
 *                       double elevation, double slopeValue, double distSt, double distCh, double x, double y, object _gv):
 *         """Add data for 1 cell in watershed grid."""
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.addCell", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_reachData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XDECREF((PyObject *)__pyx_v_cellData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_5addCell(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_4addCell[] = "Add data for 1 cell in watershed grid.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_5addCell(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_channel;
  int __pyx_v_landscape;
  int __pyx_v_crop;
  int __pyx_v_soil;
  int __pyx_v_slope;
  double __pyx_v_area;
  double __pyx_v_elevation;
  double __pyx_v_slopeValue;
  double __pyx_v_distSt;
  double __pyx_v_distCh;
  double __pyx_v_x;
  double __pyx_v_y;
  PyObject *__pyx_v__gv = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addCell (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_channel,&__pyx_n_s_landscape,&__pyx_n_s_crop,&__pyx_n_s_soil,&__pyx_n_s_slope,&__pyx_n_s_area,&__pyx_n_s_elevation,&__pyx_n_s_slopeValue,&__pyx_n_s_distSt,&__pyx_n_s_distCh,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_gv,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_channel)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_landscape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 1); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 2); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_soil)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 3); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 4); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_area)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 5); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_elevation)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 6); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slopeValue)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 7); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_distSt)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 8); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_distCh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 9); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 10); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 11); __PYX_ERR(0, 768, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_gv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, 12); __PYX_ERR(0, 768, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addCell") < 0)) __PYX_ERR(0, 768, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_channel = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_channel == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_landscape = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_landscape == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_crop = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_soil = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_soil == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_slope = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_slope == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_area = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_area == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 768, __pyx_L3_error)
    __pyx_v_elevation = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_elevation == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v_slopeValue = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_slopeValue == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v_distSt = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_distSt == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v_distCh = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_distCh == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_x == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_y == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 769, __pyx_L3_error)
    __pyx_v__gv = values[12];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addCell", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 768, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.addCell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4addCell(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), __pyx_v_channel, __pyx_v_landscape, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope, __pyx_v_area, __pyx_v_elevation, __pyx_v_slopeValue, __pyx_v_distSt, __pyx_v_distCh, __pyx_v_x, __pyx_v_y, __pyx_v__gv);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_4addCell(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope, double __pyx_v_area, double __pyx_v_elevation, double __pyx_v_slopeValue, double __pyx_v_distSt, double __pyx_v_distCh, double __pyx_v_x, double __pyx_v_y, PyObject *__pyx_v__gv) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("addCell", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9BasinData_addCell(__pyx_v_self, __pyx_v_channel, __pyx_v_landscape, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope, __pyx_v_area, __pyx_v_elevation, __pyx_v_slopeValue, __pyx_v_distSt, __pyx_v_distCh, __pyx_v_x, __pyx_v_y, __pyx_v__gv, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.addCell", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":838
 * 
 *     @staticmethod
 *     def getHruNumber(dict channelLandscapeCropSoilSlopeNumbers, int lastHru, int channel, int landscape, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to current hru count for the landscape unit)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7getHruNumber(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_6getHruNumber[] = "\n        Return HRU number (new if necessary, adding one to current hru count for the landscape unit) \n        for the channel/landscape/crop/soil/slope combination.\n        ";
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_9BasinData_7getHruNumber = {"getHruNumber", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7getHruNumber, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_6getHruNumber};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7getHruNumber(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_channelLandscapeCropSoilSlopeNumbers = 0;
  int __pyx_v_lastHru;
  int __pyx_v_channel;
  int __pyx_v_landscape;
  int __pyx_v_crop;
  int __pyx_v_soil;
  int __pyx_v_slope;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getHruNumber (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_channelLandscapeCropSoilSlopeNum,&__pyx_n_s_lastHru,&__pyx_n_s_channel,&__pyx_n_s_landscape,&__pyx_n_s_crop,&__pyx_n_s_soil,&__pyx_n_s_slope,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_channelLandscapeCropSoilSlopeNum)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lastHru)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 1); __PYX_ERR(0, 838, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_channel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 2); __PYX_ERR(0, 838, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_landscape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 3); __PYX_ERR(0, 838, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crop)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 4); __PYX_ERR(0, 838, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_soil)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 5); __PYX_ERR(0, 838, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, 6); __PYX_ERR(0, 838, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getHruNumber") < 0)) __PYX_ERR(0, 838, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_channelLandscapeCropSoilSlopeNumbers = ((PyObject*)values[0]);
    __pyx_v_lastHru = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_lastHru == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_channel = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_channel == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_landscape = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_landscape == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_crop = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_crop == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_soil = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_soil == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_slope = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_slope == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getHruNumber", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 838, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.getHruNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_channelLandscapeCropSoilSlopeNumbers), (&PyDict_Type), 1, "channelLandscapeCropSoilSlopeNumbers", 1))) __PYX_ERR(0, 838, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_6getHruNumber(__pyx_v_channelLandscapeCropSoilSlopeNumbers, __pyx_v_lastHru, __pyx_v_channel, __pyx_v_landscape, __pyx_v_crop, __pyx_v_soil, __pyx_v_slope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_6getHruNumber(PyObject *__pyx_v_channelLandscapeCropSoilSlopeNumbers, int __pyx_v_lastHru, int __pyx_v_channel, int __pyx_v_landscape, int __pyx_v_crop, int __pyx_v_soil, int __pyx_v_slope) {
  int __pyx_v_resultHru;
  PyObject *__pyx_v_cropSoilSlopeNumbers = 0;
  PyObject *__pyx_v_soilSlopeNumbers = 0;
  PyObject *__pyx_v_slopeNumbers = 0;
  int __pyx_v_hru;
  PyObject *__pyx_v_landscapeCropSoilSlopeNumbers = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("getHruNumber", 0);

  /* "QSWATPlus/dataInC.pyx":851
 *             int hru
 * 
 *         resultHru = lastHru             # <<<<<<<<<<<<<<
 *         landscapeCropSoilSlopeNumbers = channelLandscapeCropSoilSlopeNumbers.get(channel, None)
 *         if landscapeCropSoilSlopeNumbers is None:
 */
  __pyx_v_resultHru = __pyx_v_lastHru;

  /* "QSWATPlus/dataInC.pyx":852
 * 
 *         resultHru = lastHru
 *         landscapeCropSoilSlopeNumbers = channelLandscapeCropSoilSlopeNumbers.get(channel, None)             # <<<<<<<<<<<<<<
 *         if landscapeCropSoilSlopeNumbers is None:
 *             # new channel
 */
  if (unlikely(__pyx_v_channelLandscapeCropSoilSlopeNumbers == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 852, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_channelLandscapeCropSoilSlopeNumbers, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_landscapeCropSoilSlopeNumbers = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":853
 *         resultHru = lastHru
 *         landscapeCropSoilSlopeNumbers = channelLandscapeCropSoilSlopeNumbers.get(channel, None)
 *         if landscapeCropSoilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *             # new channel
 *             resultHru += 1
 */
  __pyx_t_3 = (__pyx_v_landscapeCropSoilSlopeNumbers == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "QSWATPlus/dataInC.pyx":855
 *         if landscapeCropSoilSlopeNumbers is None:
 *             # new channel
 *             resultHru += 1             # <<<<<<<<<<<<<<
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = resultHru
 */
    __pyx_v_resultHru = (__pyx_v_resultHru + 1);

    /* "QSWATPlus/dataInC.pyx":856
 *             # new channel
 *             resultHru += 1
 *             slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             slopeNumbers[slope] = resultHru
 *             soilSlopeNumbers = dict()
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":857
 *             resultHru += 1
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = resultHru             # <<<<<<<<<<<<<<
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 857, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 857, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 857, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":858
 *             slopeNumbers = dict()
 *             slopeNumbers[slope] = resultHru
 *             soilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             soilSlopeNumbers[soil] = slopeNumbers
 *             cropSoilSlopeNumbers = dict()
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_soilSlopeNumbers = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":859
 *             slopeNumbers[slope] = resultHru
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *             cropSoilSlopeNumbers = dict()
 *             cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_2, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 859, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":860
 *             soilSlopeNumbers = dict()
 *             soilSlopeNumbers[soil] = slopeNumbers
 *             cropSoilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *             landscapeCropSoilSlopeNumbers = dict()
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 860, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_cropSoilSlopeNumbers = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":861
 *             soilSlopeNumbers[soil] = slopeNumbers
 *             cropSoilSlopeNumbers = dict()
 *             cropSoilSlopeNumbers[crop] = soilSlopeNumbers             # <<<<<<<<<<<<<<
 *             landscapeCropSoilSlopeNumbers = dict()
 *             landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_cropSoilSlopeNumbers, __pyx_t_2, __pyx_v_soilSlopeNumbers) < 0)) __PYX_ERR(0, 861, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":862
 *             cropSoilSlopeNumbers = dict()
 *             cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *             landscapeCropSoilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *             landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 *             channelLandscapeCropSoilSlopeNumbers[channel] = landscapeCropSoilSlopeNumbers
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 862, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_landscapeCropSoilSlopeNumbers, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":863
 *             cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *             landscapeCropSoilSlopeNumbers = dict()
 *             landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers             # <<<<<<<<<<<<<<
 *             channelLandscapeCropSoilSlopeNumbers[channel] = landscapeCropSoilSlopeNumbers
 *         else:
 */
    if (unlikely(__Pyx_SetItemInt(__pyx_v_landscapeCropSoilSlopeNumbers, __pyx_v_landscape, __pyx_v_cropSoilSlopeNumbers, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 863, __pyx_L1_error)

    /* "QSWATPlus/dataInC.pyx":864
 *             landscapeCropSoilSlopeNumbers = dict()
 *             landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 *             channelLandscapeCropSoilSlopeNumbers[channel] = landscapeCropSoilSlopeNumbers             # <<<<<<<<<<<<<<
 *         else:
 *             cropSoilSlopeNumbers = landscapeCropSoilSlopeNumbers.get(landscape, None)
 */
    if (unlikely(__pyx_v_channelLandscapeCropSoilSlopeNumbers == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 864, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_channelLandscapeCropSoilSlopeNumbers, __pyx_t_2, __pyx_v_landscapeCropSoilSlopeNumbers) < 0)) __PYX_ERR(0, 864, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":853
 *         resultHru = lastHru
 *         landscapeCropSoilSlopeNumbers = channelLandscapeCropSoilSlopeNumbers.get(channel, None)
 *         if landscapeCropSoilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *             # new channel
 *             resultHru += 1
 */
    goto __pyx_L3;
  }

  /* "QSWATPlus/dataInC.pyx":866
 *             channelLandscapeCropSoilSlopeNumbers[channel] = landscapeCropSoilSlopeNumbers
 *         else:
 *             cropSoilSlopeNumbers = landscapeCropSoilSlopeNumbers.get(landscape, None)             # <<<<<<<<<<<<<<
 *             if cropSoilSlopeNumbers is None:
 *                 # new landscape unit
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_landscapeCropSoilSlopeNumbers, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, Py_None};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 866, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_5, Py_None};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 866, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 866, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_5);
      __Pyx_INCREF(Py_None);
      __Pyx_GIVEREF(Py_None);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, Py_None);
      __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 866, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 866, __pyx_L1_error)
    __pyx_v_cropSoilSlopeNumbers = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":867
 *         else:
 *             cropSoilSlopeNumbers = landscapeCropSoilSlopeNumbers.get(landscape, None)
 *             if cropSoilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *                 # new landscape unit
 *                 resultHru += 1
 */
    __pyx_t_4 = (__pyx_v_cropSoilSlopeNumbers == ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_4 != 0);
    if (__pyx_t_3) {

      /* "QSWATPlus/dataInC.pyx":869
 *             if cropSoilSlopeNumbers is None:
 *                 # new landscape unit
 *                 resultHru += 1             # <<<<<<<<<<<<<<
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = resultHru
 */
      __pyx_v_resultHru = (__pyx_v_resultHru + 1);

      /* "QSWATPlus/dataInC.pyx":870
 *                 # new landscape unit
 *                 resultHru += 1
 *                 slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                 slopeNumbers[slope] = resultHru
 *                 soilSlopeNumbers = dict()
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 870, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":871
 *                 resultHru += 1
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = resultHru             # <<<<<<<<<<<<<<
 *                 soilSlopeNumbers = dict()
 *                 soilSlopeNumbers[soil] = slopeNumbers
 */
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 871, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 871, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 871, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":872
 *                 slopeNumbers = dict()
 *                 slopeNumbers[slope] = resultHru
 *                 soilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                 soilSlopeNumbers[soil] = slopeNumbers
 *                 cropSoilSlopeNumbers = dict()
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_v_soilSlopeNumbers = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":873
 *                 slopeNumbers[slope] = resultHru
 *                 soilSlopeNumbers = dict()
 *                 soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *                 cropSoilSlopeNumbers = dict()
 *                 cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 */
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 873, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_2, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 873, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":874
 *                 soilSlopeNumbers = dict()
 *                 soilSlopeNumbers[soil] = slopeNumbers
 *                 cropSoilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                 cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *                 landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 874, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF_SET(__pyx_v_cropSoilSlopeNumbers, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":875
 *                 soilSlopeNumbers[soil] = slopeNumbers
 *                 cropSoilSlopeNumbers = dict()
 *                 cropSoilSlopeNumbers[crop] = soilSlopeNumbers             # <<<<<<<<<<<<<<
 *                 landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 *             else:
 */
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(PyDict_SetItem(__pyx_v_cropSoilSlopeNumbers, __pyx_t_2, __pyx_v_soilSlopeNumbers) < 0)) __PYX_ERR(0, 875, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":876
 *                 cropSoilSlopeNumbers = dict()
 *                 cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *                 landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers             # <<<<<<<<<<<<<<
 *             else:
 *                 soilSlopeNumbers = cropSoilSlopeNumbers.get(crop, None)
 */
      if (unlikely(__Pyx_SetItemInt(__pyx_v_landscapeCropSoilSlopeNumbers, __pyx_v_landscape, __pyx_v_cropSoilSlopeNumbers, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 876, __pyx_L1_error)

      /* "QSWATPlus/dataInC.pyx":867
 *         else:
 *             cropSoilSlopeNumbers = landscapeCropSoilSlopeNumbers.get(landscape, None)
 *             if cropSoilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *                 # new landscape unit
 *                 resultHru += 1
 */
      goto __pyx_L4;
    }

    /* "QSWATPlus/dataInC.pyx":878
 *                 landscapeCropSoilSlopeNumbers[landscape] = cropSoilSlopeNumbers
 *             else:
 *                 soilSlopeNumbers = cropSoilSlopeNumbers.get(crop, None)             # <<<<<<<<<<<<<<
 *                 if soilSlopeNumbers is None:
 *                     # new crop
 */
    /*else*/ {
      if (unlikely(__pyx_v_cropSoilSlopeNumbers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
        __PYX_ERR(0, 878, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 878, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_cropSoilSlopeNumbers, __pyx_t_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 878, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 878, __pyx_L1_error)
      __pyx_v_soilSlopeNumbers = ((PyObject*)__pyx_t_1);
      __pyx_t_1 = 0;

      /* "QSWATPlus/dataInC.pyx":879
 *             else:
 *                 soilSlopeNumbers = cropSoilSlopeNumbers.get(crop, None)
 *                 if soilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *                     # new crop
 *                     resultHru += 1
 */
      __pyx_t_3 = (__pyx_v_soilSlopeNumbers == ((PyObject*)Py_None));
      __pyx_t_4 = (__pyx_t_3 != 0);
      if (__pyx_t_4) {

        /* "QSWATPlus/dataInC.pyx":881
 *                 if soilSlopeNumbers is None:
 *                     # new crop
 *                     resultHru += 1             # <<<<<<<<<<<<<<
 *                     slopeNumbers = dict()
 *                     slopeNumbers[slope] = resultHru
 */
        __pyx_v_resultHru = (__pyx_v_resultHru + 1);

        /* "QSWATPlus/dataInC.pyx":882
 *                     # new crop
 *                     resultHru += 1
 *                     slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                     slopeNumbers[slope] = resultHru
 *                     soilSlopeNumbers = dict()
 */
        __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 882, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_1);
        __pyx_t_1 = 0;

        /* "QSWATPlus/dataInC.pyx":883
 *                     resultHru += 1
 *                     slopeNumbers = dict()
 *                     slopeNumbers[slope] = resultHru             # <<<<<<<<<<<<<<
 *                     soilSlopeNumbers = dict()
 *                     soilSlopeNumbers[soil] = slopeNumbers
 */
        __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 883, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 883, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_2, __pyx_t_1) < 0)) __PYX_ERR(0, 883, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "QSWATPlus/dataInC.pyx":884
 *                     slopeNumbers = dict()
 *                     slopeNumbers[slope] = resultHru
 *                     soilSlopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                     soilSlopeNumbers[soil] = slopeNumbers
 *                     cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 */
        __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 884, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF_SET(__pyx_v_soilSlopeNumbers, ((PyObject*)__pyx_t_1));
        __pyx_t_1 = 0;

        /* "QSWATPlus/dataInC.pyx":885
 *                     slopeNumbers[slope] = resultHru
 *                     soilSlopeNumbers = dict()
 *                     soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *                     cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *                 else:
 */
        __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_1, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 885, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "QSWATPlus/dataInC.pyx":886
 *                     soilSlopeNumbers = dict()
 *                     soilSlopeNumbers[soil] = slopeNumbers
 *                     cropSoilSlopeNumbers[crop] = soilSlopeNumbers             # <<<<<<<<<<<<<<
 *                 else:
 *                     slopeNumbers = soilSlopeNumbers.get(soil, None)
 */
        if (unlikely(__pyx_v_cropSoilSlopeNumbers == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 886, __pyx_L1_error)
        }
        __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 886, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (unlikely(PyDict_SetItem(__pyx_v_cropSoilSlopeNumbers, __pyx_t_1, __pyx_v_soilSlopeNumbers) < 0)) __PYX_ERR(0, 886, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "QSWATPlus/dataInC.pyx":879
 *             else:
 *                 soilSlopeNumbers = cropSoilSlopeNumbers.get(crop, None)
 *                 if soilSlopeNumbers is None:             # <<<<<<<<<<<<<<
 *                     # new crop
 *                     resultHru += 1
 */
        goto __pyx_L5;
      }

      /* "QSWATPlus/dataInC.pyx":888
 *                     cropSoilSlopeNumbers[crop] = soilSlopeNumbers
 *                 else:
 *                     slopeNumbers = soilSlopeNumbers.get(soil, None)             # <<<<<<<<<<<<<<
 *                     if slopeNumbers is None:
 *                         # new soil for existing crop
 */
      /*else*/ {
        if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
          PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
          __PYX_ERR(0, 888, __pyx_L1_error)
        }
        __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_soilSlopeNumbers, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 888, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 888, __pyx_L1_error)
        __pyx_v_slopeNumbers = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;

        /* "QSWATPlus/dataInC.pyx":889
 *                 else:
 *                     slopeNumbers = soilSlopeNumbers.get(soil, None)
 *                     if slopeNumbers is None:             # <<<<<<<<<<<<<<
 *                         # new soil for existing crop
 *                         resultHru += 1
 */
        __pyx_t_4 = (__pyx_v_slopeNumbers == ((PyObject*)Py_None));
        __pyx_t_3 = (__pyx_t_4 != 0);
        if (__pyx_t_3) {

          /* "QSWATPlus/dataInC.pyx":891
 *                     if slopeNumbers is None:
 *                         # new soil for existing crop
 *                         resultHru += 1             # <<<<<<<<<<<<<<
 *                         slopeNumbers = dict()
 *                         slopeNumbers[slope] = resultHru
 */
          __pyx_v_resultHru = (__pyx_v_resultHru + 1);

          /* "QSWATPlus/dataInC.pyx":892
 *                         # new soil for existing crop
 *                         resultHru += 1
 *                         slopeNumbers = dict()             # <<<<<<<<<<<<<<
 *                         slopeNumbers[slope] = resultHru
 *                         soilSlopeNumbers[soil] = slopeNumbers
 */
          __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 892, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_slopeNumbers, ((PyObject*)__pyx_t_2));
          __pyx_t_2 = 0;

          /* "QSWATPlus/dataInC.pyx":893
 *                         resultHru += 1
 *                         slopeNumbers = dict()
 *                         slopeNumbers[slope] = resultHru             # <<<<<<<<<<<<<<
 *                         soilSlopeNumbers[soil] = slopeNumbers
 *                     else:
 */
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_1, __pyx_t_2) < 0)) __PYX_ERR(0, 893, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "QSWATPlus/dataInC.pyx":894
 *                         slopeNumbers = dict()
 *                         slopeNumbers[slope] = resultHru
 *                         soilSlopeNumbers[soil] = slopeNumbers             # <<<<<<<<<<<<<<
 *                     else:
 *                         hru = slopeNumbers.get(slope, -1)
 */
          if (unlikely(__pyx_v_soilSlopeNumbers == Py_None)) {
            PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
            __PYX_ERR(0, 894, __pyx_L1_error)
          }
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (unlikely(PyDict_SetItem(__pyx_v_soilSlopeNumbers, __pyx_t_2, __pyx_v_slopeNumbers) < 0)) __PYX_ERR(0, 894, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "QSWATPlus/dataInC.pyx":889
 *                 else:
 *                     slopeNumbers = soilSlopeNumbers.get(soil, None)
 *                     if slopeNumbers is None:             # <<<<<<<<<<<<<<
 *                         # new soil for existing crop
 *                         resultHru += 1
 */
          goto __pyx_L6;
        }

        /* "QSWATPlus/dataInC.pyx":896
 *                         soilSlopeNumbers[soil] = slopeNumbers
 *                     else:
 *                         hru = slopeNumbers.get(slope, -1)             # <<<<<<<<<<<<<<
 *                         if hru < 0:
 *                             # new slope for existing crop and soil
 */
        /*else*/ {
          if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
            PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
            __PYX_ERR(0, 896, __pyx_L1_error)
          }
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyDict_GetItemDefault(__pyx_v_slopeNumbers, __pyx_t_2, __pyx_int_neg_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 896, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_hru = __pyx_t_7;

          /* "QSWATPlus/dataInC.pyx":897
 *                     else:
 *                         hru = slopeNumbers.get(slope, -1)
 *                         if hru < 0:             # <<<<<<<<<<<<<<
 *                             # new slope for existing crop and soil
 *                             resultHru += 1
 */
          __pyx_t_3 = ((__pyx_v_hru < 0) != 0);
          if (__pyx_t_3) {

            /* "QSWATPlus/dataInC.pyx":899
 *                         if hru < 0:
 *                             # new slope for existing crop and soil
 *                             resultHru += 1             # <<<<<<<<<<<<<<
 *                             slopeNumbers[slope] = resultHru
 *                         else:
 */
            __pyx_v_resultHru = (__pyx_v_resultHru + 1);

            /* "QSWATPlus/dataInC.pyx":900
 *                             # new slope for existing crop and soil
 *                             resultHru += 1
 *                             slopeNumbers[slope] = resultHru             # <<<<<<<<<<<<<<
 *                         else:
 *                             return hru
 */
            __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 900, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__pyx_v_slopeNumbers == Py_None)) {
              PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
              __PYX_ERR(0, 900, __pyx_L1_error)
            }
            __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 900, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(PyDict_SetItem(__pyx_v_slopeNumbers, __pyx_t_2, __pyx_t_1) < 0)) __PYX_ERR(0, 900, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "QSWATPlus/dataInC.pyx":897
 *                     else:
 *                         hru = slopeNumbers.get(slope, -1)
 *                         if hru < 0:             # <<<<<<<<<<<<<<
 *                             # new slope for existing crop and soil
 *                             resultHru += 1
 */
            goto __pyx_L7;
          }

          /* "QSWATPlus/dataInC.pyx":902
 *                             slopeNumbers[slope] = resultHru
 *                         else:
 *                             return hru             # <<<<<<<<<<<<<<
 *         return resultHru
 * 
 */
          /*else*/ {
            __Pyx_XDECREF(__pyx_r);
            __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_hru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_r = __pyx_t_1;
            __pyx_t_1 = 0;
            goto __pyx_L0;
          }
          __pyx_L7:;
        }
        __pyx_L6:;
      }
      __pyx_L5:;
    }
    __pyx_L4:;
  }
  __pyx_L3:;

  /* "QSWATPlus/dataInC.pyx":903
 *                         else:
 *                             return hru
 *         return resultHru             # <<<<<<<<<<<<<<
 * 
 *     cpdef void merge(self, int channel, int target):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_resultHru); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":838
 * 
 *     @staticmethod
 *     def getHruNumber(dict channelLandscapeCropSoilSlopeNumbers, int lastHru, int channel, int landscape, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to current hru count for the landscape unit)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.getHruNumber", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cropSoilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_soilSlopeNumbers);
  __Pyx_XDECREF(__pyx_v_slopeNumbers);
  __Pyx_XDECREF(__pyx_v_landscapeCropSoilSlopeNumbers);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":905
 *         return resultHru
 * 
 *     cpdef void merge(self, int channel, int target):             # <<<<<<<<<<<<<<
 *         "Merge channel into target.  Assumed both channels initially in domain of mergedLsus.  Finally only target is."
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_9merge(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_merge(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_target, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_channelData = 0;
  PyObject *__pyx_v_targetData = 0;
  int __pyx_v_landscape;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  __Pyx_RefNannySetupContext("merge", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_merge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 905, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_9merge)) {
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 905, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_target); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 905, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":914
 *             LSUData lsuData
 * 
 *         channelData = self.mergedLsus[channel]             # <<<<<<<<<<<<<<
 *         targetData = self.mergedLsus[target]
 *         for landscape, lsuData in channelData.items():
 */
  if (unlikely(__pyx_v_self->mergedLsus == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 914, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->mergedLsus, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 914, __pyx_L1_error)
  __pyx_v_channelData = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":915
 * 
 *         channelData = self.mergedLsus[channel]
 *         targetData = self.mergedLsus[target]             # <<<<<<<<<<<<<<
 *         for landscape, lsuData in channelData.items():
 *             if landscape in targetData:
 */
  if (unlikely(__pyx_v_self->mergedLsus == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 915, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_target); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->mergedLsus, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 915, __pyx_L1_error)
  __pyx_v_targetData = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":916
 *         channelData = self.mergedLsus[channel]
 *         targetData = self.mergedLsus[target]
 *         for landscape, lsuData in channelData.items():             # <<<<<<<<<<<<<<
 *             if landscape in targetData:
 *                 targetData[landscape].merge(lsuData)
 */
  __pyx_t_9 = 0;
  if (unlikely(__pyx_v_channelData == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 916, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_7)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_10, &__pyx_t_9, &__pyx_t_2, &__pyx_t_5, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_11 == 0)) break;
    if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 916, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 916, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 916, __pyx_L1_error)
    __pyx_v_landscape = __pyx_t_11;
    __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "QSWATPlus/dataInC.pyx":917
 *         targetData = self.mergedLsus[target]
 *         for landscape, lsuData in channelData.items():
 *             if landscape in targetData:             # <<<<<<<<<<<<<<
 *                 targetData[landscape].merge(lsuData)
 *             else:
 */
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 917, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__pyx_v_targetData == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 917, __pyx_L1_error)
    }
    __pyx_t_12 = (__Pyx_PyDict_ContainsTF(__pyx_t_5, __pyx_v_targetData, Py_EQ)); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 917, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_13 = (__pyx_t_12 != 0);
    if (__pyx_t_13) {

      /* "QSWATPlus/dataInC.pyx":918
 *         for landscape, lsuData in channelData.items():
 *             if landscape in targetData:
 *                 targetData[landscape].merge(lsuData)             # <<<<<<<<<<<<<<
 *             else:
 *                 targetData[landscape] = lsuData
 */
      if (unlikely(__pyx_v_targetData == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 918, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = __Pyx_PyDict_GetItem(__pyx_v_targetData, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_merge); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_8, ((PyObject *)__pyx_v_lsuData)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_lsuData));
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "QSWATPlus/dataInC.pyx":917
 *         targetData = self.mergedLsus[target]
 *         for landscape, lsuData in channelData.items():
 *             if landscape in targetData:             # <<<<<<<<<<<<<<
 *                 targetData[landscape].merge(lsuData)
 *             else:
 */
      goto __pyx_L5;
    }

    /* "QSWATPlus/dataInC.pyx":920
 *                 targetData[landscape].merge(lsuData)
 *             else:
 *                 targetData[landscape] = lsuData             # <<<<<<<<<<<<<<
 *         del self.mergedLsus[channel]
 * 
 */
    /*else*/ {
      if (unlikely(__pyx_v_targetData == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 920, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_landscape); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 920, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(PyDict_SetItem(__pyx_v_targetData, __pyx_t_5, ((PyObject *)__pyx_v_lsuData)) < 0)) __PYX_ERR(0, 920, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __pyx_L5:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":921
 *             else:
 *                 targetData[landscape] = lsuData
 *         del self.mergedLsus[channel]             # <<<<<<<<<<<<<<
 * 
 *     cpdef void setAreas(self, bint isOriginal, list chLinksByLakes, int waterLanduse):
 */
  if (unlikely(__pyx_v_self->mergedLsus == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 921, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_DelItem(__pyx_v_self->mergedLsus, __pyx_t_1) < 0)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":905
 *         return resultHru
 * 
 *     cpdef void merge(self, int channel, int target):             # <<<<<<<<<<<<<<
 *         "Merge channel into target.  Assumed both channels initially in domain of mergedLsus.  Finally only target is."
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.merge", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF(__pyx_v_targetData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_9merge(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_8merge[] = "Merge channel into target.  Assumed both channels initially in domain of mergedLsus.  Finally only target is.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_9merge(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_channel;
  int __pyx_v_target;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("merge (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_channel,&__pyx_n_s_target,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_channel)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_target)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("merge", 1, 2, 2, 1); __PYX_ERR(0, 905, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "merge") < 0)) __PYX_ERR(0, 905, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_channel = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_channel == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 905, __pyx_L3_error)
    __pyx_v_target = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_target == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 905, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("merge", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 905, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.merge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_8merge(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), __pyx_v_channel, __pyx_v_target);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_8merge(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_channel, int __pyx_v_target) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("merge", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9BasinData_merge(__pyx_v_self, __pyx_v_channel, __pyx_v_target, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.merge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":923
 *         del self.mergedLsus[channel]
 * 
 *     cpdef void setAreas(self, bint isOriginal, list chLinksByLakes, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Set area maps for crop, soil and slope."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11setAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_setAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  PyObject *__pyx_v_chLink = NULL;
  PyObject *__pyx_v_lscape = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  __Pyx_RefNannySetupContext("setAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 923, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11setAreas)) {
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 923, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_waterLanduse); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 923, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_v_chLinksByLakes, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_6, __pyx_t_3, __pyx_v_chLinksByLakes, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_INCREF(__pyx_v_chLinksByLakes);
          __Pyx_GIVEREF(__pyx_v_chLinksByLakes);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_chLinksByLakes);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":930
 *             LSUData lsuData
 * 
 *         for chLink, channelData in self.getLsus().items():             # <<<<<<<<<<<<<<
 *             for lscape, lsuData in channelData.items():
 *                 if isOriginal:
 */
  __pyx_t_9 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 930, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_10, &__pyx_t_9, &__pyx_t_5, &__pyx_t_2, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_11 == 0)) break;
    if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_chLink, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "QSWATPlus/dataInC.pyx":931
 * 
 *         for chLink, channelData in self.getLsus().items():
 *             for lscape, lsuData in channelData.items():             # <<<<<<<<<<<<<<
 *                 if isOriginal:
 *                     # nodata area is included in final areas: need to add to original
 */
    __pyx_t_12 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 931, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_items, (&__pyx_t_13), (&__pyx_t_11)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_5;
    __pyx_t_5 = 0;
    while (1) {
      __pyx_t_14 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_13, &__pyx_t_12, &__pyx_t_5, &__pyx_t_8, NULL, __pyx_t_11);
      if (unlikely(__pyx_t_14 == 0)) break;
      if (unlikely(__pyx_t_14 == -1)) __PYX_ERR(0, 931, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_8);
      if (!(likely(((__pyx_t_8) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_8, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 931, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lscape, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_8));
      __pyx_t_8 = 0;

      /* "QSWATPlus/dataInC.pyx":932
 *         for chLink, channelData in self.getLsus().items():
 *             for lscape, lsuData in channelData.items():
 *                 if isOriginal:             # <<<<<<<<<<<<<<
 *                     # nodata area is included in final areas: need to add to original
 *                     # so final and original tally
 */
      __pyx_t_15 = (__pyx_v_isOriginal != 0);
      if (__pyx_t_15) {

        /* "QSWATPlus/dataInC.pyx":936
 *                     # so final and original tally
 *                     # also remove water bodies that should be incorporated into lakes
 *                     lsuData.redistributeNodataAndWater(chLink, lscape, chLinksByLakes, waterLanduse)             # <<<<<<<<<<<<<<
 *                     # remove WATR HRUs if the LSU's water body is a reservoir or pond
 *                     # if lsuData.waterBody is not None and not lsuData.waterBody.isUnknown():
 */
        __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_v_chLink); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L1_error)
        __pyx_t_16 = __Pyx_PyInt_As_int(__pyx_v_lscape); if (unlikely((__pyx_t_16 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L1_error)
        ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->redistributeNodataAndWater(__pyx_v_lsuData, __pyx_t_14, __pyx_t_16, __pyx_v_chLinksByLakes, __pyx_v_waterLanduse, 0);

        /* "QSWATPlus/dataInC.pyx":932
 *         for chLink, channelData in self.getLsus().items():
 *             for lscape, lsuData in channelData.items():
 *                 if isOriginal:             # <<<<<<<<<<<<<<
 *                     # nodata area is included in final areas: need to add to original
 *                     # so final and original tally
 */
      }

      /* "QSWATPlus/dataInC.pyx":940
 *                     # if lsuData.waterBody is not None and not lsuData.waterBody.isUnknown():
 *                     #     lsuData.removeWaterHRUs(waterLanduse)
 *                 lsuData.setCropAreas(isOriginal)             # <<<<<<<<<<<<<<
 *                 lsuData.setSoilAreas(isOriginal)
 *                 lsuData.setSlopeAreas(isOriginal)
 */
      ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->setCropAreas(__pyx_v_lsuData, __pyx_v_isOriginal, 0);

      /* "QSWATPlus/dataInC.pyx":941
 *                     #     lsuData.removeWaterHRUs(waterLanduse)
 *                 lsuData.setCropAreas(isOriginal)
 *                 lsuData.setSoilAreas(isOriginal)             # <<<<<<<<<<<<<<
 *                 lsuData.setSlopeAreas(isOriginal)
 * 
 */
      ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->setSoilAreas(__pyx_v_lsuData, __pyx_v_isOriginal, 0);

      /* "QSWATPlus/dataInC.pyx":942
 *                 lsuData.setCropAreas(isOriginal)
 *                 lsuData.setSoilAreas(isOriginal)
 *                 lsuData.setSlopeAreas(isOriginal)             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict cropAreas(self, bint isOriginal):
 */
      ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->setSlopeAreas(__pyx_v_lsuData, __pyx_v_isOriginal, 0);
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":923
 *         del self.mergedLsus[channel]
 * 
 *     cpdef void setAreas(self, bint isOriginal, list chLinksByLakes, int waterLanduse):             # <<<<<<<<<<<<<<
 *         """Set area maps for crop, soil and slope."""
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.setAreas", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XDECREF(__pyx_v_chLink);
  __Pyx_XDECREF(__pyx_v_lscape);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11setAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_10setAreas[] = "Set area maps for crop, soil and slope.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11setAreas(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_v_chLinksByLakes = 0;
  int __pyx_v_waterLanduse;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAreas (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_isOriginal,&__pyx_n_s_chLinksByLakes,&__pyx_n_s_waterLanduse,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_isOriginal)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chLinksByLakes)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setAreas", 1, 3, 3, 1); __PYX_ERR(0, 923, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterLanduse)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setAreas", 1, 3, 3, 2); __PYX_ERR(0, 923, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setAreas") < 0)) __PYX_ERR(0, 923, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(values[0]); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_chLinksByLakes = ((PyObject*)values[1]);
    __pyx_v_waterLanduse = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_waterLanduse == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setAreas", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 923, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.setAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_chLinksByLakes), (&PyList_Type), 1, "chLinksByLakes", 1))) __PYX_ERR(0, 923, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10setAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), __pyx_v_isOriginal, __pyx_v_chLinksByLakes, __pyx_v_waterLanduse);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_10setAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, PyObject *__pyx_v_chLinksByLakes, int __pyx_v_waterLanduse) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9BasinData_setAreas(__pyx_v_self, __pyx_v_isOriginal, __pyx_v_chLinksByLakes, __pyx_v_waterLanduse, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 923, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.setAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":944
 *                 lsuData.setSlopeAreas(isOriginal)
 * 
 *     cpdef dict cropAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of crop to area in square metres across subbasin, before HRU calculation if isOriginal."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_13cropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_cropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  PyObject *__pyx_v_cropAreas = 0;
  int __pyx_v_crop;
  double __pyx_v_area;
  double __pyx_v_cropArea;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  int __pyx_t_15;
  double __pyx_t_16;
  __Pyx_RefNannySetupContext("cropAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cropAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 944, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_13cropAreas)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 944, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 944, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 944, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":948
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":956
 *             double cropArea
 * 
 *         for channelData in self.getLsus().itervalues():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.itervalues():
 *                 cropAreas = lsuData.originalCropAreas if isOriginal else lsuData.cropAreas
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "itervalues");
    __PYX_ERR(0, 956, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_itervalues, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_4;
  __pyx_t_4 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_4, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!(likely(PyDict_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 956, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":957
 * 
 *         for channelData in self.getLsus().itervalues():
 *             for lsuData in channelData.itervalues():             # <<<<<<<<<<<<<<
 *                 cropAreas = lsuData.originalCropAreas if isOriginal else lsuData.cropAreas
 *                 for crop, area in cropAreas.items():
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "itervalues");
      __PYX_ERR(0, 957, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_itervalues, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 957, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 957, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":958
 *         for channelData in self.getLsus().itervalues():
 *             for lsuData in channelData.itervalues():
 *                 cropAreas = lsuData.originalCropAreas if isOriginal else lsuData.cropAreas             # <<<<<<<<<<<<<<
 *                 for crop, area in cropAreas.items():
 *                     cropArea = result.get(crop, 0)
 */
      if ((__pyx_v_isOriginal != 0)) {
        __Pyx_INCREF(__pyx_v_lsuData->originalCropAreas);
        __pyx_t_2 = __pyx_v_lsuData->originalCropAreas;
      } else {
        __Pyx_INCREF(__pyx_v_lsuData->cropAreas);
        __pyx_t_2 = __pyx_v_lsuData->cropAreas;
      }
      __Pyx_XDECREF_SET(__pyx_v_cropAreas, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":959
 *             for lsuData in channelData.itervalues():
 *                 cropAreas = lsuData.originalCropAreas if isOriginal else lsuData.cropAreas
 *                 for crop, area in cropAreas.items():             # <<<<<<<<<<<<<<
 *                     cropArea = result.get(crop, 0)
 *                     result[crop] = cropArea + area
 */
      __pyx_t_13 = 0;
      if (unlikely(__pyx_v_cropAreas == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 959, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_cropAreas, 1, __pyx_n_s_items, (&__pyx_t_14), (&__pyx_t_12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_3;
      __pyx_t_3 = 0;
      while (1) {
        __pyx_t_15 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_14, &__pyx_t_13, &__pyx_t_3, &__pyx_t_5, NULL, __pyx_t_12);
        if (unlikely(__pyx_t_15 == 0)) break;
        if (unlikely(__pyx_t_15 == -1)) __PYX_ERR(0, 959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 959, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 959, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_crop = __pyx_t_15;
        __pyx_v_area = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":960
 *                 cropAreas = lsuData.originalCropAreas if isOriginal else lsuData.cropAreas
 *                 for crop, area in cropAreas.items():
 *                     cropArea = result.get(crop, 0)             # <<<<<<<<<<<<<<
 *                     result[crop] = cropArea + area
 *         return result
 */
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_result, __pyx_t_5, __pyx_int_0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_v_cropArea = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":961
 *                 for crop, area in cropAreas.items():
 *                     cropArea = result.get(crop, 0)
 *                     result[crop] = cropArea + area             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
        __pyx_t_3 = PyFloat_FromDouble((__pyx_v_cropArea + __pyx_v_area)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_crop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_5, __pyx_t_3) < 0)) __PYX_ERR(0, 961, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":962
 *                     cropArea = result.get(crop, 0)
 *                     result[crop] = cropArea + area
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict soilAreas(self, bint isOriginal):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":944
 *                 lsuData.setSlopeAreas(isOriginal)
 * 
 *     cpdef dict cropAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of crop to area in square metres across subbasin, before HRU calculation if isOriginal."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.cropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XDECREF(__pyx_v_cropAreas);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_13cropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_12cropAreas[] = "Return map of crop to area in square metres across subbasin, before HRU calculation if isOriginal.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_13cropAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cropAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 944, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.cropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12cropAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12cropAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cropAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_9BasinData_cropAreas(__pyx_v_self, __pyx_v_isOriginal, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.cropAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":964
 *         return result
 * 
 *     cpdef dict soilAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of soil to area in square metres across subbasin, before HRIU calculation if isOriginal."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_15soilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_soilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  PyObject *__pyx_v_soilAreas = 0;
  int __pyx_v_soil;
  double __pyx_v_area;
  double __pyx_v_soilArea;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  int __pyx_t_15;
  double __pyx_t_16;
  __Pyx_RefNannySetupContext("soilAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_soilAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_15soilAreas)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 964, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 964, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 964, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":968
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":976
 *             double soilArea
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 soilAreas = lsuData.originalSoilAreas if isOriginal else lsuData.soilAreas
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 976, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_4;
  __pyx_t_4 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_4, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!(likely(PyDict_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":977
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 soilAreas = lsuData.originalSoilAreas if isOriginal else lsuData.soilAreas
 *                 for soil, area in soilAreas.items():
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 977, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 977, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 977, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 977, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":978
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 soilAreas = lsuData.originalSoilAreas if isOriginal else lsuData.soilAreas             # <<<<<<<<<<<<<<
 *                 for soil, area in soilAreas.items():
 *                     soilArea = result.get(soil, 0)
 */
      if ((__pyx_v_isOriginal != 0)) {
        __Pyx_INCREF(__pyx_v_lsuData->originalSoilAreas);
        __pyx_t_2 = __pyx_v_lsuData->originalSoilAreas;
      } else {
        __Pyx_INCREF(__pyx_v_lsuData->soilAreas);
        __pyx_t_2 = __pyx_v_lsuData->soilAreas;
      }
      __Pyx_XDECREF_SET(__pyx_v_soilAreas, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":979
 *             for lsuData in channelData.values():
 *                 soilAreas = lsuData.originalSoilAreas if isOriginal else lsuData.soilAreas
 *                 for soil, area in soilAreas.items():             # <<<<<<<<<<<<<<
 *                     soilArea = result.get(soil, 0)
 *                     result[soil] = soilArea + area
 */
      __pyx_t_13 = 0;
      if (unlikely(__pyx_v_soilAreas == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 979, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_soilAreas, 1, __pyx_n_s_items, (&__pyx_t_14), (&__pyx_t_12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 979, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_3;
      __pyx_t_3 = 0;
      while (1) {
        __pyx_t_15 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_14, &__pyx_t_13, &__pyx_t_3, &__pyx_t_5, NULL, __pyx_t_12);
        if (unlikely(__pyx_t_15 == 0)) break;
        if (unlikely(__pyx_t_15 == -1)) __PYX_ERR(0, 979, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 979, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 979, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_soil = __pyx_t_15;
        __pyx_v_area = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":980
 *                 soilAreas = lsuData.originalSoilAreas if isOriginal else lsuData.soilAreas
 *                 for soil, area in soilAreas.items():
 *                     soilArea = result.get(soil, 0)             # <<<<<<<<<<<<<<
 *                     result[soil] = soilArea + area
 *         return result
 */
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_result, __pyx_t_5, __pyx_int_0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 980, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_v_soilArea = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":981
 *                 for soil, area in soilAreas.items():
 *                     soilArea = result.get(soil, 0)
 *                     result[soil] = soilArea + area             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
        __pyx_t_3 = PyFloat_FromDouble((__pyx_v_soilArea + __pyx_v_area)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 981, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_soil); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 981, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_5, __pyx_t_3) < 0)) __PYX_ERR(0, 981, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":982
 *                     soilArea = result.get(soil, 0)
 *                     result[soil] = soilArea + area
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cpdef dict slopeAreas(self, bint isOriginal):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":964
 *         return result
 * 
 *     cpdef dict soilAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of soil to area in square metres across subbasin, before HRIU calculation if isOriginal."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.soilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XDECREF(__pyx_v_soilAreas);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_15soilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_14soilAreas[] = "Return map of soil to area in square metres across subbasin, before HRIU calculation if isOriginal.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_15soilAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("soilAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.soilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_14soilAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_14soilAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("soilAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_9BasinData_soilAreas(__pyx_v_self, __pyx_v_isOriginal, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.soilAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":984
 *         return result
 * 
 *     cpdef dict slopeAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of slope to area in square metres across subbasin, before HRU calculation if isOriginal."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_17slopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static PyObject *__pyx_f_9QSWATPlus_7dataInC_9BasinData_slopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  PyObject *__pyx_v_slopeAreas = 0;
  int __pyx_v_slope;
  double __pyx_v_area;
  double __pyx_v_slopeArea;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  int __pyx_t_15;
  double __pyx_t_16;
  __Pyx_RefNannySetupContext("slopeAreas", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_slopeAreas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 984, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_17slopeAreas)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_isOriginal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 984, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 984, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (!(likely(PyDict_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 984, __pyx_L1_error)
        __pyx_r = ((PyObject*)__pyx_t_2);
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":988
 * 
 *         cdef:
 *             dict result = dict()             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 988, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":996
 *             double slopeArea
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 slopeAreas = lsuData.originalSlopeAreas if isOriginal else lsuData.slopeAreas
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 996, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_4;
  __pyx_t_4 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_4, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 996, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!(likely(PyDict_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(0, 996, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "QSWATPlus/dataInC.pyx":997
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 slopeAreas = lsuData.originalSlopeAreas if isOriginal else lsuData.slopeAreas
 *                 for slope, area in slopeAreas.items():
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 997, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4);
    __pyx_t_4 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_4, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 997, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 997, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":998
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 slopeAreas = lsuData.originalSlopeAreas if isOriginal else lsuData.slopeAreas             # <<<<<<<<<<<<<<
 *                 for slope, area in slopeAreas.items():
 *                     slopeArea = result.get(slope, 0)
 */
      if ((__pyx_v_isOriginal != 0)) {
        __Pyx_INCREF(__pyx_v_lsuData->originalSlopeAreas);
        __pyx_t_2 = __pyx_v_lsuData->originalSlopeAreas;
      } else {
        __Pyx_INCREF(__pyx_v_lsuData->slopeAreas);
        __pyx_t_2 = __pyx_v_lsuData->slopeAreas;
      }
      __Pyx_XDECREF_SET(__pyx_v_slopeAreas, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":999
 *             for lsuData in channelData.values():
 *                 slopeAreas = lsuData.originalSlopeAreas if isOriginal else lsuData.slopeAreas
 *                 for slope, area in slopeAreas.items():             # <<<<<<<<<<<<<<
 *                     slopeArea = result.get(slope, 0)
 *                     result[slope] = slopeArea + area
 */
      __pyx_t_13 = 0;
      if (unlikely(__pyx_v_slopeAreas == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
        __PYX_ERR(0, 999, __pyx_L1_error)
      }
      __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_slopeAreas, 1, __pyx_n_s_items, (&__pyx_t_14), (&__pyx_t_12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 999, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_3;
      __pyx_t_3 = 0;
      while (1) {
        __pyx_t_15 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_14, &__pyx_t_13, &__pyx_t_3, &__pyx_t_5, NULL, __pyx_t_12);
        if (unlikely(__pyx_t_15 == 0)) break;
        if (unlikely(__pyx_t_15 == -1)) __PYX_ERR(0, 999, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_slope = __pyx_t_15;
        __pyx_v_area = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":1000
 *                 slopeAreas = lsuData.originalSlopeAreas if isOriginal else lsuData.slopeAreas
 *                 for slope, area in slopeAreas.items():
 *                     slopeArea = result.get(slope, 0)             # <<<<<<<<<<<<<<
 *                     result[slope] = slopeArea + area
 *         return result
 */
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_result, __pyx_t_5, __pyx_int_0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_v_slopeArea = __pyx_t_16;

        /* "QSWATPlus/dataInC.pyx":1001
 *                 for slope, area in slopeAreas.items():
 *                     slopeArea = result.get(slope, 0)
 *                     result[slope] = slopeArea + area             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
        __pyx_t_3 = PyFloat_FromDouble((__pyx_v_slopeArea + __pyx_v_area)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1001, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_slope); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1001, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(PyDict_SetItem(__pyx_v_result, __pyx_t_5, __pyx_t_3) < 0)) __PYX_ERR(0, 1001, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1002
 *                     slopeArea = result.get(slope, 0)
 *                     result[slope] = slopeArea + area
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     cpdef int subbasinCellCount(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":984
 *         return result
 * 
 *     cpdef dict slopeAreas(self, bint isOriginal):             # <<<<<<<<<<<<<<
 *         """Return map of slope to area in square metres across subbasin, before HRU calculation if isOriginal."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.slopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XDECREF(__pyx_v_slopeAreas);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_17slopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_16slopeAreas[] = "Return map of slope to area in square metres across subbasin, before HRU calculation if isOriginal.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_17slopeAreas(PyObject *__pyx_v_self, PyObject *__pyx_arg_isOriginal) {
  int __pyx_v_isOriginal;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("slopeAreas (wrapper)", 0);
  assert(__pyx_arg_isOriginal); {
    __pyx_v_isOriginal = __Pyx_PyObject_IsTrue(__pyx_arg_isOriginal); if (unlikely((__pyx_v_isOriginal == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 984, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.slopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_16slopeAreas(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((int)__pyx_v_isOriginal));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_16slopeAreas(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_v_isOriginal) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("slopeAreas", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC_9BasinData_slopeAreas(__pyx_v_self, __pyx_v_isOriginal, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 984, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.slopeAreas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1004
 *         return result
 * 
 *     cpdef int subbasinCellCount(self):             # <<<<<<<<<<<<<<
 *         """Return total cell count of all landscape units in the subbasin."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_19subbasinCellCount(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinCellCount(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_count;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("subbasinCellCount", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_subbasinCellCount); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1004, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_19subbasinCellCount)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1008
 * 
 *         cdef:
 *             int count = 0             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_v_count = 0;

  /* "QSWATPlus/dataInC.pyx":1012
 *             LSUData lsuData
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 count += lsuData.cellCount
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1012, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_5)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_3, NULL, __pyx_t_5);
    if (unlikely(__pyx_t_8 == 0)) break;
    if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1013
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 count += lsuData.cellCount
 *         return count
 */
    __pyx_t_9 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 1013, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_10), (&__pyx_t_8)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1013, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_10, &__pyx_t_9, NULL, &__pyx_t_2, NULL, __pyx_t_8);
      if (unlikely(__pyx_t_11 == 0)) break;
      if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 1013, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1013, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":1014
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 count += lsuData.cellCount             # <<<<<<<<<<<<<<
 *         return count
 * 
 */
      __pyx_v_count = (__pyx_v_count + __pyx_v_lsuData->cellCount);
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1015
 *             for lsuData in channelData.values():
 *                 count += lsuData.cellCount
 *         return count             # <<<<<<<<<<<<<<
 * 
 *     cpdef double subbasinArea(self):
 */
  __pyx_r = __pyx_v_count;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1004
 *         return result
 * 
 *     cpdef int subbasinCellCount(self):             # <<<<<<<<<<<<<<
 *         """Return total cell count of all landscape units in the subbasin."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.subbasinCellCount", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_19subbasinCellCount(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_18subbasinCellCount[] = "Return total cell count of all landscape units in the subbasin.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_19subbasinCellCount(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("subbasinCellCount (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_18subbasinCellCount(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_18subbasinCellCount(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("subbasinCellCount", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinCellCount(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.subbasinCellCount", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1017
 *         return count
 * 
 *     cpdef double subbasinArea(self):             # <<<<<<<<<<<<<<
 *         """Return total area of the subbasin (land and water) in square metres."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_21subbasinArea(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinArea(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_v_area;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("subbasinArea", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_subbasinArea); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_21subbasinArea)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1017, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1017, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1021
 * 
 *         cdef:
 *             double area = 0             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_v_area = 0.0;

  /* "QSWATPlus/dataInC.pyx":1025
 *             LSUData lsuData
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 area += lsuData.area
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1025, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_3, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 1025, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 1025, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1026
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 area += lsuData.area
 *         return area
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 1026, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 1026, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1026, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":1027
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 area += lsuData.area             # <<<<<<<<<<<<<<
 *         return area
 * 
 */
      __pyx_v_area = (__pyx_v_area + __pyx_v_lsuData->area);
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1028
 *             for lsuData in channelData.values():
 *                 area += lsuData.area
 *         return area             # <<<<<<<<<<<<<<
 * 
 *     cpdef double totalElevation(self):
 */
  __pyx_r = __pyx_v_area;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1017
 *         return count
 * 
 *     cpdef double subbasinArea(self):             # <<<<<<<<<<<<<<
 *         """Return total area of the subbasin (land and water) in square metres."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.subbasinArea", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_21subbasinArea(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_20subbasinArea[] = "Return total area of the subbasin (land and water) in square metres.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_21subbasinArea(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("subbasinArea (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_20subbasinArea(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_20subbasinArea(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("subbasinArea", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinArea(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.subbasinArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1030
 *         return area
 * 
 *     cpdef double totalElevation(self):             # <<<<<<<<<<<<<<
 *         """Total elevation of all pixels in subbasin."""
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_23totalElevation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_totalElevation(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_v_totalEl;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("totalElevation", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_totalElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_23totalElevation)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1030, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1030, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1033
 *         """Total elevation of all pixels in subbasin."""
 *         cdef:
 *             double totalEl = 0             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_v_totalEl = 0.0;

  /* "QSWATPlus/dataInC.pyx":1037
 *             LSUData lsuData
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 totalEl += lsuData.totalElevation
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1037, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_3, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 1037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 1037, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1038
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 totalEl += lsuData.totalElevation
 *         return totalEl
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 1038, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1038, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 1038, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1038, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":1039
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 totalEl += lsuData.totalElevation             # <<<<<<<<<<<<<<
 *         return totalEl
 * 
 */
      __pyx_v_totalEl = (__pyx_v_totalEl + __pyx_v_lsuData->totalElevation);
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1040
 *             for lsuData in channelData.values():
 *                 totalEl += lsuData.totalElevation
 *         return totalEl             # <<<<<<<<<<<<<<
 * 
 *     cpdef double totalSlope(self):
 */
  __pyx_r = __pyx_v_totalEl;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1030
 *         return area
 * 
 *     cpdef double totalElevation(self):             # <<<<<<<<<<<<<<
 *         """Total elevation of all pixels in subbasin."""
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.totalElevation", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_23totalElevation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_22totalElevation[] = "Total elevation of all pixels in subbasin.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_23totalElevation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("totalElevation (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_22totalElevation(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_22totalElevation(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("totalElevation", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_9QSWATPlus_7dataInC_9BasinData_totalElevation(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.totalElevation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1042
 *         return totalEl
 * 
 *     cpdef double totalSlope(self):             # <<<<<<<<<<<<<<
 *         """Total slope of all pixels in subbasin."""
 *         cdef:
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_25totalSlope(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_9QSWATPlus_7dataInC_9BasinData_totalSlope(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_v_totalSl;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("totalSlope", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_totalSlope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_25totalSlope)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_r = __pyx_t_5;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1045
 *         """Total slope of all pixels in subbasin."""
 *         cdef:
 *             double totalSl = 0             # <<<<<<<<<<<<<<
 *             dict channelData
 *             LSUData lsuData
 */
  __pyx_v_totalSl = 0.0;

  /* "QSWATPlus/dataInC.pyx":1049
 *             LSUData lsuData
 * 
 *         for channelData in self.getLsus().values():             # <<<<<<<<<<<<<<
 *             for lsuData in channelData.values():
 *                 totalSl += lsuData.totalSlope
 */
  __pyx_t_6 = 0;
  __pyx_t_2 = ((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self->__pyx_vtab)->getLsus(__pyx_v_self, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_t_2 == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1049, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_t_2, 1, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_8)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_3, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_9 == 0)) break;
    if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1050
 * 
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *                 totalSl += lsuData.totalSlope
 *         return totalSl
 */
    __pyx_t_10 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 1050, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_11), (&__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_12 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_11, &__pyx_t_10, NULL, &__pyx_t_2, NULL, __pyx_t_9);
      if (unlikely(__pyx_t_12 == 0)) break;
      if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 1050, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1050, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "QSWATPlus/dataInC.pyx":1051
 *         for channelData in self.getLsus().values():
 *             for lsuData in channelData.values():
 *                 totalSl += lsuData.totalSlope             # <<<<<<<<<<<<<<
 *         return totalSl
 * 
 */
      __pyx_v_totalSl = (__pyx_v_totalSl + __pyx_v_lsuData->totalSlope);
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1052
 *             for lsuData in channelData.values():
 *                 totalSl += lsuData.totalSlope
 *         return totalSl             # <<<<<<<<<<<<<<
 * 
 *     cpdef void copyLsus(self):
 */
  __pyx_r = __pyx_v_totalSl;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1042
 *         return totalEl
 * 
 *     cpdef double totalSlope(self):             # <<<<<<<<<<<<<<
 *         """Total slope of all pixels in subbasin."""
 *         cdef:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.totalSlope", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_25totalSlope(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_24totalSlope[] = "Total slope of all pixels in subbasin.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_25totalSlope(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("totalSlope (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_24totalSlope(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_24totalSlope(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("totalSlope", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_9QSWATPlus_7dataInC_9BasinData_totalSlope(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.totalSlope", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1054
 *         return totalSl
 * 
 *     cpdef void copyLsus(self):             # <<<<<<<<<<<<<<
 *         """Make deep copy mergedLsus of lsus.  deepcopy in copy module does not do this adequately."""
 * 
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_27copyLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_9BasinData_copyLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_channel;
  int __pyx_v_landscape;
  PyObject *__pyx_v_channelData = 0;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("copyLsus", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_copyLsus); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_27copyLsus)) {
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1054, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1063
 *             LSUData lsuData
 * 
 *         self.mergedLsus = dict()             # <<<<<<<<<<<<<<
 *         for channel, channelData in self.lsus.items():
 *             self.mergedLsus[channel] = dict()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1063, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mergedLsus);
  __Pyx_DECREF(__pyx_v_self->mergedLsus);
  __pyx_v_self->mergedLsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1064
 * 
 *         self.mergedLsus = dict()
 *         for channel, channelData in self.lsus.items():             # <<<<<<<<<<<<<<
 *             self.mergedLsus[channel] = dict()
 *             for landscape, lsuData in channelData.items():
 */
  __pyx_t_5 = 0;
  if (unlikely(__pyx_v_self->lsus == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 1064, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_self->lsus, 1, __pyx_n_s_items, (&__pyx_t_6), (&__pyx_t_7)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_2;
  __pyx_t_2 = 0;
  while (1) {
    __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_6, &__pyx_t_5, &__pyx_t_2, &__pyx_t_3, NULL, __pyx_t_7);
    if (unlikely(__pyx_t_8 == 0)) break;
    if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(0, 1064, __pyx_L1_error)
    __pyx_v_channel = __pyx_t_8;
    __Pyx_XDECREF_SET(__pyx_v_channelData, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1065
 *         self.mergedLsus = dict()
 *         for channel, channelData in self.lsus.items():
 *             self.mergedLsus[channel] = dict()             # <<<<<<<<<<<<<<
 *             for landscape, lsuData in channelData.items():
 *                 self.mergedLsus[channel][landscape] = lsuData.copy()
 */
    __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(__pyx_v_self->mergedLsus == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 1065, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(PyDict_SetItem(__pyx_v_self->mergedLsus, __pyx_t_2, __pyx_t_3) < 0)) __PYX_ERR(0, 1065, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "QSWATPlus/dataInC.pyx":1066
 *         for channel, channelData in self.lsus.items():
 *             self.mergedLsus[channel] = dict()
 *             for landscape, lsuData in channelData.items():             # <<<<<<<<<<<<<<
 *                 self.mergedLsus[channel][landscape] = lsuData.copy()
 * 
 */
    __pyx_t_9 = 0;
    if (unlikely(__pyx_v_channelData == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 1066, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_8)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_3, __pyx_t_10, &__pyx_t_9, &__pyx_t_2, &__pyx_t_4, NULL, __pyx_t_8);
      if (unlikely(__pyx_t_11 == 0)) break;
      if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 1066, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1066, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1066, __pyx_L1_error)
      __pyx_v_landscape = __pyx_t_11;
      __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_4));
      __pyx_t_4 = 0;

      /* "QSWATPlus/dataInC.pyx":1067
 *             self.mergedLsus[channel] = dict()
 *             for landscape, lsuData in channelData.items():
 *                 self.mergedLsus[channel][landscape] = lsuData.copy()             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
      __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData *)__pyx_v_lsuData->__pyx_vtab)->copy(__pyx_v_lsuData, 0)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1067, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(__pyx_v_self->mergedLsus == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1067, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_channel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1067, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_12 = __Pyx_PyDict_GetItem(__pyx_v_self->mergedLsus, __pyx_t_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1067, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(__Pyx_SetItemInt(__pyx_t_12, __pyx_v_landscape, __pyx_t_4, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(0, 1067, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1054
 *         return totalSl
 * 
 *     cpdef void copyLsus(self):             # <<<<<<<<<<<<<<
 *         """Make deep copy mergedLsus of lsus.  deepcopy in copy module does not do this adequately."""
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.BasinData.copyLsus", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_channelData);
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_27copyLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_26copyLsus[] = "Make deep copy mergedLsus of lsus.  deepcopy in copy module does not do this adequately.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_27copyLsus(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copyLsus (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_26copyLsus(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_26copyLsus(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("copyLsus", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_9BasinData_copyLsus(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.copyLsus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1070
 * 
 *     @staticmethod
 *     def channelArea(dict channelData):             # <<<<<<<<<<<<<<
 *         """Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units."""
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_29channelArea(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_28channelArea[] = "Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units.";
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_9BasinData_29channelArea = {"channelArea", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_29channelArea, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_28channelArea};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_29channelArea(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_channelData = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("channelArea (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_channelData,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_channelData)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "channelArea") < 0)) __PYX_ERR(0, 1070, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_channelData = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("channelArea", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1070, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.channelArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_channelData), (&PyDict_Type), 1, "channelData", 1))) __PYX_ERR(0, 1070, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_28channelArea(__pyx_v_channelData);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_28channelArea(PyObject *__pyx_v_channelData) {
  double __pyx_v_areaCh;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v_lsuData = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("channelArea", 0);

  /* "QSWATPlus/dataInC.pyx":1074
 * 
 *         cdef:
 *             double areaCh = 0             # <<<<<<<<<<<<<<
 *             LSUData lsuData
 * 
 */
  __pyx_v_areaCh = 0.0;

  /* "QSWATPlus/dataInC.pyx":1077
 *             LSUData lsuData
 * 
 *         for lsuData in channelData.values():             # <<<<<<<<<<<<<<
 *             areaCh += lsuData.area
 *         return areaCh
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_channelData == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
    __PYX_ERR(0, 1077, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_channelData, 1, __pyx_n_s_values, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_6 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, NULL, &__pyx_t_5, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_6 == 0)) break;
    if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 1077, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_9QSWATPlus_7dataInC_LSUData))))) __PYX_ERR(0, 1077, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_lsuData, ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "QSWATPlus/dataInC.pyx":1078
 * 
 *         for lsuData in channelData.values():
 *             areaCh += lsuData.area             # <<<<<<<<<<<<<<
 *         return areaCh
 * 
 */
    __pyx_v_areaCh = (__pyx_v_areaCh + __pyx_v_lsuData->area);
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1079
 *         for lsuData in channelData.values():
 *             areaCh += lsuData.area
 *         return areaCh             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_areaCh); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1079, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1070
 * 
 *     @staticmethod
 *     def channelArea(dict channelData):             # <<<<<<<<<<<<<<
 *         """Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units."""
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.channelArea", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_lsuData);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1082
 * 
 *     @staticmethod
 *     def dominantKey(dict table):             # <<<<<<<<<<<<<<
 *         '''Find the dominant key for a dictionary table of numeric values,
 *         i.e. the key to the largest value.  Values are assumed to be non-negative.
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_31dominantKey(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9BasinData_30dominantKey[] = "Find the dominant key for a dictionary table of numeric values, \n        i.e. the key to the largest value.  Values are assumed to be non-negative.\n        ";
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_9BasinData_31dominantKey = {"dominantKey", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_31dominantKey, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_30dominantKey};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_31dominantKey(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_table = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dominantKey (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_table,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_table)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dominantKey") < 0)) __PYX_ERR(0, 1082, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_table = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dominantKey", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1082, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.dominantKey", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_table), (&PyDict_Type), 1, "table", 1))) __PYX_ERR(0, 1082, __pyx_L1_error)
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_30dominantKey(__pyx_v_table);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_30dominantKey(PyObject *__pyx_v_table) {
  int __pyx_v_maxKey;
  double __pyx_v_maxVal;
  int __pyx_v_key;
  double __pyx_v_val;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  double __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("dominantKey", 0);

  /* "QSWATPlus/dataInC.pyx":1087
 *         '''
 *         cdef:
 *             int maxKey = -1             # <<<<<<<<<<<<<<
 *             double maxVal = 0
 *             int key
 */
  __pyx_v_maxKey = -1;

  /* "QSWATPlus/dataInC.pyx":1088
 *         cdef:
 *             int maxKey = -1
 *             double maxVal = 0             # <<<<<<<<<<<<<<
 *             int key
 *             double val
 */
  __pyx_v_maxVal = 0.0;

  /* "QSWATPlus/dataInC.pyx":1092
 *             double val
 * 
 *         for (key, val) in table.items():             # <<<<<<<<<<<<<<
 *             if val > maxVal:
 *                 maxKey = key
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_table == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 1092, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_table, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 1092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1092, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1092, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_key = __pyx_t_7;
    __pyx_v_val = __pyx_t_8;

    /* "QSWATPlus/dataInC.pyx":1093
 * 
 *         for (key, val) in table.items():
 *             if val > maxVal:             # <<<<<<<<<<<<<<
 *                 maxKey = key
 *                 maxVal = val
 */
    __pyx_t_9 = ((__pyx_v_val > __pyx_v_maxVal) != 0);
    if (__pyx_t_9) {

      /* "QSWATPlus/dataInC.pyx":1094
 *         for (key, val) in table.items():
 *             if val > maxVal:
 *                 maxKey = key             # <<<<<<<<<<<<<<
 *                 maxVal = val
 *         return maxKey, maxVal
 */
      __pyx_v_maxKey = __pyx_v_key;

      /* "QSWATPlus/dataInC.pyx":1095
 *             if val > maxVal:
 *                 maxKey = key
 *                 maxVal = val             # <<<<<<<<<<<<<<
 *         return maxKey, maxVal
 * 
 */
      __pyx_v_maxVal = __pyx_v_val;

      /* "QSWATPlus/dataInC.pyx":1093
 * 
 *         for (key, val) in table.items():
 *             if val > maxVal:             # <<<<<<<<<<<<<<
 *                 maxKey = key
 *                 maxVal = val
 */
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1096
 *                 maxKey = key
 *                 maxVal = val
 *         return maxKey, maxVal             # <<<<<<<<<<<<<<
 * 
 * cdef class ReachData:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_maxKey); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_maxVal); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "QSWATPlus/dataInC.pyx":1082
 * 
 *     @staticmethod
 *     def dominantKey(dict table):             # <<<<<<<<<<<<<<
 *         '''Find the dominant key for a dictionary table of numeric values,
 *         i.e. the key to the largest value.  Values are assumed to be non-negative.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.dominantKey", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":737
 * 
 *     cdef:
 *         public dict lsus             # <<<<<<<<<<<<<<
 *         public dict mergedLsus
 *         public double farDistance
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lsus);
  __pyx_r = __pyx_v_self->lsus;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 737, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lsus);
  __Pyx_DECREF(__pyx_v_self->lsus);
  __pyx_v_self->lsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.lsus.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_4lsus_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lsus);
  __Pyx_DECREF(__pyx_v_self->lsus);
  __pyx_v_self->lsus = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":738
 *     cdef:
 *         public dict lsus
 *         public dict mergedLsus             # <<<<<<<<<<<<<<
 *         public double farDistance
 *         public double minElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->mergedLsus);
  __pyx_r = __pyx_v_self->mergedLsus;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 738, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->mergedLsus);
  __Pyx_DECREF(__pyx_v_self->mergedLsus);
  __pyx_v_self->mergedLsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.mergedLsus.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->mergedLsus);
  __Pyx_DECREF(__pyx_v_self->mergedLsus);
  __pyx_v_self->mergedLsus = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":739
 *         public dict lsus
 *         public dict mergedLsus
 *         public double farDistance             # <<<<<<<<<<<<<<
 *         public double minElevation
 *         public double maxElevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farDistance); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.farDistance.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_11farDistance_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L1_error)
  __pyx_v_self->farDistance = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.farDistance.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":740
 *         public dict mergedLsus
 *         public double farDistance
 *         public double minElevation             # <<<<<<<<<<<<<<
 *         public double maxElevation
 *         public int waterLanduse
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->minElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.minElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12minElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 740, __pyx_L1_error)
  __pyx_v_self->minElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.minElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":741
 *         public double farDistance
 *         public double minElevation
 *         public double maxElevation             # <<<<<<<<<<<<<<
 *         public int waterLanduse
 *         public int waterId
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->maxElevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.maxElevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12maxElevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 741, __pyx_L1_error)
  __pyx_v_self->maxElevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.maxElevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":742
 *         public double minElevation
 *         public double maxElevation
 *         public int waterLanduse             # <<<<<<<<<<<<<<
 *         public int waterId
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->waterLanduse); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.waterLanduse.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L1_error)
  __pyx_v_self->waterLanduse = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.waterLanduse.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":743
 *         public double maxElevation
 *         public int waterLanduse
 *         public int waterId             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, waterLanduse, farDistance, waterId):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId___get__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->waterId); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.waterId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9BasinData_7waterId_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 743, __pyx_L1_error)
  __pyx_v_self->waterId = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.waterId.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_32__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_32__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.farDistance, self.lsus, self.maxElevation, self.mergedLsus, self.minElevation, self.waterId, self.waterLanduse)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->farDistance); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->maxElevation); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->minElevation); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->waterId); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->waterLanduse); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->lsus);
  __Pyx_GIVEREF(__pyx_v_self->lsus);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_self->lsus);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->mergedLsus);
  __Pyx_GIVEREF(__pyx_v_self->mergedLsus);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_v_self->mergedLsus);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.farDistance, self.lsus, self.maxElevation, self.mergedLsus, self.minElevation, self.waterId, self.waterLanduse)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.farDistance, self.lsus, self.maxElevation, self.mergedLsus, self.minElevation, self.waterId, self.waterLanduse)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.lsus is not None or self.mergedLsus is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.farDistance, self.lsus, self.maxElevation, self.mergedLsus, self.minElevation, self.waterId, self.waterLanduse)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.lsus is not None or self.mergedLsus is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, None), state
 */
  /*else*/ {
    __pyx_t_7 = (__pyx_v_self->lsus != ((PyObject*)Py_None));
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->mergedLsus != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_9 != 0);
    __pyx_t_8 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.lsus is not None or self.mergedLsus is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.lsus is not None or self.mergedLsus is not None
 *     if use_setstate:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_BasinData); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_81859870);
    __Pyx_GIVEREF(__pyx_int_81859870);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_81859870);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.lsus is not None or self.mergedLsus is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, None), state
 *     else:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BasinData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_BasinData); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_81859870);
    __Pyx_GIVEREF(__pyx_int_81859870);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_81859870);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BasinData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9BasinData_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9BasinData_34__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9BasinData_34__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BasinData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_BasinData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_BasinData, (type(self), 0x4e1151e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BasinData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.BasinData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1111
 *         public double lowerZ
 * 
 *     def __init__(self, double x1, double y1, double z1, double x2, double y2, double z2):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## x coordinate of upper end
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_9ReachData___init__[] = "Initialise class variables.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_9ReachData___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x1;
  double __pyx_v_y1;
  double __pyx_v_z1;
  double __pyx_v_x2;
  double __pyx_v_y2;
  double __pyx_v_z2;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_z1,&__pyx_n_s_x2,&__pyx_n_s_y2,&__pyx_n_s_z2,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 1); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 2); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 3); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 4); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 5); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1111, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_x1 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    __pyx_v_y1 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    __pyx_v_z1 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_z1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    __pyx_v_x2 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_x2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    __pyx_v_y2 = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_y2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
    __pyx_v_z2 = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_z2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1111, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), __pyx_v_x1, __pyx_v_y1, __pyx_v_z1, __pyx_v_x2, __pyx_v_y2, __pyx_v_z2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, double __pyx_v_x1, double __pyx_v_y1, double __pyx_v_z1, double __pyx_v_x2, double __pyx_v_y2, double __pyx_v_z2) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":1114
 *         """Initialise class variables."""
 *         ## x coordinate of upper end
 *         self.upperX = x1             # <<<<<<<<<<<<<<
 *         ## y coordinate of upper end
 *         self.upperY = y1
 */
  __pyx_v_self->upperX = __pyx_v_x1;

  /* "QSWATPlus/dataInC.pyx":1116
 *         self.upperX = x1
 *         ## y coordinate of upper end
 *         self.upperY = y1             # <<<<<<<<<<<<<<
 *         ## elevation of upper end
 *         self.upperZ = z1
 */
  __pyx_v_self->upperY = __pyx_v_y1;

  /* "QSWATPlus/dataInC.pyx":1118
 *         self.upperY = y1
 *         ## elevation of upper end
 *         self.upperZ = z1             # <<<<<<<<<<<<<<
 *         ## x coordinate of lower end
 *         self.lowerX = x2
 */
  __pyx_v_self->upperZ = __pyx_v_z1;

  /* "QSWATPlus/dataInC.pyx":1120
 *         self.upperZ = z1
 *         ## x coordinate of lower end
 *         self.lowerX = x2             # <<<<<<<<<<<<<<
 *         ## y coordinate of lower end
 *         self.lowerY = y2
 */
  __pyx_v_self->lowerX = __pyx_v_x2;

  /* "QSWATPlus/dataInC.pyx":1122
 *         self.lowerX = x2
 *         ## y coordinate of lower end
 *         self.lowerY = y2             # <<<<<<<<<<<<<<
 *         ## elevation of lower end
 *         self.lowerZ = z2
 */
  __pyx_v_self->lowerY = __pyx_v_y2;

  /* "QSWATPlus/dataInC.pyx":1124
 *         self.lowerY = y2
 *         ## elevation of lower end
 *         self.lowerZ = z2             # <<<<<<<<<<<<<<
 * 
 * cdef class MergedChannelData:
 */
  __pyx_v_self->lowerZ = __pyx_v_z2;

  /* "QSWATPlus/dataInC.pyx":1111
 *         public double lowerZ
 * 
 *     def __init__(self, double x1, double y1, double z1, double x2, double y2, double z2):             # <<<<<<<<<<<<<<
 *         """Initialise class variables."""
 *         ## x coordinate of upper end
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1104
 * 
 *     cdef:
 *         public double upperX             # <<<<<<<<<<<<<<
 *         public double upperY
 *         public double upperZ
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->upperX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1104, __pyx_L1_error)
  __pyx_v_self->upperX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1105
 *     cdef:
 *         public double upperX
 *         public double upperY             # <<<<<<<<<<<<<<
 *         public double upperZ
 *         public double lowerX
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->upperY); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1105, __pyx_L1_error)
  __pyx_v_self->upperY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1106
 *         public double upperX
 *         public double upperY
 *         public double upperZ             # <<<<<<<<<<<<<<
 *         public double lowerX
 *         public double lowerY
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->upperZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6upperZ_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1106, __pyx_L1_error)
  __pyx_v_self->upperZ = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.upperZ.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1107
 *         public double upperY
 *         public double upperZ
 *         public double lowerX             # <<<<<<<<<<<<<<
 *         public double lowerY
 *         public double lowerZ
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->lowerX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerX_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L1_error)
  __pyx_v_self->lowerX = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerX.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1108
 *         public double upperZ
 *         public double lowerX
 *         public double lowerY             # <<<<<<<<<<<<<<
 *         public double lowerZ
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->lowerY); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerY_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L1_error)
  __pyx_v_self->lowerY = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerY.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1109
 *         public double lowerX
 *         public double lowerY
 *         public double lowerZ             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, double x1, double y1, double z1, double x2, double y2, double z2):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ___get__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->lowerZ); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_9ReachData_6lowerZ_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1109, __pyx_L1_error)
  __pyx_v_self->lowerZ = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.lowerZ.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_2__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_2__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.lowerX, self.lowerY, self.lowerZ, self.upperX, self.upperY, self.upperZ)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->lowerX); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->lowerY); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->lowerZ); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->upperX); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->upperY); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->upperZ); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyTuple_New(6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_7, 5, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.lowerX, self.lowerY, self.lowerZ, self.upperX, self.upperY, self.upperZ)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_7 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_v__dict = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "(tree fragment)":7
 *     state = (self.lowerX, self.lowerY, self.lowerZ, self.upperX, self.upperY, self.upperZ)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_8 = (__pyx_v__dict != Py_None);
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v__dict);
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.lowerX, self.lowerY, self.lowerZ, self.upperX, self.upperY, self.upperZ)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, None), state
 *     else:
 */
  __pyx_t_9 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_9) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_ReachData); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_107154008);
    __Pyx_GIVEREF(__pyx_int_107154008);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_107154008);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_7, 2, Py_None);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_7);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, None), state
 *     else:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ReachData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_ReachData); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_107154008);
    __Pyx_GIVEREF(__pyx_int_107154008);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_107154008);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_v_state);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_7);
    __pyx_t_5 = 0;
    __pyx_t_7 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ReachData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9ReachData_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_9ReachData_4__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_9ReachData_4__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ReachData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_ReachData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ReachData, (type(self), 0x6630a58, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ReachData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.ReachData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1138
 *         public double maxEl
 * 
 *     def __init__(self, double areaC, int order, double length, double slope, double minEl, double maxEl):             # <<<<<<<<<<<<<<
 *         """Initialise class variables for first channel."""
 *         ## total drainage area in square metres
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_17MergedChannelData___init__[] = "Initialise class variables for first channel.";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_9QSWATPlus_7dataInC_17MergedChannelData___init__;
#endif
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_areaC;
  int __pyx_v_order;
  double __pyx_v_length;
  double __pyx_v_slope;
  double __pyx_v_minEl;
  double __pyx_v_maxEl;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_areaC,&__pyx_n_s_order,&__pyx_n_s_length,&__pyx_n_s_slope,&__pyx_n_s_minEl,&__pyx_n_s_maxEl,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_areaC)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 1); __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 2); __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 3); __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_minEl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 4); __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_maxEl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, 5); __PYX_ERR(0, 1138, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1138, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_areaC = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_areaC == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    __pyx_v_order = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_order == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    __pyx_v_length = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_length == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    __pyx_v_slope = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_slope == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    __pyx_v_minEl = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_minEl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    __pyx_v_maxEl = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_maxEl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1138, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), __pyx_v_areaC, __pyx_v_order, __pyx_v_length, __pyx_v_slope, __pyx_v_minEl, __pyx_v_maxEl);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":1141
 *         """Initialise class variables for first channel."""
 *         ## total drainage area in square metres
 *         self.areaC = areaC             # <<<<<<<<<<<<<<
 *         ## Strahler order
 *         self.order = order
 */
  __pyx_v_self->areaC = __pyx_v_areaC;

  /* "QSWATPlus/dataInC.pyx":1143
 *         self.areaC = areaC
 *         ## Strahler order
 *         self.order = order             # <<<<<<<<<<<<<<
 *         ## total length in metres
 *         self.length = length
 */
  __pyx_v_self->order = __pyx_v_order;

  /* "QSWATPlus/dataInC.pyx":1145
 *         self.order = order
 *         ## total length in metres
 *         self.length = length             # <<<<<<<<<<<<<<
 *         ## mean slope in m/m for merged channels
 *         self.slope = slope
 */
  __pyx_v_self->length = __pyx_v_length;

  /* "QSWATPlus/dataInC.pyx":1147
 *         self.length = length
 *         ## mean slope in m/m for merged channels
 *         self.slope = slope             # <<<<<<<<<<<<<<
 *         ## minimum elevation in metres
 *         self.minEl = minEl
 */
  __pyx_v_self->slope = __pyx_v_slope;

  /* "QSWATPlus/dataInC.pyx":1149
 *         self.slope = slope
 *         ## minimum elevation in metres
 *         self.minEl = minEl             # <<<<<<<<<<<<<<
 *         ## maximum elevation in metres
 *         self.maxEl = maxEl
 */
  __pyx_v_self->minEl = __pyx_v_minEl;

  /* "QSWATPlus/dataInC.pyx":1151
 *         self.minEl = minEl
 *         ## maximum elevation in metres
 *         self.maxEl = maxEl             # <<<<<<<<<<<<<<
 * 
 *     cpdef void add(self, double areaC, int order, double length, double slope, double minEl, double maxEl):
 */
  __pyx_v_self->maxEl = __pyx_v_maxEl;

  /* "QSWATPlus/dataInC.pyx":1138
 *         public double maxEl
 * 
 *     def __init__(self, double areaC, int order, double length, double slope, double minEl, double maxEl):             # <<<<<<<<<<<<<<
 *         """Initialise class variables for first channel."""
 *         ## total drainage area in square metres
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1153
 *         self.maxEl = maxEl
 * 
 *     cpdef void add(self, double areaC, int order, double length, double slope, double minEl, double maxEl):             # <<<<<<<<<<<<<<
 *         """Add a channel's data."""
 *         self.areaC = max(self.areaC, areaC)
 */

static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_3add(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static void __pyx_f_9QSWATPlus_7dataInC_17MergedChannelData_add(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl, int __pyx_skip_dispatch) {
  double __pyx_v_newLength;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  double __pyx_t_13;
  double __pyx_t_14;
  double __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  __Pyx_RefNannySetupContext("add", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1153, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_3add)) {
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_areaC); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_order); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = PyFloat_FromDouble(__pyx_v_length); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyFloat_FromDouble(__pyx_v_slope); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = PyFloat_FromDouble(__pyx_v_minEl); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = PyFloat_FromDouble(__pyx_v_maxEl); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1153, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_9 = __pyx_t_1; __pyx_t_10 = NULL;
        __pyx_t_11 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_9, function);
            __pyx_t_11 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[7] = {__pyx_t_10, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_11, 6+__pyx_t_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_9)) {
          PyObject *__pyx_temp[7] = {__pyx_t_10, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_9, __pyx_temp+1-__pyx_t_11, 6+__pyx_t_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        {
          __pyx_t_12 = PyTuple_New(6+__pyx_t_11); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1153, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_12);
          if (__pyx_t_10) {
            __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_10); __pyx_t_10 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_12, 0+__pyx_t_11, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_12, 1+__pyx_t_11, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_12, 2+__pyx_t_11, __pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_12, 3+__pyx_t_11, __pyx_t_6);
          __Pyx_GIVEREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_12, 4+__pyx_t_11, __pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_12, 5+__pyx_t_11, __pyx_t_8);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_5 = 0;
          __pyx_t_6 = 0;
          __pyx_t_7 = 0;
          __pyx_t_8 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_12, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1153, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "QSWATPlus/dataInC.pyx":1155
 *     cpdef void add(self, double areaC, int order, double length, double slope, double minEl, double maxEl):
 *         """Add a channel's data."""
 *         self.areaC = max(self.areaC, areaC)             # <<<<<<<<<<<<<<
 *         self.order = max(self.order, order)
 *         if length > 0:
 */
  __pyx_t_13 = __pyx_v_areaC;
  __pyx_t_14 = __pyx_v_self->areaC;
  if (((__pyx_t_13 > __pyx_t_14) != 0)) {
    __pyx_t_15 = __pyx_t_13;
  } else {
    __pyx_t_15 = __pyx_t_14;
  }
  __pyx_v_self->areaC = __pyx_t_15;

  /* "QSWATPlus/dataInC.pyx":1156
 *         """Add a channel's data."""
 *         self.areaC = max(self.areaC, areaC)
 *         self.order = max(self.order, order)             # <<<<<<<<<<<<<<
 *         if length > 0:
 *             newLength = self.length + length
 */
  __pyx_t_11 = __pyx_v_order;
  __pyx_t_16 = __pyx_v_self->order;
  if (((__pyx_t_11 > __pyx_t_16) != 0)) {
    __pyx_t_17 = __pyx_t_11;
  } else {
    __pyx_t_17 = __pyx_t_16;
  }
  __pyx_v_self->order = __pyx_t_17;

  /* "QSWATPlus/dataInC.pyx":1157
 *         self.areaC = max(self.areaC, areaC)
 *         self.order = max(self.order, order)
 *         if length > 0:             # <<<<<<<<<<<<<<
 *             newLength = self.length + length
 *             self.slope = (self.slope * self.length + slope * length) / newLength
 */
  __pyx_t_18 = ((__pyx_v_length > 0.0) != 0);
  if (__pyx_t_18) {

    /* "QSWATPlus/dataInC.pyx":1158
 *         self.order = max(self.order, order)
 *         if length > 0:
 *             newLength = self.length + length             # <<<<<<<<<<<<<<
 *             self.slope = (self.slope * self.length + slope * length) / newLength
 *             self.length = newLength
 */
    __pyx_v_newLength = (__pyx_v_self->length + __pyx_v_length);

    /* "QSWATPlus/dataInC.pyx":1159
 *         if length > 0:
 *             newLength = self.length + length
 *             self.slope = (self.slope * self.length + slope * length) / newLength             # <<<<<<<<<<<<<<
 *             self.length = newLength
 *         self.minEl = min(self.minEl, minEl)
 */
    __pyx_t_15 = ((__pyx_v_self->slope * __pyx_v_self->length) + (__pyx_v_slope * __pyx_v_length));
    if (unlikely(__pyx_v_newLength == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1159, __pyx_L1_error)
    }
    __pyx_v_self->slope = (__pyx_t_15 / __pyx_v_newLength);

    /* "QSWATPlus/dataInC.pyx":1160
 *             newLength = self.length + length
 *             self.slope = (self.slope * self.length + slope * length) / newLength
 *             self.length = newLength             # <<<<<<<<<<<<<<
 *         self.minEl = min(self.minEl, minEl)
 *         self.maxEl = max(self.maxEl, maxEl)
 */
    __pyx_v_self->length = __pyx_v_newLength;

    /* "QSWATPlus/dataInC.pyx":1157
 *         self.areaC = max(self.areaC, areaC)
 *         self.order = max(self.order, order)
 *         if length > 0:             # <<<<<<<<<<<<<<
 *             newLength = self.length + length
 *             self.slope = (self.slope * self.length + slope * length) / newLength
 */
  }

  /* "QSWATPlus/dataInC.pyx":1161
 *             self.slope = (self.slope * self.length + slope * length) / newLength
 *             self.length = newLength
 *         self.minEl = min(self.minEl, minEl)             # <<<<<<<<<<<<<<
 *         self.maxEl = max(self.maxEl, maxEl)
 * 
 */
  __pyx_t_15 = __pyx_v_minEl;
  __pyx_t_13 = __pyx_v_self->minEl;
  if (((__pyx_t_15 < __pyx_t_13) != 0)) {
    __pyx_t_14 = __pyx_t_15;
  } else {
    __pyx_t_14 = __pyx_t_13;
  }
  __pyx_v_self->minEl = __pyx_t_14;

  /* "QSWATPlus/dataInC.pyx":1162
 *             self.length = newLength
 *         self.minEl = min(self.minEl, minEl)
 *         self.maxEl = max(self.maxEl, maxEl)             # <<<<<<<<<<<<<<
 * 
 * cdef class LakeData:
 */
  __pyx_t_14 = __pyx_v_maxEl;
  __pyx_t_15 = __pyx_v_self->maxEl;
  if (((__pyx_t_14 > __pyx_t_15) != 0)) {
    __pyx_t_13 = __pyx_t_14;
  } else {
    __pyx_t_13 = __pyx_t_15;
  }
  __pyx_v_self->maxEl = __pyx_t_13;

  /* "QSWATPlus/dataInC.pyx":1153
 *         self.maxEl = maxEl
 * 
 *     cpdef void add(self, double areaC, int order, double length, double slope, double minEl, double maxEl):             # <<<<<<<<<<<<<<
 *         """Add a channel's data."""
 *         self.areaC = max(self.areaC, areaC)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_WriteUnraisable("QSWATPlus.dataInC.MergedChannelData.add", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_3add(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_9QSWATPlus_7dataInC_17MergedChannelData_2add[] = "Add a channel's data.";
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_3add(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_areaC;
  int __pyx_v_order;
  double __pyx_v_length;
  double __pyx_v_slope;
  double __pyx_v_minEl;
  double __pyx_v_maxEl;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_areaC,&__pyx_n_s_order,&__pyx_n_s_length,&__pyx_n_s_slope,&__pyx_n_s_minEl,&__pyx_n_s_maxEl,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_areaC)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_order)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, 1); __PYX_ERR(0, 1153, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_length)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, 2); __PYX_ERR(0, 1153, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_slope)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, 3); __PYX_ERR(0, 1153, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_minEl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, 4); __PYX_ERR(0, 1153, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_maxEl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, 5); __PYX_ERR(0, 1153, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add") < 0)) __PYX_ERR(0, 1153, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_areaC = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_areaC == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
    __pyx_v_order = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_order == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
    __pyx_v_length = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_length == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
    __pyx_v_slope = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_slope == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
    __pyx_v_minEl = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_minEl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
    __pyx_v_maxEl = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_maxEl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1153, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1153, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_2add(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), __pyx_v_areaC, __pyx_v_order, __pyx_v_length, __pyx_v_slope, __pyx_v_minEl, __pyx_v_maxEl);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_2add(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, double __pyx_v_areaC, int __pyx_v_order, double __pyx_v_length, double __pyx_v_slope, double __pyx_v_minEl, double __pyx_v_maxEl) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("add", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(__pyx_f_9QSWATPlus_7dataInC_17MergedChannelData_add(__pyx_v_self, __pyx_v_areaC, __pyx_v_order, __pyx_v_length, __pyx_v_slope, __pyx_v_minEl, __pyx_v_maxEl, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1131
 * 
 *     cdef:
 *         public double areaC             # <<<<<<<<<<<<<<
 *         public int order
 *         public double length
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->areaC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.areaC.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1131, __pyx_L1_error)
  __pyx_v_self->areaC = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.areaC.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1132
 *     cdef:
 *         public double areaC
 *         public int order             # <<<<<<<<<<<<<<
 *         public double length
 *         public double slope
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->order); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.order.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5order_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1132, __pyx_L1_error)
  __pyx_v_self->order = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.order.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1133
 *         public double areaC
 *         public int order
 *         public double length             # <<<<<<<<<<<<<<
 *         public double slope
 *         public double minEl
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->length); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.length.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6length_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1133, __pyx_L1_error)
  __pyx_v_self->length = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.length.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1134
 *         public int order
 *         public double length
 *         public double slope             # <<<<<<<<<<<<<<
 *         public double minEl
 *         public double maxEl
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->slope); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.slope.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5slope_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1134, __pyx_L1_error)
  __pyx_v_self->slope = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.slope.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1135
 *         public double length
 *         public double slope
 *         public double minEl             # <<<<<<<<<<<<<<
 *         public double maxEl
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->minEl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.minEl.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1135, __pyx_L1_error)
  __pyx_v_self->minEl = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.minEl.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1136
 *         public double slope
 *         public double minEl
 *         public double maxEl             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, double areaC, int order, double length, double slope, double minEl, double maxEl):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl___get__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->maxEl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.maxEl.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1136, __pyx_L1_error)
  __pyx_v_self->maxEl = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.maxEl.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_4__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_4__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.areaC, self.length, self.maxEl, self.minEl, self.order, self.slope)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->areaC); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->length); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->maxEl); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_self->minEl); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->order); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->slope); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyTuple_New(6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_7, 5, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.areaC, self.length, self.maxEl, self.minEl, self.order, self.slope)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_7 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_v__dict = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "(tree fragment)":7
 *     state = (self.areaC, self.length, self.maxEl, self.minEl, self.order, self.slope)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_8 = (__pyx_v__dict != Py_None);
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v__dict);
    __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.areaC, self.length, self.maxEl, self.minEl, self.order, self.slope)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, None), state
 *     else:
 */
  __pyx_t_9 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_9) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_MergedChannelData); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_153071342);
    __Pyx_GIVEREF(__pyx_int_153071342);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_153071342);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_7, 2, Py_None);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_7);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_6 = 0;
    __pyx_t_7 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, None), state
 *     else:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_MergedChannelData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_MergedChannelData); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_153071342);
    __Pyx_GIVEREF(__pyx_int_153071342);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_153071342);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_v_state);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_7);
    __pyx_t_5 = 0;
    __pyx_t_7 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_MergedChannelData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_17MergedChannelData_6__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_MergedChannelData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_MergedChannelData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_MergedChannelData, (type(self), 0x91faeee, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_MergedChannelData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.MergedChannelData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1178
 *         public int waterRole
 * 
 *     def __init__(self, area, centroid, waterRole):             # <<<<<<<<<<<<<<
 *         ## linknos of inflowing channels mapped to point id, point and elevation of channel outlet
 *         self.inChLinks = dict()
 */

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_area = 0;
  PyObject *__pyx_v_centroid = 0;
  PyObject *__pyx_v_waterRole = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_area,&__pyx_n_s_centroid,&__pyx_n_s_waterRole,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_area)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_centroid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1178, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_waterRole)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1178, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1178, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_area = values[0];
    __pyx_v_centroid = values[1];
    __pyx_v_waterRole = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1178, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData___init__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), __pyx_v_area, __pyx_v_centroid, __pyx_v_waterRole);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData___init__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_area, PyObject *__pyx_v_centroid, PyObject *__pyx_v_waterRole) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "QSWATPlus/dataInC.pyx":1180
 *     def __init__(self, area, centroid, waterRole):
 *         ## linknos of inflowing channels mapped to point id, point and elevation of channel outlet
 *         self.inChLinks = dict()             # <<<<<<<<<<<<<<
 *         ## linknos of channels within lake
 *         self.lakeChLinks = set()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->inChLinks);
  __Pyx_DECREF(__pyx_v_self->inChLinks);
  __pyx_v_self->inChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1182
 *         self.inChLinks = dict()
 *         ## linknos of channels within lake
 *         self.lakeChLinks = set()             # <<<<<<<<<<<<<<
 *         ## linkno of outflowing stream. -1 means no outlet stream; outlet is a main outlet
 *         self.outChLink = -1
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lakeChLinks);
  __Pyx_DECREF(__pyx_v_self->lakeChLinks);
  __pyx_v_self->lakeChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1184
 *         self.lakeChLinks = set()
 *         ## linkno of outflowing stream. -1 means no outlet stream; outlet is a main outlet
 *         self.outChLink = -1             # <<<<<<<<<<<<<<
 *         ## subbasin, point id, point and elevation of outflow point
 *         self.outPoint = (-1, -1, None, 0)
 */
  __pyx_v_self->outChLink = -1;

  /* "QSWATPlus/dataInC.pyx":1186
 *         self.outChLink = -1
 *         ## subbasin, point id, point and elevation of outflow point
 *         self.outPoint = (-1, -1, None, 0)             # <<<<<<<<<<<<<<
 *         ## linknos of other outflowing channels
 *         self.otherOutChLinks = set()
 */
  __Pyx_INCREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __Pyx_GOTREF(__pyx_v_self->outPoint);
  __Pyx_DECREF(__pyx_v_self->outPoint);
  __pyx_v_self->outPoint = __pyx_tuple_;

  /* "QSWATPlus/dataInC.pyx":1188
 *         self.outPoint = (-1, -1, None, 0)
 *         ## linknos of other outflowing channels
 *         self.otherOutChLinks = set()             # <<<<<<<<<<<<<<
 *         ## area in square metres
 *         self.area = area
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->otherOutChLinks);
  __Pyx_DECREF(__pyx_v_self->otherOutChLinks);
  __pyx_v_self->otherOutChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":1190
 *         self.otherOutChLinks = set()
 *         ## area in square metres
 *         self.area = area             # <<<<<<<<<<<<<<
 *         ## elvation (mean elevation of incoming stream outlets)
 *         self.elevation = 0
 */
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_area); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1190, __pyx_L1_error)
  __pyx_v_self->area = __pyx_t_2;

  /* "QSWATPlus/dataInC.pyx":1192
 *         self.area = area
 *         ## elvation (mean elevation of incoming stream outlets)
 *         self.elevation = 0             # <<<<<<<<<<<<<<
 *         ##centroid
 *         self.centroid = centroid
 */
  __pyx_v_self->elevation = 0.0;

  /* "QSWATPlus/dataInC.pyx":1194
 *         self.elevation = 0
 *         ##centroid
 *         self.centroid = centroid             # <<<<<<<<<<<<<<
 *         ## pond or reservoir
 *         self.waterRole = waterRole
 */
  __Pyx_INCREF(__pyx_v_centroid);
  __Pyx_GIVEREF(__pyx_v_centroid);
  __Pyx_GOTREF(__pyx_v_self->centroid);
  __Pyx_DECREF(__pyx_v_self->centroid);
  __pyx_v_self->centroid = __pyx_v_centroid;

  /* "QSWATPlus/dataInC.pyx":1196
 *         self.centroid = centroid
 *         ## pond or reservoir
 *         self.waterRole = waterRole             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_waterRole); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1196, __pyx_L1_error)
  __pyx_v_self->waterRole = __pyx_t_3;

  /* "QSWATPlus/dataInC.pyx":1178
 *         public int waterRole
 * 
 *     def __init__(self, area, centroid, waterRole):             # <<<<<<<<<<<<<<
 *         ## linknos of inflowing channels mapped to point id, point and elevation of channel outlet
 *         self.inChLinks = dict()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1168
 * 
 *     cdef:
 *         public dict inChLinks             # <<<<<<<<<<<<<<
 *         public set lakeChLinks
 *         public int outChLink
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->inChLinks);
  __pyx_r = __pyx_v_self->inChLinks;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 1168, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->inChLinks);
  __Pyx_DECREF(__pyx_v_self->inChLinks);
  __pyx_v_self->inChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.inChLinks.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9inChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->inChLinks);
  __Pyx_DECREF(__pyx_v_self->inChLinks);
  __pyx_v_self->inChLinks = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1169
 *     cdef:
 *         public dict inChLinks
 *         public set lakeChLinks             # <<<<<<<<<<<<<<
 *         public int outChLink
 *         public tuple outPoint
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lakeChLinks);
  __pyx_r = __pyx_v_self->lakeChLinks;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PySet_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 1169, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lakeChLinks);
  __Pyx_DECREF(__pyx_v_self->lakeChLinks);
  __pyx_v_self->lakeChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.lakeChLinks.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lakeChLinks);
  __Pyx_DECREF(__pyx_v_self->lakeChLinks);
  __pyx_v_self->lakeChLinks = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1170
 *         public dict inChLinks
 *         public set lakeChLinks
 *         public int outChLink             # <<<<<<<<<<<<<<
 *         public tuple outPoint
 *         public set otherOutChLinks
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->outChLink); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.outChLink.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9outChLink_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L1_error)
  __pyx_v_self->outChLink = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.outChLink.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1171
 *         public set lakeChLinks
 *         public int outChLink
 *         public tuple outPoint             # <<<<<<<<<<<<<<
 *         public set otherOutChLinks
 *         public double area
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->outPoint);
  __pyx_r = __pyx_v_self->outPoint;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 1171, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->outPoint);
  __Pyx_DECREF(__pyx_v_self->outPoint);
  __pyx_v_self->outPoint = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.outPoint.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8outPoint_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->outPoint);
  __Pyx_DECREF(__pyx_v_self->outPoint);
  __pyx_v_self->outPoint = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1172
 *         public int outChLink
 *         public tuple outPoint
 *         public set otherOutChLinks             # <<<<<<<<<<<<<<
 *         public double area
 *         public double elevation
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->otherOutChLinks);
  __pyx_r = __pyx_v_self->otherOutChLinks;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PySet_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 1172, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->otherOutChLinks);
  __Pyx_DECREF(__pyx_v_self->otherOutChLinks);
  __pyx_v_self->otherOutChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.otherOutChLinks.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->otherOutChLinks);
  __Pyx_DECREF(__pyx_v_self->otherOutChLinks);
  __pyx_v_self->otherOutChLinks = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1173
 *         public tuple outPoint
 *         public set otherOutChLinks
 *         public double area             # <<<<<<<<<<<<<<
 *         public double elevation
 *         public object centroid
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.area.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_4area_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1173, __pyx_L1_error)
  __pyx_v_self->area = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.area.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1174
 *         public set otherOutChLinks
 *         public double area
 *         public double elevation             # <<<<<<<<<<<<<<
 *         public object centroid
 *         public int waterRole
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->elevation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.elevation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9elevation_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L1_error)
  __pyx_v_self->elevation = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.elevation.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1175
 *         public double area
 *         public double elevation
 *         public object centroid             # <<<<<<<<<<<<<<
 *         public int waterRole
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->centroid);
  __pyx_r = __pyx_v_self->centroid;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->centroid);
  __Pyx_DECREF(__pyx_v_self->centroid);
  __pyx_v_self->centroid = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_4__del__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_8centroid_4__del__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->centroid);
  __Pyx_DECREF(__pyx_v_self->centroid);
  __pyx_v_self->centroid = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "QSWATPlus/dataInC.pyx":1176
 *         public double elevation
 *         public object centroid
 *         public int waterRole             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, area, centroid, waterRole):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole___get__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole___get__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->waterRole); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.waterRole.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole_2__set__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9QSWATPlus_7dataInC_8LakeData_9waterRole_2__set__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1176, __pyx_L1_error)
  __pyx_v_self->waterRole = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.waterRole.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_2__reduce_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_2__reduce_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.area, self.centroid, self.elevation, self.inChLinks, self.lakeChLinks, self.otherOutChLinks, self.outChLink, self.outPoint, self.waterRole)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->area); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->elevation); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->outChLink); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->waterRole); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(9); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->centroid);
  __Pyx_GIVEREF(__pyx_v_self->centroid);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_self->centroid);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->inChLinks);
  __Pyx_GIVEREF(__pyx_v_self->inChLinks);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_v_self->inChLinks);
  __Pyx_INCREF(__pyx_v_self->lakeChLinks);
  __Pyx_GIVEREF(__pyx_v_self->lakeChLinks);
  PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_v_self->lakeChLinks);
  __Pyx_INCREF(__pyx_v_self->otherOutChLinks);
  __Pyx_GIVEREF(__pyx_v_self->otherOutChLinks);
  PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_v_self->otherOutChLinks);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_self->outPoint);
  __Pyx_GIVEREF(__pyx_v_self->outPoint);
  PyTuple_SET_ITEM(__pyx_t_5, 7, __pyx_v_self->outPoint);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 8, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.area, self.centroid, self.elevation, self.inChLinks, self.lakeChLinks, self.otherOutChLinks, self.outChLink, self.outPoint, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_5 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v__dict = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "(tree fragment)":7
 *     state = (self.area, self.centroid, self.elevation, self.inChLinks, self.lakeChLinks, self.otherOutChLinks, self.outChLink, self.outPoint, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_6 = (__pyx_v__dict != Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.centroid is not None or self.inChLinks is not None or self.lakeChLinks is not None or self.otherOutChLinks is not None or self.outPoint is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.area, self.centroid, self.elevation, self.inChLinks, self.lakeChLinks, self.otherOutChLinks, self.outChLink, self.outPoint, self.waterRole)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.centroid is not None or self.inChLinks is not None or self.lakeChLinks is not None or self.otherOutChLinks is not None or self.outPoint is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, None), state
 */
  /*else*/ {
    __pyx_t_6 = (__pyx_v_self->centroid != Py_None);
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_8 = (__pyx_v_self->inChLinks != ((PyObject*)Py_None));
    __pyx_t_6 = (__pyx_t_8 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_7 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->lakeChLinks != ((PyObject*)Py_None));
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_8 = (__pyx_v_self->otherOutChLinks != ((PyObject*)Py_None));
    __pyx_t_6 = (__pyx_t_8 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_7 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->outPoint != ((PyObject*)Py_None));
    __pyx_t_8 = (__pyx_t_6 != 0);
    __pyx_t_7 = __pyx_t_8;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_7;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.centroid is not None or self.inChLinks is not None or self.lakeChLinks is not None or self.otherOutChLinks is not None or self.outPoint is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, None), state
 *     else:
 */
  __pyx_t_7 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":13
 *         use_setstate = self.centroid is not None or self.inChLinks is not None or self.lakeChLinks is not None or self.otherOutChLinks is not None or self.outPoint is not None
 *     if use_setstate:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_LakeData); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_95816225);
    __Pyx_GIVEREF(__pyx_int_95816225);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_95816225);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_5, 2, Py_None);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.centroid is not None or self.inChLinks is not None or self.lakeChLinks is not None or self.otherOutChLinks is not None or self.outPoint is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, None), state
 *     else:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_LakeData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_LakeData); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_95816225);
    __Pyx_GIVEREF(__pyx_int_95816225);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_95816225);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_LakeData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_8LakeData_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8LakeData_4__setstate_cython__(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8LakeData_4__setstate_cython__(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_LakeData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LakeData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_LakeData, (type(self), 0x5b60a21, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_LakeData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("QSWATPlus.dataInC.LakeData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_CellData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_1__pyx_unpickle_CellData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_1__pyx_unpickle_CellData = {"__pyx_unpickle_CellData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_1__pyx_unpickle_CellData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_1__pyx_unpickle_CellData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_CellData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CellData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CellData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_CellData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_CellData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_CellData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC___pyx_unpickle_CellData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC___pyx_unpickle_CellData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CellData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x11e8216:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x11e8216) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x11e8216:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 *     __pyx_result = CellData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x11e8216:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = CellData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x11, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x11e8216:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 *     __pyx_result = CellData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_CellData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 *     __pyx_result = CellData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = CellData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_CellData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x11e8216 = (actHRUNum, area, cellCount, crop, totalElevation, totalLatitude, totalLongitude, totalSlope))" % __pyx_checksum)
 *     __pyx_result = CellData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_CellData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_CellData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_CellData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  double __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_CellData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->actHRUNum = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->area = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->cellCount = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->crop = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalElevation = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLatitude = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLongitude = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalSlope = __pyx_t_3;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 8) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_CellData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_WaterBody(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_3__pyx_unpickle_WaterBody(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_3__pyx_unpickle_WaterBody = {"__pyx_unpickle_WaterBody", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_3__pyx_unpickle_WaterBody, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_3__pyx_unpickle_WaterBody(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_WaterBody (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_WaterBody", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_WaterBody", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_WaterBody") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_WaterBody", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_WaterBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_2__pyx_unpickle_WaterBody(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_2__pyx_unpickle_WaterBody(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_WaterBody", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x626c158:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x626c158) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x626c158:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 *     __pyx_result = WaterBody.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x626c158:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = WaterBody.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x62, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x626c158:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 *     __pyx_result = WaterBody.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_WaterBody), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 *     __pyx_result = WaterBody.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = WaterBody.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_WaterBody__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x626c158 = (area, cellCount, channelRole, id, originalArea, totalElevation, totalLatitude, totalLongitude, waterRole))" % __pyx_checksum)
 *     __pyx_result = WaterBody.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_WaterBody(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_WaterBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_WaterBody__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_WaterBody__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->area = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->cellCount = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->channelRole = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->id = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->originalArea = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLatitude = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLongitude = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->waterRole = __pyx_t_3;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 9) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_WaterBody__set_state(<WaterBody> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_WaterBody__set_state(WaterBody __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelRole = __pyx_state[2]; __pyx_result.id = __pyx_state[3]; __pyx_result.originalArea = __pyx_state[4]; __pyx_result.totalElevation = __pyx_state[5]; __pyx_result.totalLatitude = __pyx_state[6]; __pyx_result.totalLongitude = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_WaterBody__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_LSUData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_5__pyx_unpickle_LSUData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_5__pyx_unpickle_LSUData = {"__pyx_unpickle_LSUData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_5__pyx_unpickle_LSUData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_5__pyx_unpickle_LSUData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_LSUData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LSUData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LSUData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_LSUData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LSUData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LSUData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_4__pyx_unpickle_LSUData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_4__pyx_unpickle_LSUData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_LSUData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x7ed8fa6:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x7ed8fa6) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x7ed8fa6:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 *     __pyx_result = LSUData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x7ed8fa6:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = LSUData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x7e, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x7ed8fa6:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 *     __pyx_result = LSUData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_LSUData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 *     __pyx_result = LSUData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = LSUData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LSUData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x7ed8fa6 = (area, cellCount, channelLength, channelOrder, cropAreas, cropSoilSlopeArea, cropSoilSlopeNumbers, farDistance, farElevation, farPointX, farPointY, hruMap, lastHru, midPointX, midPointY, originalCropAreas, originalSlopeAreas, originalSoilAreas, outletElevation, slopeAreas, soilAreas, sourceElevation, totalElevation, totalLatitude, totalLongitude, totalSlope, waterBody))" % __pyx_checksum)
 *     __pyx_result = LSUData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_LSUData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LSUData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LSUData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_LSUData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[27])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->area = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->cellCount = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->channelLength = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->channelOrder = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->cropAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->cropAreas);
  __pyx_v___pyx_result->cropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->cropSoilSlopeArea = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->cropSoilSlopeNumbers);
  __Pyx_DECREF(__pyx_v___pyx_result->cropSoilSlopeNumbers);
  __pyx_v___pyx_result->cropSoilSlopeNumbers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->farDistance = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->farElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->farPointX = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->farPointY = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 11, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->hruMap);
  __Pyx_DECREF(__pyx_v___pyx_result->hruMap);
  __pyx_v___pyx_result->hruMap = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 12, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lastHru = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 13, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->midPointX = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 14, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->midPointY = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 15, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->originalCropAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->originalCropAreas);
  __pyx_v___pyx_result->originalCropAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 16, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->originalSlopeAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->originalSlopeAreas);
  __pyx_v___pyx_result->originalSlopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 17, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->originalSoilAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->originalSoilAreas);
  __pyx_v___pyx_result->originalSoilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 18, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->outletElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 19, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->slopeAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->slopeAreas);
  __pyx_v___pyx_result->slopeAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 20, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->soilAreas);
  __Pyx_DECREF(__pyx_v___pyx_result->soilAreas);
  __pyx_v___pyx_result->soilAreas = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 21, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->sourceElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 22, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 23, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLatitude = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 24, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalLongitude = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 25, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->totalSlope = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 26, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9QSWATPlus_7dataInC_WaterBody))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->waterBody);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->waterBody));
  __pyx_v___pyx_result->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[27])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 27) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[27])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 27, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[27])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LSUData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_BasinData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7__pyx_unpickle_BasinData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_7__pyx_unpickle_BasinData = {"__pyx_unpickle_BasinData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7__pyx_unpickle_BasinData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_7__pyx_unpickle_BasinData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_BasinData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BasinData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BasinData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_BasinData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BasinData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_BasinData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_6__pyx_unpickle_BasinData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_6__pyx_unpickle_BasinData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BasinData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x4e1151e:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x4e1151e) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x4e1151e:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 *     __pyx_result = BasinData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x4e1151e:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = BasinData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x4e, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x4e1151e:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 *     __pyx_result = BasinData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 *     __pyx_result = BasinData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = BasinData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_BasinData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x4e1151e = (farDistance, lsus, maxElevation, mergedLsus, minElevation, waterId, waterLanduse))" % __pyx_checksum)
 *     __pyx_result = BasinData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_BasinData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_BasinData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_BasinData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BasinData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->farDistance = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->lsus);
  __Pyx_DECREF(__pyx_v___pyx_result->lsus);
  __pyx_v___pyx_result->lsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->maxElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->mergedLsus);
  __Pyx_DECREF(__pyx_v___pyx_result->mergedLsus);
  __pyx_v___pyx_result->mergedLsus = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->minElevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->waterId = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->waterLanduse = __pyx_t_3;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 7) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_BasinData__set_state(<BasinData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BasinData__set_state(BasinData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.farDistance = __pyx_state[0]; __pyx_result.lsus = __pyx_state[1]; __pyx_result.maxElevation = __pyx_state[2]; __pyx_result.mergedLsus = __pyx_state[3]; __pyx_result.minElevation = __pyx_state[4]; __pyx_result.waterId = __pyx_state[5]; __pyx_result.waterLanduse = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_BasinData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_ReachData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9__pyx_unpickle_ReachData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_9__pyx_unpickle_ReachData = {"__pyx_unpickle_ReachData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9__pyx_unpickle_ReachData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_9__pyx_unpickle_ReachData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_ReachData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ReachData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ReachData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_ReachData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ReachData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_ReachData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_8__pyx_unpickle_ReachData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_8__pyx_unpickle_ReachData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ReachData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x6630a58:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x6630a58) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x6630a58:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 *     __pyx_result = ReachData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x6630a58:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = ReachData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x66, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x6630a58:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 *     __pyx_result = ReachData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_ReachData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 *     __pyx_result = ReachData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = ReachData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_ReachData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x6630a58 = (lowerX, lowerY, lowerZ, upperX, upperY, upperZ))" % __pyx_checksum)
 *     __pyx_result = ReachData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_ReachData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_ReachData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_ReachData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ReachData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lowerX = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lowerY = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lowerZ = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->upperX = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->upperY = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->upperZ = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 6) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_ReachData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_MergedChannelData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_11__pyx_unpickle_MergedChannelData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_11__pyx_unpickle_MergedChannelData = {"__pyx_unpickle_MergedChannelData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_11__pyx_unpickle_MergedChannelData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_11__pyx_unpickle_MergedChannelData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_MergedChannelData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_MergedChannelData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_MergedChannelData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_MergedChannelData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_MergedChannelData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_MergedChannelData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_10__pyx_unpickle_MergedChannelData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_10__pyx_unpickle_MergedChannelData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_MergedChannelData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x91faeee:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x91faeee) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x91faeee:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x91faeee:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x91, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x91faeee:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_MergedChannelData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_MergedChannelData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x91faeee = (areaC, length, maxEl, minEl, order, slope))" % __pyx_checksum)
 *     __pyx_result = MergedChannelData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_MergedChannelData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_MergedChannelData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_MergedChannelData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_MergedChannelData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->areaC = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->length = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->maxEl = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->minEl = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->order = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->slope = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 6) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_MergedChannelData__set_state(<MergedChannelData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_MergedChannelData__set_state(MergedChannelData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.areaC = __pyx_state[0]; __pyx_result.length = __pyx_state[1]; __pyx_result.maxEl = __pyx_state[2]; __pyx_result.minEl = __pyx_state[3]; __pyx_result.order = __pyx_state[4]; __pyx_result.slope = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_MergedChannelData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_LakeData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_13__pyx_unpickle_LakeData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9QSWATPlus_7dataInC_13__pyx_unpickle_LakeData = {"__pyx_unpickle_LakeData", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_13__pyx_unpickle_LakeData, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9QSWATPlus_7dataInC_13__pyx_unpickle_LakeData(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_LakeData (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LakeData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LakeData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_LakeData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_LakeData", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LakeData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9QSWATPlus_7dataInC_12__pyx_unpickle_LakeData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9QSWATPlus_7dataInC_12__pyx_unpickle_LakeData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__pyx_unpickle_LakeData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x5b60a21:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x5b60a21) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x5b60a21:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 *     __pyx_result = LakeData.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum != 0x5b60a21:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = LakeData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x5b, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum != 0x5b60a21:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 *     __pyx_result = LakeData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_LakeData), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 *     __pyx_result = LakeData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_6 = (__pyx_t_1 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":9
 *     __pyx_result = LakeData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LakeData__set_state(((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x5b60a21 = (area, centroid, elevation, inChLinks, lakeChLinks, otherOutChLinks, outChLink, outPoint, waterRole))" % __pyx_checksum)
 *     __pyx_result = LakeData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_LakeData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LakeData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9QSWATPlus_7dataInC___pyx_unpickle_LakeData__set_state(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  double __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_LakeData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->area = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->centroid);
  __Pyx_DECREF(__pyx_v___pyx_result->centroid);
  __pyx_v___pyx_result->centroid = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->elevation = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->inChLinks);
  __Pyx_DECREF(__pyx_v___pyx_result->inChLinks);
  __pyx_v___pyx_result->inChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PySet_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->lakeChLinks);
  __Pyx_DECREF(__pyx_v___pyx_result->lakeChLinks);
  __pyx_v___pyx_result->lakeChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PySet_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->otherOutChLinks);
  __Pyx_DECREF(__pyx_v___pyx_result->otherOutChLinks);
  __pyx_v___pyx_result->otherOutChLinks = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->outChLink = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->outPoint);
  __Pyx_DECREF(__pyx_v___pyx_result->outPoint);
  __pyx_v___pyx_result->outPoint = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->waterRole = __pyx_t_3;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_5 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_5 > 9) != 0);
  if (__pyx_t_6) {
  } else {
    __pyx_t_4 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  __pyx_t_4 = __pyx_t_7;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_4) {

    /* "(tree fragment)":14
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])             # <<<<<<<<<<<<<<
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_update); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_LakeData__set_state(<LakeData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_LakeData__set_state(LakeData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.centroid = __pyx_state[1]; __pyx_result.elevation = __pyx_state[2]; __pyx_result.inChLinks = __pyx_state[3]; __pyx_result.lakeChLinks = __pyx_state[4]; __pyx_result.otherOutChLinks = __pyx_state[5]; __pyx_result.outChLink = __pyx_state[6]; __pyx_result.outPoint = __pyx_state[7]; __pyx_result.waterRole = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("QSWATPlus.dataInC.__pyx_unpickle_LakeData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_CellData __pyx_vtable_9QSWATPlus_7dataInC_CellData;

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_CellData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_CellData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_CellData *)o);
  p->__pyx_vtab = __pyx_vtabptr_9QSWATPlus_7dataInC_CellData;
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_CellData(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_cellCount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_cellCount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_9cellCount_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_area(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_4area_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalSlope(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalSlope(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_10totalSlope_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalLatitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalLatitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_13totalLatitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalLongitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalLongitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_14totalLongitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_crop(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_crop(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_4crop_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8CellData_actHRUNum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8CellData_actHRUNum(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8CellData_9actHRUNum_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_CellData[] = {
  {"addCells", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8CellData_3addCells, METH_O, __pyx_doc_9QSWATPlus_7dataInC_8CellData_2addCells},
  {"multiply", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8CellData_5multiply, METH_O, __pyx_doc_9QSWATPlus_7dataInC_8CellData_4multiply},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8CellData_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8CellData_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_CellData[] = {
  {(char *)"cellCount", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_cellCount, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_cellCount, (char *)0, 0},
  {(char *)"area", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_area, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_area, (char *)0, 0},
  {(char *)"totalElevation", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalElevation, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalElevation, (char *)0, 0},
  {(char *)"totalSlope", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalSlope, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalSlope, (char *)0, 0},
  {(char *)"totalLatitude", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalLatitude, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalLatitude, (char *)0, 0},
  {(char *)"totalLongitude", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_totalLongitude, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_totalLongitude, (char *)0, 0},
  {(char *)"crop", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_crop, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_crop, (char *)0, 0},
  {(char *)"actHRUNum", __pyx_getprop_9QSWATPlus_7dataInC_8CellData_actHRUNum, __pyx_setprop_9QSWATPlus_7dataInC_8CellData_actHRUNum, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_CellData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.CellData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_CellData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_CellData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_CellData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_CellData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_8CellData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_CellData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_WaterBody __pyx_vtable_9QSWATPlus_7dataInC_WaterBody;

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_WaterBody(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)o);
  p->__pyx_vtab = __pyx_vtabptr_9QSWATPlus_7dataInC_WaterBody;
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_WaterBody(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_cellCount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_cellCount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9cellCount_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_area(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_4area_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_originalArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_originalArea(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_12originalArea_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalLatitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalLatitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13totalLatitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalLongitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalLongitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_14totalLongitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_2id_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_channelRole(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_channelRole(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11channelRole_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_waterRole(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_waterRole(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9waterRole_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_WaterBody[] = {
  {"addWater", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_3addWater, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_2addWater},
  {"multiply", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_5multiply, METH_O, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_4multiply},
  {"setInlet", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_7setInlet, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_6setInlet},
  {"setOutlet", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_9setOutlet, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_8setOutlet},
  {"setReservoir", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_11setReservoir, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_10setReservoir},
  {"setPond", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_13setPond, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_12setPond},
  {"isInlet", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_15isInlet, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_14isInlet},
  {"isOutlet", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_17isOutlet, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_16isOutlet},
  {"isUnknown", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_19isUnknown, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_18isUnknown},
  {"isReservoir", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_21isReservoir, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_20isReservoir},
  {"isPond", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_23isPond, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9WaterBody_22isPond},
  {"copy", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_25copy, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_27__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9WaterBody_29__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_WaterBody[] = {
  {(char *)"cellCount", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_cellCount, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_cellCount, (char *)0, 0},
  {(char *)"area", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_area, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_area, (char *)0, 0},
  {(char *)"originalArea", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_originalArea, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_originalArea, (char *)0, 0},
  {(char *)"totalElevation", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalElevation, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalElevation, (char *)0, 0},
  {(char *)"totalLatitude", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalLatitude, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalLatitude, (char *)0, 0},
  {(char *)"totalLongitude", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_totalLongitude, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_totalLongitude, (char *)0, 0},
  {(char *)"id", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_id, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_id, (char *)0, 0},
  {(char *)"channelRole", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_channelRole, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_channelRole, (char *)0, 0},
  {(char *)"waterRole", __pyx_getprop_9QSWATPlus_7dataInC_9WaterBody_waterRole, __pyx_setprop_9QSWATPlus_7dataInC_9WaterBody_waterRole, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_WaterBody = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.WaterBody", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_WaterBody, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_WaterBody, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_WaterBody, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_9WaterBody_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_WaterBody, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_LSUData __pyx_vtable_9QSWATPlus_7dataInC_LSUData;

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_LSUData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)o);
  p->__pyx_vtab = __pyx_vtabptr_9QSWATPlus_7dataInC_LSUData;
  p->hruMap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->cropSoilSlopeNumbers = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->cropAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->originalCropAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->soilAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->originalSoilAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->slopeAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->originalSlopeAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_LSUData(PyObject *o) {
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->hruMap);
  Py_CLEAR(p->cropSoilSlopeNumbers);
  Py_CLEAR(p->cropAreas);
  Py_CLEAR(p->originalCropAreas);
  Py_CLEAR(p->soilAreas);
  Py_CLEAR(p->originalSoilAreas);
  Py_CLEAR(p->slopeAreas);
  Py_CLEAR(p->originalSlopeAreas);
  Py_CLEAR(p->waterBody);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9QSWATPlus_7dataInC_LSUData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)o;
  if (p->hruMap) {
    e = (*v)(p->hruMap, a); if (e) return e;
  }
  if (p->cropSoilSlopeNumbers) {
    e = (*v)(p->cropSoilSlopeNumbers, a); if (e) return e;
  }
  if (p->cropAreas) {
    e = (*v)(p->cropAreas, a); if (e) return e;
  }
  if (p->originalCropAreas) {
    e = (*v)(p->originalCropAreas, a); if (e) return e;
  }
  if (p->soilAreas) {
    e = (*v)(p->soilAreas, a); if (e) return e;
  }
  if (p->originalSoilAreas) {
    e = (*v)(p->originalSoilAreas, a); if (e) return e;
  }
  if (p->slopeAreas) {
    e = (*v)(p->slopeAreas, a); if (e) return e;
  }
  if (p->originalSlopeAreas) {
    e = (*v)(p->originalSlopeAreas, a); if (e) return e;
  }
  if (p->waterBody) {
    e = (*v)(((PyObject *)p->waterBody), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9QSWATPlus_7dataInC_LSUData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *)o;
  tmp = ((PyObject*)p->hruMap);
  p->hruMap = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->cropSoilSlopeNumbers);
  p->cropSoilSlopeNumbers = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->cropAreas);
  p->cropAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->originalCropAreas);
  p->originalCropAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->soilAreas);
  p->soilAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->originalSoilAreas);
  p->originalSoilAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->slopeAreas);
  p->slopeAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->originalSlopeAreas);
  p->originalSlopeAreas = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->waterBody);
  p->waterBody = ((struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cellCount(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cellCount(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cellCount_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_area(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_4area_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_outletElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_outletElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15outletElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_sourceElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_sourceElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_15sourceElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_channelLength(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_channelLength(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13channelLength_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_channelOrder(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_channelOrder(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12channelOrder_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_12farElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farDistance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farDistance(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_11farDistance_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farPointX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farPointX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farPointY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farPointY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9farPointY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_midPointX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_midPointX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_midPointY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_midPointY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9midPointY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalSlope(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalSlope(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10totalSlope_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalLatitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalLatitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_13totalLatitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalLongitude(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalLongitude(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_14totalLongitude_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeArea(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17cropSoilSlopeArea_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_hruMap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_hruMap(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_6hruMap_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeNumbers(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeNumbers(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_20cropSoilSlopeNumbers_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9cropAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalCropAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalCropAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalCropAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_soilAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_soilAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9soilAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalSoilAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalSoilAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_17originalSoilAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_slopeAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_slopeAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_10slopeAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalSlopeAreas(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalSlopeAreas(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_18originalSlopeAreas_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_waterBody(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_waterBody(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_9waterBody_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_7LSUData_lastHru(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_lastHru(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_7LSUData_7lastHru_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_LSUData[] = {
  {"cropSoilAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_3cropSoilAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_2cropSoilAreas},
  {"cropSoilArea", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_5cropSoilArea, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_4cropSoilArea},
  {"cropSoilSlopeAreas", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_7cropSoilSlopeAreas, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_6cropSoilSlopeAreas},
  {"getDominantHRU", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_9getDominantHRU, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_8getDominantHRU},
  {"redistribute", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_11redistribute, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_10redistribute},
  {"redistributeNodataAndWater", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_13redistributeNodataAndWater, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_12redistributeNodataAndWater},
  {"removeHRU", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_15removeHRU, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_14removeHRU},
  {"removeWaterHRUs", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_17removeWaterHRUs, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_16removeWaterHRUs},
  {"setCropAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_19setCropAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_18setCropAreas},
  {"setSoilAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_21setSoilAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_20setSoilAreas},
  {"setSlopeAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_23setSlopeAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_22setSlopeAreas},
  {"nextHruNumber", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_25nextHruNumber, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_24nextHruNumber},
  {"copy", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_27copy, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_26copy},
  {"merge", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_29merge, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_28merge},
  {"makeReservoir", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_31makeReservoir, METH_O, __pyx_doc_9QSWATPlus_7dataInC_7LSUData_30makeReservoir},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_33__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_7LSUData_35__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_LSUData[] = {
  {(char *)"cellCount", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cellCount, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cellCount, (char *)0, 0},
  {(char *)"area", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_area, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_area, (char *)0, 0},
  {(char *)"outletElevation", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_outletElevation, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_outletElevation, (char *)0, 0},
  {(char *)"sourceElevation", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_sourceElevation, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_sourceElevation, (char *)0, 0},
  {(char *)"channelLength", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_channelLength, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_channelLength, (char *)0, 0},
  {(char *)"channelOrder", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_channelOrder, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_channelOrder, (char *)0, 0},
  {(char *)"farElevation", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farElevation, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farElevation, (char *)0, 0},
  {(char *)"farDistance", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farDistance, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farDistance, (char *)0, 0},
  {(char *)"farPointX", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farPointX, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farPointX, (char *)0, 0},
  {(char *)"farPointY", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_farPointY, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_farPointY, (char *)0, 0},
  {(char *)"midPointX", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_midPointX, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_midPointX, (char *)0, 0},
  {(char *)"midPointY", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_midPointY, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_midPointY, (char *)0, 0},
  {(char *)"totalElevation", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalElevation, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalElevation, (char *)0, 0},
  {(char *)"totalSlope", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalSlope, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalSlope, (char *)0, 0},
  {(char *)"totalLatitude", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalLatitude, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalLatitude, (char *)0, 0},
  {(char *)"totalLongitude", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_totalLongitude, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_totalLongitude, (char *)0, 0},
  {(char *)"cropSoilSlopeArea", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeArea, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeArea, (char *)0, 0},
  {(char *)"hruMap", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_hruMap, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_hruMap, (char *)0, 0},
  {(char *)"cropSoilSlopeNumbers", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeNumbers, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeNumbers, (char *)0, 0},
  {(char *)"cropAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_cropAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_cropAreas, (char *)0, 0},
  {(char *)"originalCropAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalCropAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalCropAreas, (char *)0, 0},
  {(char *)"soilAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_soilAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_soilAreas, (char *)0, 0},
  {(char *)"originalSoilAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalSoilAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalSoilAreas, (char *)0, 0},
  {(char *)"slopeAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_slopeAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_slopeAreas, (char *)0, 0},
  {(char *)"originalSlopeAreas", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_originalSlopeAreas, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_originalSlopeAreas, (char *)0, 0},
  {(char *)"waterBody", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_waterBody, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_waterBody, (char *)0, 0},
  {(char *)"lastHru", __pyx_getprop_9QSWATPlus_7dataInC_7LSUData_lastHru, __pyx_setprop_9QSWATPlus_7dataInC_7LSUData_lastHru, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_LSUData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.LSUData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_LSUData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9QSWATPlus_7dataInC_LSUData, /*tp_traverse*/
  __pyx_tp_clear_9QSWATPlus_7dataInC_LSUData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_LSUData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_LSUData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_7LSUData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_LSUData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_BasinData __pyx_vtable_9QSWATPlus_7dataInC_BasinData;

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_BasinData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)o);
  p->__pyx_vtab = __pyx_vtabptr_9QSWATPlus_7dataInC_BasinData;
  p->lsus = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->mergedLsus = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_BasinData(PyObject *o) {
  struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->lsus);
  Py_CLEAR(p->mergedLsus);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9QSWATPlus_7dataInC_BasinData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)o;
  if (p->lsus) {
    e = (*v)(p->lsus, a); if (e) return e;
  }
  if (p->mergedLsus) {
    e = (*v)(p->mergedLsus, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9QSWATPlus_7dataInC_BasinData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *)o;
  tmp = ((PyObject*)p->lsus);
  p->lsus = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->mergedLsus);
  p->mergedLsus = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_lsus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_lsus(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_4lsus_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_mergedLsus(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_mergedLsus(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_10mergedLsus_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_farDistance(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_farDistance(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_11farDistance_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_minElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_minElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12minElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_maxElevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_maxElevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12maxElevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_waterLanduse(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_waterLanduse(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_12waterLanduse_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9BasinData_waterId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_waterId(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9BasinData_7waterId_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_BasinData[] = {
  {"getLsus", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_3getLsus, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_2getLsus},
  {"addCell", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_5addCell, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_4addCell},
  {"getHruNumber", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_7getHruNumber, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_6getHruNumber},
  {"merge", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_9merge, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_8merge},
  {"setAreas", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_11setAreas, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_10setAreas},
  {"cropAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_13cropAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_12cropAreas},
  {"soilAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_15soilAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_14soilAreas},
  {"slopeAreas", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_17slopeAreas, METH_O, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_16slopeAreas},
  {"subbasinCellCount", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_19subbasinCellCount, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_18subbasinCellCount},
  {"subbasinArea", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_21subbasinArea, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_20subbasinArea},
  {"totalElevation", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_23totalElevation, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_22totalElevation},
  {"totalSlope", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_25totalSlope, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_24totalSlope},
  {"copyLsus", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_27copyLsus, METH_NOARGS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_26copyLsus},
  {"channelArea", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_29channelArea, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_28channelArea},
  {"dominantKey", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_31dominantKey, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_9BasinData_30dominantKey},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_33__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9BasinData_35__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_BasinData[] = {
  {(char *)"lsus", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_lsus, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_lsus, (char *)0, 0},
  {(char *)"mergedLsus", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_mergedLsus, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_mergedLsus, (char *)0, 0},
  {(char *)"farDistance", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_farDistance, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_farDistance, (char *)0, 0},
  {(char *)"minElevation", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_minElevation, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_minElevation, (char *)0, 0},
  {(char *)"maxElevation", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_maxElevation, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_maxElevation, (char *)0, 0},
  {(char *)"waterLanduse", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_waterLanduse, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_waterLanduse, (char *)0, 0},
  {(char *)"waterId", __pyx_getprop_9QSWATPlus_7dataInC_9BasinData_waterId, __pyx_setprop_9QSWATPlus_7dataInC_9BasinData_waterId, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_BasinData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.BasinData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_BasinData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Data held about subbasin.", /*tp_doc*/
  __pyx_tp_traverse_9QSWATPlus_7dataInC_BasinData, /*tp_traverse*/
  __pyx_tp_clear_9QSWATPlus_7dataInC_BasinData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_BasinData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_BasinData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_9BasinData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_BasinData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_ReachData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_ReachData(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperZ(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6upperZ_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerX(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerX_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerY(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerY_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerZ(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_9ReachData_6lowerZ_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_ReachData[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9ReachData_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_9ReachData_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_ReachData[] = {
  {(char *)"upperX", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperX, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperX, (char *)0, 0},
  {(char *)"upperY", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperY, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperY, (char *)0, 0},
  {(char *)"upperZ", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_upperZ, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_upperZ, (char *)0, 0},
  {(char *)"lowerX", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerX, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerX, (char *)0, 0},
  {(char *)"lowerY", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerY, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerY, (char *)0, 0},
  {(char *)"lowerZ", __pyx_getprop_9QSWATPlus_7dataInC_9ReachData_lowerZ, __pyx_setprop_9QSWATPlus_7dataInC_9ReachData_lowerZ, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_ReachData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.ReachData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_ReachData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_ReachData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Location and elevation of points at ends of reach, \n    draining from upper to lower.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_ReachData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_ReachData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_9ReachData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_ReachData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};
static struct __pyx_vtabstruct_9QSWATPlus_7dataInC_MergedChannelData __pyx_vtable_9QSWATPlus_7dataInC_MergedChannelData;

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_MergedChannelData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *)o);
  p->__pyx_vtab = __pyx_vtabptr_9QSWATPlus_7dataInC_MergedChannelData;
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_MergedChannelData(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_areaC(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_areaC(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5areaC_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_order(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_order(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5order_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_length(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_length(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_6length_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_slope(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_slope(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5slope_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_minEl(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_minEl(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5minEl_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_maxEl(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_maxEl(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5maxEl_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_MergedChannelData[] = {
  {"add", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_3add, METH_VARARGS|METH_KEYWORDS, __pyx_doc_9QSWATPlus_7dataInC_17MergedChannelData_2add},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_MergedChannelData[] = {
  {(char *)"areaC", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_areaC, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_areaC, (char *)0, 0},
  {(char *)"order", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_order, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_order, (char *)0, 0},
  {(char *)"length", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_length, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_length, (char *)0, 0},
  {(char *)"slope", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_slope, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_slope, (char *)0, 0},
  {(char *)"minEl", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_minEl, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_minEl, (char *)0, 0},
  {(char *)"maxEl", __pyx_getprop_9QSWATPlus_7dataInC_17MergedChannelData_maxEl, __pyx_setprop_9QSWATPlus_7dataInC_17MergedChannelData_maxEl, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_MergedChannelData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.MergedChannelData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_MergedChannelData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Drainage area in square metres, length in metres, and slope in m/m for a collection of merged channels.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_MergedChannelData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_MergedChannelData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_17MergedChannelData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_MergedChannelData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};

static PyObject *__pyx_tp_new_9QSWATPlus_7dataInC_LakeData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)o);
  p->inChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->lakeChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->outPoint = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->otherOutChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->centroid = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9QSWATPlus_7dataInC_LakeData(PyObject *o) {
  struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->inChLinks);
  Py_CLEAR(p->lakeChLinks);
  Py_CLEAR(p->outPoint);
  Py_CLEAR(p->otherOutChLinks);
  Py_CLEAR(p->centroid);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9QSWATPlus_7dataInC_LakeData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)o;
  if (p->inChLinks) {
    e = (*v)(p->inChLinks, a); if (e) return e;
  }
  if (p->lakeChLinks) {
    e = (*v)(p->lakeChLinks, a); if (e) return e;
  }
  if (p->outPoint) {
    e = (*v)(p->outPoint, a); if (e) return e;
  }
  if (p->otherOutChLinks) {
    e = (*v)(p->otherOutChLinks, a); if (e) return e;
  }
  if (p->centroid) {
    e = (*v)(p->centroid, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9QSWATPlus_7dataInC_LakeData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *p = (struct __pyx_obj_9QSWATPlus_7dataInC_LakeData *)o;
  tmp = ((PyObject*)p->inChLinks);
  p->inChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lakeChLinks);
  p->lakeChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->outPoint);
  p->outPoint = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->otherOutChLinks);
  p->otherOutChLinks = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->centroid);
  p->centroid = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_inChLinks(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_inChLinks(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9inChLinks_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_lakeChLinks(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_lakeChLinks(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_11lakeChLinks_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_outChLink(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_outChLink(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9outChLink_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_outPoint(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_outPoint(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8outPoint_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_otherOutChLinks(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_otherOutChLinks(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_15otherOutChLinks_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_area(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_area(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_4area_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_elevation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_elevation(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9elevation_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_centroid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_centroid(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_3__set__(o, v);
  }
  else {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_8centroid_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9QSWATPlus_7dataInC_8LakeData_waterRole(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_1__get__(o);
}

static int __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_waterRole(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9QSWATPlus_7dataInC_8LakeData_9waterRole_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9QSWATPlus_7dataInC_LakeData[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8LakeData_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9QSWATPlus_7dataInC_8LakeData_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9QSWATPlus_7dataInC_LakeData[] = {
  {(char *)"inChLinks", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_inChLinks, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_inChLinks, (char *)0, 0},
  {(char *)"lakeChLinks", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_lakeChLinks, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_lakeChLinks, (char *)0, 0},
  {(char *)"outChLink", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_outChLink, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_outChLink, (char *)0, 0},
  {(char *)"outPoint", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_outPoint, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_outPoint, (char *)0, 0},
  {(char *)"otherOutChLinks", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_otherOutChLinks, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_otherOutChLinks, (char *)0, 0},
  {(char *)"area", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_area, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_area, (char *)0, 0},
  {(char *)"elevation", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_elevation, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_elevation, (char *)0, 0},
  {(char *)"centroid", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_centroid, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_centroid, (char *)0, 0},
  {(char *)"waterRole", __pyx_getprop_9QSWATPlus_7dataInC_8LakeData_waterRole, __pyx_setprop_9QSWATPlus_7dataInC_8LakeData_waterRole, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9QSWATPlus_7dataInC_LakeData = {
  PyVarObject_HEAD_INIT(0, 0)
  "QSWATPlus.dataInC.LakeData", /*tp_name*/
  sizeof(struct __pyx_obj_9QSWATPlus_7dataInC_LakeData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9QSWATPlus_7dataInC_LakeData, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Data about lake defined by shapefile.", /*tp_doc*/
  __pyx_tp_traverse_9QSWATPlus_7dataInC_LakeData, /*tp_traverse*/
  __pyx_tp_clear_9QSWATPlus_7dataInC_LakeData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9QSWATPlus_7dataInC_LakeData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9QSWATPlus_7dataInC_LakeData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_9QSWATPlus_7dataInC_8LakeData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9QSWATPlus_7dataInC_LakeData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

static int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {
  static const char* internal_type_names[] = {
    "BasinData",
    "CellData",
    "ChannelRole",
    "LSUData",
    "LakeData",
    "MergedChannelData",
    "ReachData",
    "WaterBody",
    "WaterRole",
    "__pyx_ctuple_42512__long__and_double__and_double__and_double__and_double__and_double__and_int__etc",
    "__pyx_ctuple_42512__long__and_double__and_double__and_double__and_double__and_double__and_int__etc_struct",
    "__pyx_ctuple_48909__double__and_double__and_double__and_double__and_double__and_double__etc",
    "__pyx_ctuple_48909__double__and_double__and_double__and_double__and_double__and_double__etc_struct",
    "__pyx_ctuple_52c9__double__and_int__and_int__and_int__and_double__and_double__and_double__and_double__and_int__etc",
    "__pyx_ctuple_52c9__double__and_int__and_int__and_int__and_double__and_double__and_double__and_double__and_int__etc_struct",
    "__pyx_ctuple_b70c9__int__and_double__and_double__and_double__and_double__and_double__and_int__etc",
    "__pyx_ctuple_b70c9__int__and_double__and_double__and_double__and_double__and_double__and_int__etc_struct",
    "__pyx_ctuple_cc2e8__int__and_double__and_int__and_int__and_double__and_double__and_double__and_double__etc",
    "__pyx_ctuple_cc2e8__int__and_double__and_int__and_int__and_double__and_double__and_double__and_double__etc_struct",
    "__pyx_ctuple_double",
    "__pyx_ctuple_double__and_double__and_double__and_double__and_int__and_double",
    "__pyx_ctuple_double__and_double__and_double__and_double__and_int__and_double_struct",
    "__pyx_ctuple_double__and_int__and_double__and_double__and_double__and_double",
    "__pyx_ctuple_double__and_int__and_double__and_double__and_double__and_double_struct",
    "__pyx_ctuple_double_struct",
    "__pyx_ctuple_int",
    "__pyx_ctuple_int__and_double",
    "__pyx_ctuple_int__and_double__and_double__and_double__and_double",
    "__pyx_ctuple_int__and_double__and_double__and_double__and_double_struct",
    "__pyx_ctuple_int__and_double_struct",
    "__pyx_ctuple_int__and_int",
    "__pyx_ctuple_int__and_int__and_int",
    "__pyx_ctuple_int__and_int__and_int__and_int",
    "__pyx_ctuple_int__and_int__and_int__and_int_struct",
    "__pyx_ctuple_int__and_int__and_int_struct",
    "__pyx_ctuple_int__and_int_struct",
    "__pyx_ctuple_int__and_long",
    "__pyx_ctuple_int__and_long_struct",
    "__pyx_ctuple_int_struct",
    "__pyx_ctuple_long__and_double__and_double__and_double__and_double",
    "__pyx_ctuple_long__and_double__and_double__and_double__and_double_struct",
    0
  };
  const char** type_name = internal_type_names;
  while (*type_name) {
    if (__Pyx_StrEq(name, *type_name)) {
      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);
      goto bad;
    }
    type_name++;
  }
  if (0);
  else {
    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;
  }
  return 0;
  bad:
  return -1;
}

static int
__Pyx_import_all_from(PyObject *locals, PyObject *v)
{
    PyObject *all = PyObject_GetAttrString(v, "__all__");
    PyObject *dict, *name, *value;
    int skip_leading_underscores = 0;
    int pos, err;
    if (all == NULL) {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError))
            return -1;
        PyErr_Clear();
        dict = PyObject_GetAttrString(v, "__dict__");
        if (dict == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError))
                return -1;
            PyErr_SetString(PyExc_ImportError,
            "from-import-* object has no __dict__ and no __all__");
            return -1;
        }
#if PY_MAJOR_VERSION < 3
        all = PyObject_CallMethod(dict, (char *)"keys", NULL);
#else
        all = PyMapping_Keys(dict);
#endif
        Py_DECREF(dict);
        if (all == NULL)
            return -1;
        skip_leading_underscores = 1;
    }
    for (pos = 0, err = 0; ; pos++) {
        name = PySequence_GetItem(all, pos);
        if (name == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_IndexError))
                err = -1;
            else
                PyErr_Clear();
            break;
        }
        if (skip_leading_underscores &&
#if PY_MAJOR_VERSION < 3
            PyString_Check(name) &&
            PyString_AS_STRING(name)[0] == '_')
#else
            PyUnicode_Check(name) &&
            PyUnicode_AS_UNICODE(name)[0] == '_')
#endif
        {
            Py_DECREF(name);
            continue;
        }
        value = PyObject_GetAttr(v, name);
        if (value == NULL)
            err = -1;
        else if (PyDict_CheckExact(locals))
            err = PyDict_SetItem(locals, name, value);
        else
            err = PyObject_SetItem(locals, name, value);
        Py_DECREF(name);
        Py_XDECREF(value);
        if (err != 0)
            break;
    }
    Py_DECREF(all);
    return err;
}
static int __pyx_import_star(PyObject* m) {
    int i;
    int ret = -1;
    char* s;
    PyObject *locals = 0;
    PyObject *list = 0;
#if PY_MAJOR_VERSION >= 3
    PyObject *utf8_name = 0;
#endif
    PyObject *name;
    PyObject *item;
    locals = PyDict_New();              if (!locals) goto bad;
    if (__Pyx_import_all_from(locals, m) < 0) goto bad;
    list = PyDict_Items(locals);        if (!list) goto bad;
    for(i=0; i<PyList_GET_SIZE(list); i++) {
        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);
        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);
#if PY_MAJOR_VERSION >= 3
        utf8_name = PyUnicode_AsUTF8String(name);
        if (!utf8_name) goto bad;
        s = PyBytes_AS_STRING(utf8_name);
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
        Py_DECREF(utf8_name); utf8_name = 0;
#else
        s = PyString_AsString(name);
        if (!s) goto bad;
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
#endif
    }
    ret = 0;
bad:
    Py_XDECREF(locals);
    Py_XDECREF(list);
#if PY_MAJOR_VERSION >= 3
    Py_XDECREF(utf8_name);
#endif
    return ret;
}



#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_dataInC(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_dataInC},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "dataInC",
    __pyx_k_QSWATPlus_A_QGIS_plugin_Create, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_BasinData, __pyx_k_BasinData, sizeof(__pyx_k_BasinData), 0, 0, 1, 1},
  {&__pyx_n_s_CellData, __pyx_k_CellData, sizeof(__pyx_k_CellData), 0, 0, 1, 1},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x11, __pyx_k_Incompatible_checksums_s_vs_0x11, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x11), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x4e, __pyx_k_Incompatible_checksums_s_vs_0x4e, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x4e), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x5b, __pyx_k_Incompatible_checksums_s_vs_0x5b, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x5b), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x62, __pyx_k_Incompatible_checksums_s_vs_0x62, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x62), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x66, __pyx_k_Incompatible_checksums_s_vs_0x66, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x66), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x7e, __pyx_k_Incompatible_checksums_s_vs_0x7e, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x7e), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x91, __pyx_k_Incompatible_checksums_s_vs_0x91, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x91), 0, 0, 1, 0},
  {&__pyx_n_s_LSUData, __pyx_k_LSUData, sizeof(__pyx_k_LSUData), 0, 0, 1, 1},
  {&__pyx_n_s_LakeData, __pyx_k_LakeData, sizeof(__pyx_k_LakeData), 0, 0, 1, 1},
  {&__pyx_n_s_MergedChannelData, __pyx_k_MergedChannelData, sizeof(__pyx_k_MergedChannelData), 0, 0, 1, 1},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_PyQt5_QtCore, __pyx_k_PyQt5_QtCore, sizeof(__pyx_k_PyQt5_QtCore), 0, 0, 1, 1},
  {&__pyx_n_s_PyQt5_QtGui, __pyx_k_PyQt5_QtGui, sizeof(__pyx_k_PyQt5_QtGui), 0, 0, 1, 1},
  {&__pyx_n_s_QSWATPlus_dataInC, __pyx_k_QSWATPlus_dataInC, sizeof(__pyx_k_QSWATPlus_dataInC), 0, 0, 1, 1},
  {&__pyx_n_s_ReachData, __pyx_k_ReachData, sizeof(__pyx_k_ReachData), 0, 0, 1, 1},
  {&__pyx_n_s_WaterBody, __pyx_k_WaterBody, sizeof(__pyx_k_WaterBody), 0, 0, 1, 1},
  {&__pyx_n_s__2, __pyx_k__2, sizeof(__pyx_k__2), 0, 0, 1, 1},
  {&__pyx_n_s_add, __pyx_k_add, sizeof(__pyx_k_add), 0, 0, 1, 1},
  {&__pyx_n_s_addCell, __pyx_k_addCell, sizeof(__pyx_k_addCell), 0, 0, 1, 1},
  {&__pyx_n_s_addCells, __pyx_k_addCells, sizeof(__pyx_k_addCells), 0, 0, 1, 1},
  {&__pyx_n_s_addWater, __pyx_k_addWater, sizeof(__pyx_k_addWater), 0, 0, 1, 1},
  {&__pyx_n_s_allowWater, __pyx_k_allowWater, sizeof(__pyx_k_allowWater), 0, 0, 1, 1},
  {&__pyx_n_s_area, __pyx_k_area, sizeof(__pyx_k_area), 0, 0, 1, 1},
  {&__pyx_n_s_areaC, __pyx_k_areaC, sizeof(__pyx_k_areaC), 0, 0, 1, 1},
  {&__pyx_n_s_areaCh, __pyx_k_areaCh, sizeof(__pyx_k_areaCh), 0, 0, 1, 1},
  {&__pyx_n_s_centroid, __pyx_k_centroid, sizeof(__pyx_k_centroid), 0, 0, 1, 1},
  {&__pyx_n_s_chLink, __pyx_k_chLink, sizeof(__pyx_k_chLink), 0, 0, 1, 1},
  {&__pyx_n_s_chLinksByLakes, __pyx_k_chLinksByLakes, sizeof(__pyx_k_chLinksByLakes), 0, 0, 1, 1},
  {&__pyx_n_s_channel, __pyx_k_channel, sizeof(__pyx_k_channel), 0, 0, 1, 1},
  {&__pyx_n_s_channelArea, __pyx_k_channelArea, sizeof(__pyx_k_channelArea), 0, 0, 1, 1},
  {&__pyx_n_s_channelData, __pyx_k_channelData, sizeof(__pyx_k_channelData), 0, 0, 1, 1},
  {&__pyx_n_s_channelLandscapeCropSoilSlopeNum, __pyx_k_channelLandscapeCropSoilSlopeNum, sizeof(__pyx_k_channelLandscapeCropSoilSlopeNum), 0, 0, 1, 1},
  {&__pyx_n_s_channelLengths, __pyx_k_channelLengths, sizeof(__pyx_k_channelLengths), 0, 0, 1, 1},
  {&__pyx_n_s_channelsData, __pyx_k_channelsData, sizeof(__pyx_k_channelsData), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_copyLsus, __pyx_k_copyLsus, sizeof(__pyx_k_copyLsus), 0, 0, 1, 1},
  {&__pyx_n_s_count, __pyx_k_count, sizeof(__pyx_k_count), 0, 0, 1, 1},
  {&__pyx_n_s_crop, __pyx_k_crop, sizeof(__pyx_k_crop), 0, 0, 1, 1},
  {&__pyx_n_s_cropAreas, __pyx_k_cropAreas, sizeof(__pyx_k_cropAreas), 0, 0, 1, 1},
  {&__pyx_n_s_cropNoData, __pyx_k_cropNoData, sizeof(__pyx_k_cropNoData), 0, 0, 1, 1},
  {&__pyx_n_s_cropSoilArea, __pyx_k_cropSoilArea, sizeof(__pyx_k_cropSoilArea), 0, 0, 1, 1},
  {&__pyx_n_s_cropSoilAreas, __pyx_k_cropSoilAreas, sizeof(__pyx_k_cropSoilAreas), 0, 0, 1, 1},
  {&__pyx_n_s_cropSoilSlopeAreas, __pyx_k_cropSoilSlopeAreas, sizeof(__pyx_k_cropSoilSlopeAreas), 0, 0, 1, 1},
  {&__pyx_n_s_cropSoilSlopeNumbers, __pyx_k_cropSoilSlopeNumbers, sizeof(__pyx_k_cropSoilSlopeNumbers), 0, 0, 1, 1},
  {&__pyx_kp_s_dataInC_pyx, __pyx_k_dataInC_pyx, sizeof(__pyx_k_dataInC_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_distCh, __pyx_k_distCh, sizeof(__pyx_k_distCh), 0, 0, 1, 1},
  {&__pyx_n_s_distChNoData, __pyx_k_distChNoData, sizeof(__pyx_k_distChNoData), 0, 0, 1, 1},
  {&__pyx_n_s_distSt, __pyx_k_distSt, sizeof(__pyx_k_distSt), 0, 0, 1, 1},
  {&__pyx_n_s_distStNoData, __pyx_k_distStNoData, sizeof(__pyx_k_distStNoData), 0, 0, 1, 1},
  {&__pyx_n_s_dominantKey, __pyx_k_dominantKey, sizeof(__pyx_k_dominantKey), 0, 0, 1, 1},
  {&__pyx_n_s_elevation, __pyx_k_elevation, sizeof(__pyx_k_elevation), 0, 0, 1, 1},
  {&__pyx_n_s_elevationNoData, __pyx_k_elevationNoData, sizeof(__pyx_k_elevationNoData), 0, 0, 1, 1},
  {&__pyx_n_s_existingWshed, __pyx_k_existingWshed, sizeof(__pyx_k_existingWshed), 0, 0, 1, 1},
  {&__pyx_n_s_farDistance, __pyx_k_farDistance, sizeof(__pyx_k_farDistance), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_getDominantHRU, __pyx_k_getDominantHRU, sizeof(__pyx_k_getDominantHRU), 0, 0, 1, 1},
  {&__pyx_n_s_getHruNumber, __pyx_k_getHruNumber, sizeof(__pyx_k_getHruNumber), 0, 0, 1, 1},
  {&__pyx_n_s_getLsus, __pyx_k_getLsus, sizeof(__pyx_k_getLsus), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_gv, __pyx_k_gv, sizeof(__pyx_k_gv), 0, 0, 1, 1},
  {&__pyx_n_s_hru, __pyx_k_hru, sizeof(__pyx_k_hru), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_isInlet, __pyx_k_isInlet, sizeof(__pyx_k_isInlet), 0, 0, 1, 1},
  {&__pyx_n_s_isOriginal, __pyx_k_isOriginal, sizeof(__pyx_k_isOriginal), 0, 0, 1, 1},
  {&__pyx_n_s_isOutlet, __pyx_k_isOutlet, sizeof(__pyx_k_isOutlet), 0, 0, 1, 1},
  {&__pyx_n_s_isPond, __pyx_k_isPond, sizeof(__pyx_k_isPond), 0, 0, 1, 1},
  {&__pyx_n_s_isReservoir, __pyx_k_isReservoir, sizeof(__pyx_k_isReservoir), 0, 0, 1, 1},
  {&__pyx_n_s_isUnknown, __pyx_k_isUnknown, sizeof(__pyx_k_isUnknown), 0, 0, 1, 1},
  {&__pyx_n_s_isclose, __pyx_k_isclose, sizeof(__pyx_k_isclose), 0, 0, 1, 1},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_itervalues, __pyx_k_itervalues, sizeof(__pyx_k_itervalues), 0, 0, 1, 1},
  {&__pyx_n_s_keepOriginal, __pyx_k_keepOriginal, sizeof(__pyx_k_keepOriginal), 0, 0, 1, 1},
  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_landscape, __pyx_k_landscape, sizeof(__pyx_k_landscape), 0, 0, 1, 1},
  {&__pyx_n_s_landscapeCropSoilSlopeNumbers, __pyx_k_landscapeCropSoilSlopeNumbers, sizeof(__pyx_k_landscapeCropSoilSlopeNumbers), 0, 0, 1, 1},
  {&__pyx_n_s_lastHru, __pyx_k_lastHru, sizeof(__pyx_k_lastHru), 0, 0, 1, 1},
  {&__pyx_n_s_length, __pyx_k_length, sizeof(__pyx_k_length), 0, 0, 1, 1},
  {&__pyx_n_s_lscape, __pyx_k_lscape, sizeof(__pyx_k_lscape), 0, 0, 1, 1},
  {&__pyx_n_s_lsuData, __pyx_k_lsuData, sizeof(__pyx_k_lsuData), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_makeReservoir, __pyx_k_makeReservoir, sizeof(__pyx_k_makeReservoir), 0, 0, 1, 1},
  {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {&__pyx_n_s_maxEl, __pyx_k_maxEl, sizeof(__pyx_k_maxEl), 0, 0, 1, 1},
  {&__pyx_n_s_maxKey, __pyx_k_maxKey, sizeof(__pyx_k_maxKey), 0, 0, 1, 1},
  {&__pyx_n_s_maxVal, __pyx_k_maxVal, sizeof(__pyx_k_maxVal), 0, 0, 1, 1},
  {&__pyx_n_s_merge, __pyx_k_merge, sizeof(__pyx_k_merge), 0, 0, 1, 1},
  {&__pyx_n_s_minEl, __pyx_k_minEl, sizeof(__pyx_k_minEl), 0, 0, 1, 1},
  {&__pyx_n_s_multiply, __pyx_k_multiply, sizeof(__pyx_k_multiply), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_nextHruNumber, __pyx_k_nextHruNumber, sizeof(__pyx_k_nextHruNumber), 0, 0, 1, 1},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_BasinData, __pyx_k_pyx_unpickle_BasinData, sizeof(__pyx_k_pyx_unpickle_BasinData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_CellData, __pyx_k_pyx_unpickle_CellData, sizeof(__pyx_k_pyx_unpickle_CellData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_LSUData, __pyx_k_pyx_unpickle_LSUData, sizeof(__pyx_k_pyx_unpickle_LSUData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_LakeData, __pyx_k_pyx_unpickle_LakeData, sizeof(__pyx_k_pyx_unpickle_LakeData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_MergedChannelData, __pyx_k_pyx_unpickle_MergedChannelData, sizeof(__pyx_k_pyx_unpickle_MergedChannelData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_ReachData, __pyx_k_pyx_unpickle_ReachData, sizeof(__pyx_k_pyx_unpickle_ReachData), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_WaterBody, __pyx_k_pyx_unpickle_WaterBody, sizeof(__pyx_k_pyx_unpickle_WaterBody), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_qgis_core, __pyx_k_qgis_core, sizeof(__pyx_k_qgis_core), 0, 0, 1, 1},
  {&__pyx_n_s_qgis_gui, __pyx_k_qgis_gui, sizeof(__pyx_k_qgis_gui), 0, 0, 1, 1},
  {&__pyx_n_s_redistribute, __pyx_k_redistribute, sizeof(__pyx_k_redistribute), 0, 0, 1, 1},
  {&__pyx_n_s_redistributeNodataAndWater, __pyx_k_redistributeNodataAndWater, sizeof(__pyx_k_redistributeNodataAndWater), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_rel_tol, __pyx_k_rel_tol, sizeof(__pyx_k_rel_tol), 0, 0, 1, 1},
  {&__pyx_n_s_removeHRU, __pyx_k_removeHRU, sizeof(__pyx_k_removeHRU), 0, 0, 1, 1},
  {&__pyx_n_s_removeWaterHRUs, __pyx_k_removeWaterHRUs, sizeof(__pyx_k_removeWaterHRUs), 0, 0, 1, 1},
  {&__pyx_n_s_resultHru, __pyx_k_resultHru, sizeof(__pyx_k_resultHru), 0, 0, 1, 1},
  {&__pyx_n_s_setAreas, __pyx_k_setAreas, sizeof(__pyx_k_setAreas), 0, 0, 1, 1},
  {&__pyx_n_s_setCropAreas, __pyx_k_setCropAreas, sizeof(__pyx_k_setCropAreas), 0, 0, 1, 1},
  {&__pyx_n_s_setInlet, __pyx_k_setInlet, sizeof(__pyx_k_setInlet), 0, 0, 1, 1},
  {&__pyx_n_s_setOutlet, __pyx_k_setOutlet, sizeof(__pyx_k_setOutlet), 0, 0, 1, 1},
  {&__pyx_n_s_setPond, __pyx_k_setPond, sizeof(__pyx_k_setPond), 0, 0, 1, 1},
  {&__pyx_n_s_setReservoir, __pyx_k_setReservoir, sizeof(__pyx_k_setReservoir), 0, 0, 1, 1},
  {&__pyx_n_s_setSlopeAreas, __pyx_k_setSlopeAreas, sizeof(__pyx_k_setSlopeAreas), 0, 0, 1, 1},
  {&__pyx_n_s_setSoilAreas, __pyx_k_setSoilAreas, sizeof(__pyx_k_setSoilAreas), 0, 0, 1, 1},
  {&__pyx_n_s_setdefault, __pyx_k_setdefault, sizeof(__pyx_k_setdefault), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_slope, __pyx_k_slope, sizeof(__pyx_k_slope), 0, 0, 1, 1},
  {&__pyx_n_s_slopeAreas, __pyx_k_slopeAreas, sizeof(__pyx_k_slopeAreas), 0, 0, 1, 1},
  {&__pyx_n_s_slopeNoData, __pyx_k_slopeNoData, sizeof(__pyx_k_slopeNoData), 0, 0, 1, 1},
  {&__pyx_n_s_slopeNumbers, __pyx_k_slopeNumbers, sizeof(__pyx_k_slopeNumbers), 0, 0, 1, 1},
  {&__pyx_n_s_slopeValue, __pyx_k_slopeValue, sizeof(__pyx_k_slopeValue), 0, 0, 1, 1},
  {&__pyx_n_s_soil, __pyx_k_soil, sizeof(__pyx_k_soil), 0, 0, 1, 1},
  {&__pyx_n_s_soilAreas, __pyx_k_soilAreas, sizeof(__pyx_k_soilAreas), 0, 0, 1, 1},
  {&__pyx_n_s_soilNoData, __pyx_k_soilNoData, sizeof(__pyx_k_soilNoData), 0, 0, 1, 1},
  {&__pyx_n_s_soilSlopeNumbers, __pyx_k_soilSlopeNumbers, sizeof(__pyx_k_soilSlopeNumbers), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_strahler, __pyx_k_strahler, sizeof(__pyx_k_strahler), 0, 0, 1, 1},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_subbasinArea, __pyx_k_subbasinArea, sizeof(__pyx_k_subbasinArea), 0, 0, 1, 1},
  {&__pyx_n_s_subbasinCellCount, __pyx_k_subbasinCellCount, sizeof(__pyx_k_subbasinCellCount), 0, 0, 1, 1},
  {&__pyx_n_s_table, __pyx_k_table, sizeof(__pyx_k_table), 0, 0, 1, 1},
  {&__pyx_n_s_target, __pyx_k_target, sizeof(__pyx_k_target), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_topo, __pyx_k_topo, sizeof(__pyx_k_topo), 0, 0, 1, 1},
  {&__pyx_n_s_totalElevation, __pyx_k_totalElevation, sizeof(__pyx_k_totalElevation), 0, 0, 1, 1},
  {&__pyx_n_s_totalSlope, __pyx_k_totalSlope, sizeof(__pyx_k_totalSlope), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_waterId, __pyx_k_waterId, sizeof(__pyx_k_waterId), 0, 0, 1, 1},
  {&__pyx_n_s_waterLanduse, __pyx_k_waterLanduse, sizeof(__pyx_k_waterLanduse), 0, 0, 1, 1},
  {&__pyx_n_s_waterRole, __pyx_k_waterRole, sizeof(__pyx_k_waterRole), 0, 0, 1, 1},
  {&__pyx_n_s_wb, __pyx_k_wb, sizeof(__pyx_k_wb), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_x1, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
  {&__pyx_n_s_x2, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_y1, __pyx_k_y1, sizeof(__pyx_k_y1), 0, 0, 1, 1},
  {&__pyx_n_s_y2, __pyx_k_y2, sizeof(__pyx_k_y2), 0, 0, 1, 1},
  {&__pyx_n_s_z1, __pyx_k_z1, sizeof(__pyx_k_z1), 0, 0, 1, 1},
  {&__pyx_n_s_z2, __pyx_k_z2, sizeof(__pyx_k_z2), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 837, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "QSWATPlus/dataInC.pyx":1186
 *         self.outChLink = -1
 *         ## subbasin, point id, point and elevation of outflow point
 *         self.outPoint = (-1, -1, None, 0)             # <<<<<<<<<<<<<<
 *         ## linknos of other outflowing channels
 *         self.otherOutChLinks = set()
 */
  __pyx_tuple_ = PyTuple_Pack(4, __pyx_int_neg_1, __pyx_int_neg_1, Py_None, __pyx_int_0); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 1186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "QSWATPlus/dataInC.pyx":838
 * 
 *     @staticmethod
 *     def getHruNumber(dict channelLandscapeCropSoilSlopeNumbers, int lastHru, int channel, int landscape, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to current hru count for the landscape unit)
 */
  __pyx_tuple__3 = PyTuple_Pack(13, __pyx_n_s_channelLandscapeCropSoilSlopeNum, __pyx_n_s_lastHru, __pyx_n_s_channel, __pyx_n_s_landscape, __pyx_n_s_crop, __pyx_n_s_soil, __pyx_n_s_slope, __pyx_n_s_resultHru, __pyx_n_s_cropSoilSlopeNumbers, __pyx_n_s_soilSlopeNumbers, __pyx_n_s_slopeNumbers, __pyx_n_s_hru, __pyx_n_s_landscapeCropSoilSlopeNumbers); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(7, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_dataInC_pyx, __pyx_n_s_getHruNumber, 838, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 838, __pyx_L1_error)

  /* "QSWATPlus/dataInC.pyx":1070
 * 
 *     @staticmethod
 *     def channelArea(dict channelData):             # <<<<<<<<<<<<<<
 *         """Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units."""
 * 
 */
  __pyx_tuple__5 = PyTuple_Pack(3, __pyx_n_s_channelData, __pyx_n_s_areaCh, __pyx_n_s_lsuData); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__5, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_dataInC_pyx, __pyx_n_s_channelArea, 1070, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) __PYX_ERR(0, 1070, __pyx_L1_error)

  /* "QSWATPlus/dataInC.pyx":1082
 * 
 *     @staticmethod
 *     def dominantKey(dict table):             # <<<<<<<<<<<<<<
 *         '''Find the dominant key for a dictionary table of numeric values,
 *         i.e. the key to the largest value.  Values are assumed to be non-negative.
 */
  __pyx_tuple__7 = PyTuple_Pack(5, __pyx_n_s_table, __pyx_n_s_maxKey, __pyx_n_s_maxVal, __pyx_n_s_key, __pyx_n_s_val); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(1, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_dataInC_pyx, __pyx_n_s_dominantKey, 1082, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 1082, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_CellData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__9 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __pyx_codeobj__10 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__9, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_CellData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__10)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__11 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);
  __pyx_codeobj__12 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_WaterBody, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__12)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__13 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_codeobj__14 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__13, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_LSUData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__14)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__15 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);
  __pyx_codeobj__16 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__15, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_BasinData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__16)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__17 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);
  __pyx_codeobj__18 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_ReachData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__18)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__19 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);
  __pyx_codeobj__20 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__19, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_MergedChannelData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__20)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__21 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);
  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__21, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_LakeData, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_items.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_setdefault.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_1eneg_06 = PyFloat_FromDouble(1e-06); if (unlikely(!__pyx_float_1eneg_06)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_18776598 = PyInt_FromLong(18776598L); if (unlikely(!__pyx_int_18776598)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_81859870 = PyInt_FromLong(81859870L); if (unlikely(!__pyx_int_81859870)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_95816225 = PyInt_FromLong(95816225L); if (unlikely(!__pyx_int_95816225)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_103203160 = PyInt_FromLong(103203160L); if (unlikely(!__pyx_int_103203160)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_107154008 = PyInt_FromLong(107154008L); if (unlikely(!__pyx_int_107154008)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_133009318 = PyInt_FromLong(133009318L); if (unlikely(!__pyx_int_133009318)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_153071342 = PyInt_FromLong(153071342L); if (unlikely(!__pyx_int_153071342)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_9QSWATPlus_7dataInC_CellData = &__pyx_vtable_9QSWATPlus_7dataInC_CellData;
  __pyx_vtable_9QSWATPlus_7dataInC_CellData.addCell = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, double, double, double, double, double))__pyx_f_9QSWATPlus_7dataInC_8CellData_addCell;
  __pyx_vtable_9QSWATPlus_7dataInC_CellData.addCells = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_8CellData_addCells;
  __pyx_vtable_9QSWATPlus_7dataInC_CellData.multiply = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_CellData *, double, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_8CellData_multiply;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_CellData) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_CellData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_CellData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_CellData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_CellData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_CellData, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 34, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_8CellData___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_8CellData___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_8CellData___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_8CellData___init__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_9QSWATPlus_7dataInC_CellData.tp_dict, __pyx_vtabptr_9QSWATPlus_7dataInC_CellData) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CellData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_CellData) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_CellData) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_CellData = &__pyx_type_9QSWATPlus_7dataInC_CellData;
  __pyx_vtabptr_9QSWATPlus_7dataInC_WaterBody = &__pyx_vtable_9QSWATPlus_7dataInC_WaterBody;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.addCell = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, double, double, double, double))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_addCell;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.addWater = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_addWater;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.multiply = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, double, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_multiply;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.setInlet = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setInlet;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.setOutlet = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setOutlet;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.setReservoir = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setReservoir;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.setPond = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_setPond;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.isInlet = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isInlet;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.isOutlet = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isOutlet;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.isUnknown = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isUnknown;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.isReservoir = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isReservoir;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.isPond = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_isPond;
  __pyx_vtable_9QSWATPlus_7dataInC_WaterBody.copy = (struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_WaterBody *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9WaterBody_copy;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_WaterBody) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_WaterBody.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_WaterBody.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_WaterBody.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_WaterBody.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_WaterBody, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 109, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9WaterBody___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9WaterBody___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_9WaterBody___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_9WaterBody___init__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_9QSWATPlus_7dataInC_WaterBody.tp_dict, __pyx_vtabptr_9QSWATPlus_7dataInC_WaterBody) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_WaterBody, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_WaterBody) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_WaterBody) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_WaterBody = &__pyx_type_9QSWATPlus_7dataInC_WaterBody;
  __pyx_vtabptr_9QSWATPlus_7dataInC_LSUData = &__pyx_vtable_9QSWATPlus_7dataInC_LSUData;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.cropSoilAreas = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.cropSoilArea = (double (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilArea;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.cropArea = (double (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int))__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropArea;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.cropSoilSlopeAreas = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_cropSoilSlopeAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.getDominantHRU = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_getDominantHRU;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.redistribute = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, double, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_redistribute;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.redistributeNodataAndWater = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, PyObject *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_redistributeNodataAndWater;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.removeHRU = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_removeHRU;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.removeWaterHRUs = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_removeWaterHRUs;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.setCropAreas = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_setCropAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.setSoilAreas = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_setSoilAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.setSlopeAreas = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_setSlopeAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.nextHruNumber = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_nextHruNumber;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.getHruNumber = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int, int, int))__pyx_f_9QSWATPlus_7dataInC_7LSUData_getHruNumber;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.copy = (struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_copy;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.copyHRUMap = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *))__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyHRUMap;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.copyCropSoilSlopeNumbers = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *))__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyCropSoilSlopeNumbers;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.copyAreaMap = (PyObject *(*)(PyObject *))__pyx_f_9QSWATPlus_7dataInC_7LSUData_copyAreaMap;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.merge = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_merge;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.makeReservoir = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_LSUData *, double, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_7LSUData_makeReservoir;
  __pyx_vtable_9QSWATPlus_7dataInC_LSUData.mergeMaps = (void (*)(PyObject *, PyObject *))__pyx_f_9QSWATPlus_7dataInC_7LSUData_mergeMaps;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_LSUData) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_LSUData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_LSUData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_LSUData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_LSUData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_LSUData, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 229, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_7LSUData___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_7LSUData___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_7LSUData___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_7LSUData___init__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_9QSWATPlus_7dataInC_LSUData.tp_dict, __pyx_vtabptr_9QSWATPlus_7dataInC_LSUData) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LSUData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_LSUData) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_LSUData) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_LSUData = &__pyx_type_9QSWATPlus_7dataInC_LSUData;
  __pyx_vtabptr_9QSWATPlus_7dataInC_BasinData = &__pyx_vtable_9QSWATPlus_7dataInC_BasinData;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.getLsus = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_getLsus;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.addCell = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int, int, int, int, double, double, double, double, double, double, double, PyObject *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_addCell;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.merge = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_merge;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.setAreas = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, PyObject *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_setAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.cropAreas = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_cropAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.soilAreas = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_soilAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.slopeAreas = (PyObject *(*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_slopeAreas;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.subbasinCellCount = (int (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinCellCount;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.subbasinArea = (double (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_subbasinArea;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.totalElevation = (double (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_totalElevation;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.totalSlope = (double (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_totalSlope;
  __pyx_vtable_9QSWATPlus_7dataInC_BasinData.copyLsus = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_BasinData *, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_9BasinData_copyLsus;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_BasinData) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_BasinData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_BasinData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_BasinData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_BasinData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_BasinData, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 733, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9BasinData___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9BasinData___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_9BasinData___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_9BasinData___init__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_9QSWATPlus_7dataInC_BasinData.tp_dict, __pyx_vtabptr_9QSWATPlus_7dataInC_BasinData) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_BasinData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_BasinData) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_BasinData) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_BasinData = &__pyx_type_9QSWATPlus_7dataInC_BasinData;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_ReachData) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_ReachData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_ReachData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_ReachData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_ReachData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_ReachData, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1098, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9ReachData___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_9ReachData___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_9ReachData___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_9ReachData___init__;
    }
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ReachData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_ReachData) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_ReachData) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_ReachData = &__pyx_type_9QSWATPlus_7dataInC_ReachData;
  __pyx_vtabptr_9QSWATPlus_7dataInC_MergedChannelData = &__pyx_vtable_9QSWATPlus_7dataInC_MergedChannelData;
  __pyx_vtable_9QSWATPlus_7dataInC_MergedChannelData.add = (void (*)(struct __pyx_obj_9QSWATPlus_7dataInC_MergedChannelData *, double, int, double, double, double, double, int __pyx_skip_dispatch))__pyx_f_9QSWATPlus_7dataInC_17MergedChannelData_add;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_MergedChannelData) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_MergedChannelData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_MergedChannelData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_MergedChannelData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_MergedChannelData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_9QSWATPlus_7dataInC_MergedChannelData, "__init__"); if (unlikely(!wrapper)) __PYX_ERR(0, 1126, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_9QSWATPlus_7dataInC_17MergedChannelData___init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_9QSWATPlus_7dataInC_17MergedChannelData___init__.doc = __pyx_doc_9QSWATPlus_7dataInC_17MergedChannelData___init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_9QSWATPlus_7dataInC_17MergedChannelData___init__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_9QSWATPlus_7dataInC_MergedChannelData.tp_dict, __pyx_vtabptr_9QSWATPlus_7dataInC_MergedChannelData) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_MergedChannelData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_MergedChannelData) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_MergedChannelData) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_MergedChannelData = &__pyx_type_9QSWATPlus_7dataInC_MergedChannelData;
  if (PyType_Ready(&__pyx_type_9QSWATPlus_7dataInC_LakeData) < 0) __PYX_ERR(0, 1164, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9QSWATPlus_7dataInC_LakeData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9QSWATPlus_7dataInC_LakeData.tp_dictoffset && __pyx_type_9QSWATPlus_7dataInC_LakeData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9QSWATPlus_7dataInC_LakeData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LakeData, (PyObject *)&__pyx_type_9QSWATPlus_7dataInC_LakeData) < 0) __PYX_ERR(0, 1164, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9QSWATPlus_7dataInC_LakeData) < 0) __PYX_ERR(0, 1164, __pyx_L1_error)
  __pyx_ptype_9QSWATPlus_7dataInC_LakeData = &__pyx_type_9QSWATPlus_7dataInC_LakeData;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initdataInC(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initdataInC(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_dataInC(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_dataInC(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_dataInC(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'dataInC' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_dataInC(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("dataInC", __pyx_methods, __pyx_k_QSWATPlus_A_QGIS_plugin_Create, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_QSWATPlus__dataInC) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "QSWATPlus.dataInC")) {
      if (unlikely(PyDict_SetItemString(modules, "QSWATPlus.dataInC", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "QSWATPlus/dataInC.pyx":28
 * 
 * # Import the PyQt and QGIS libraries
 * from PyQt5.QtCore import *  # @UnusedWildImport             # <<<<<<<<<<<<<<
 * from PyQt5.QtGui import *  # @UnusedWildImport
 * from qgis.core import * # @UnusedWildImport
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s__2);
  __Pyx_GIVEREF(__pyx_n_s__2);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__2);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_PyQt5_QtCore, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_import_star(__pyx_t_2) < 0) __PYX_ERR(0, 28, __pyx_L1_error);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":29
 * # Import the PyQt and QGIS libraries
 * from PyQt5.QtCore import *  # @UnusedWildImport
 * from PyQt5.QtGui import *  # @UnusedWildImport             # <<<<<<<<<<<<<<
 * from qgis.core import * # @UnusedWildImport
 * from qgis.gui import * # @UnusedWildImport
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s__2);
  __Pyx_GIVEREF(__pyx_n_s__2);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__2);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_PyQt5_QtGui, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_import_star(__pyx_t_1) < 0) __PYX_ERR(0, 29, __pyx_L1_error);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":30
 * from PyQt5.QtCore import *  # @UnusedWildImport
 * from PyQt5.QtGui import *  # @UnusedWildImport
 * from qgis.core import * # @UnusedWildImport             # <<<<<<<<<<<<<<
 * from qgis.gui import * # @UnusedWildImport
 * import math
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s__2);
  __Pyx_GIVEREF(__pyx_n_s__2);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__2);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_qgis_core, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_import_star(__pyx_t_2) < 0) __PYX_ERR(0, 30, __pyx_L1_error);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":31
 * from PyQt5.QtGui import *  # @UnusedWildImport
 * from qgis.core import * # @UnusedWildImport
 * from qgis.gui import * # @UnusedWildImport             # <<<<<<<<<<<<<<
 * import math
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s__2);
  __Pyx_GIVEREF(__pyx_n_s__2);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__2);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_qgis_gui, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_import_star(__pyx_t_1) < 0) __PYX_ERR(0, 31, __pyx_L1_error);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":32
 * from qgis.core import * # @UnusedWildImport
 * from qgis.gui import * # @UnusedWildImport
 * import math             # <<<<<<<<<<<<<<
 * 
 * cdef class CellData:
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_math, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_1) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "QSWATPlus/dataInC.pyx":838
 * 
 *     @staticmethod
 *     def getHruNumber(dict channelLandscapeCropSoilSlopeNumbers, int lastHru, int channel, int landscape, int crop, int soil, int slope):             # <<<<<<<<<<<<<<
 *         """
 *         Return HRU number (new if necessary, adding one to current hru count for the landscape unit)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_9BasinData_7getHruNumber, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_getHruNumber, __pyx_t_1) < 0) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "QSWATPlus/dataInC.pyx":837
 *                 lsuData.hruMap[hru] = cellData
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def getHruNumber(dict channelLandscapeCropSoilSlopeNumbers, int lastHru, int channel, int landscape, int crop, int soil, int slope):
 *         """
 */
  __Pyx_GetNameInClass(__pyx_t_1, (PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData, __pyx_n_s_getHruNumber); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_getHruNumber, __pyx_t_2) < 0) __PYX_ERR(0, 838, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "QSWATPlus/dataInC.pyx":1070
 * 
 *     @staticmethod
 *     def channelArea(dict channelData):             # <<<<<<<<<<<<<<
 *         """Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units."""
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_9BasinData_29channelArea, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_channelArea, __pyx_t_2) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "QSWATPlus/dataInC.pyx":1069
 *                 self.mergedLsus[channel][landscape] = lsuData.copy()
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def channelArea(dict channelData):
 *         """Return area (land and water) draining to channel: the sum of the areas of the channel's landscape units."""
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData, __pyx_n_s_channelArea); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_channelArea, __pyx_t_1) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "QSWATPlus/dataInC.pyx":1082
 * 
 *     @staticmethod
 *     def dominantKey(dict table):             # <<<<<<<<<<<<<<
 *         '''Find the dominant key for a dictionary table of numeric values,
 *         i.e. the key to the largest value.  Values are assumed to be non-negative.
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_9BasinData_31dominantKey, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_dominantKey, __pyx_t_1) < 0) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "QSWATPlus/dataInC.pyx":1081
 *         return areaCh
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def dominantKey(dict table):
 *         '''Find the dominant key for a dictionary table of numeric values,
 */
  __Pyx_GetNameInClass(__pyx_t_1, (PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData, __pyx_n_s_dominantKey); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_9QSWATPlus_7dataInC_BasinData->tp_dict, __pyx_n_s_dominantKey, __pyx_t_2) < 0) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_9QSWATPlus_7dataInC_BasinData);

  /* "(tree fragment)":1
 * def __pyx_unpickle_CellData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_1__pyx_unpickle_CellData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_CellData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_CellData__set_state(<CellData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_CellData__set_state(CellData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.actHRUNum = __pyx_state[0]; __pyx_result.area = __pyx_state[1]; __pyx_result.cellCount = __pyx_state[2]; __pyx_result.crop = __pyx_state[3]; __pyx_result.totalElevation = __pyx_state[4]; __pyx_result.totalLatitude = __pyx_state[5]; __pyx_result.totalLongitude = __pyx_state[6]; __pyx_result.totalSlope = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_3__pyx_unpickle_WaterBody, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_WaterBody, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_LSUData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_5__pyx_unpickle_LSUData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_LSUData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_LSUData__set_state(<LSUData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_LSUData__set_state(LSUData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.area = __pyx_state[0]; __pyx_result.cellCount = __pyx_state[1]; __pyx_result.channelLength = __pyx_state[2]; __pyx_result.channelOrder = __pyx_state[3]; __pyx_result.cropAreas = __pyx_state[4]; __pyx_result.cropSoilSlopeArea = __pyx_state[5]; __pyx_result.cropSoilSlopeNumbers = __pyx_state[6]; __pyx_result.farDistance = __pyx_state[7]; __pyx_result.farElevation = __pyx_state[8]; __pyx_result.farPointX = __pyx_state[9]; __pyx_result.farPointY = __pyx_state[10]; __pyx_result.hruMap = __pyx_state[11]; __pyx_result.lastHru = __pyx_state[12]; __pyx_result.midPointX = __pyx_state[13]; __pyx_result.midPointY = __pyx_state[14]; __pyx_result.originalCropAreas = __pyx_state[15]; __pyx_result.originalSlopeAreas = __pyx_state[16]; __pyx_result.originalSoilAreas = __pyx_state[17]; __pyx_result.outletElevation = __pyx_state[18]; __pyx_result.slopeAreas = __pyx_state[19]; __pyx_result.soilAreas = __pyx_state[20]; __pyx_result.sourceElevation = __pyx_state[21]; __pyx_result.totalElevation = __pyx_state[22]; __pyx_result.totalLatitude = __pyx_state[23]; __pyx_result.totalLongitude = __pyx_state[24]; __pyx_result.totalSlope = __pyx_state[25]; __pyx_result.waterBody = __pyx_state[26]
 *     if len(__pyx_state) > 27 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_7__pyx_unpickle_BasinData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_BasinData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_ReachData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_9__pyx_unpickle_ReachData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_ReachData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_ReachData__set_state(<ReachData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ReachData__set_state(ReachData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.lowerX = __pyx_state[0]; __pyx_result.lowerY = __pyx_state[1]; __pyx_result.lowerZ = __pyx_state[2]; __pyx_result.upperX = __pyx_state[3]; __pyx_result.upperY = __pyx_state[4]; __pyx_result.upperZ = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_11__pyx_unpickle_MergedChannelData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_MergedChannelData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_LakeData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9QSWATPlus_7dataInC_13__pyx_unpickle_LakeData, NULL, __pyx_n_s_QSWATPlus_dataInC); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_LakeData, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "QSWATPlus/dataInC.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * # cython: language_level=3
 * '''
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init QSWATPlus.dataInC", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init QSWATPlus.dataInC");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* DelItemInt */
static int __Pyx_DelItem_Generic(PyObject *o, PyObject *j) {
    int r;
    if (!j) return -1;
    r = PyObject_DelItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_DelItemInt_Fast(PyObject *o, Py_ssize_t i,
                                               CYTHON_UNUSED int is_list, CYTHON_NCP_UNUSED int wraparound) {
#if !CYTHON_USE_TYPE_SLOTS
    if (is_list || PySequence_Check(o)) {
        return PySequence_DelItem(o, i);
    }
#else
    PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
    if (likely(m && m->sq_ass_item)) {
        if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
            Py_ssize_t l = m->sq_length(o);
            if (likely(l >= 0)) {
                i += l;
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    return -1;
                PyErr_Clear();
            }
        }
        return m->sq_ass_item(o, i, (PyObject *)NULL);
    }
#endif
    return __Pyx_DelItem_Generic(o, PyInt_FromSsize_t(i));
}

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod0 */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_ASSUME_SAFE_MACROS
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

/* py_dict_items */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Items(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_items, d);
    else
        return PyDict_Items(d);
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* SetItemInt */
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o)))
#else
    if (is_list || PySequence_Check(o))
#endif
    {
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* dict_setdefault */
static CYTHON_INLINE PyObject *__Pyx_PyDict_SetDefault(PyObject *d, PyObject *key, PyObject *default_value,
                                                       CYTHON_UNUSED int is_safe_type) {
    PyObject* value;
#if PY_VERSION_HEX >= 0x030400A0
    if ((1)) {
        value = PyDict_SetDefault(d, key, default_value);
        if (unlikely(!value)) return NULL;
        Py_INCREF(value);
#else
    if (is_safe_type == 1 || (is_safe_type == -1 &&
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
            (PyUnicode_CheckExact(key) || PyString_CheckExact(key) || PyLong_CheckExact(key)))) {
        value = PyDict_GetItemWithError(d, key);
        if (unlikely(!value)) {
            if (unlikely(PyErr_Occurred()))
                return NULL;
            if (unlikely(PyDict_SetItem(d, key, default_value) == -1))
                return NULL;
            value = default_value;
        }
        Py_INCREF(value);
#else
            (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key) || PyLong_CheckExact(key)))) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            if (unlikely(PyDict_SetItem(d, key, default_value) == -1))
                return NULL;
            value = default_value;
        }
        Py_INCREF(value);
#endif
#endif
    } else {
        value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_setdefault, d, key, default_value);
    }
    return value;
}

/* Import */
    static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
    static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* RaiseException */
    #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* HasAttr */
    static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* PyObject_GenericGetAttrNoDict */
    #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
    #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
    static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* SetupReduce */
    static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* GetNameInClass */
    static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* CLineInTraceback */
    #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
    static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
    #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
    #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
    static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
    static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
    static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
    #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CStringEquals */
    static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    return *s1 == *s2;
}

/* CheckBinaryVersion */
    static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
    static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
